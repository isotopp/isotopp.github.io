<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on Die wunderbare Welt von Isotopp</title>
    <link>https://blog.koehntopp.info/tags/security.html</link>
    <description>Recent content in Security on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>kris-blog@koehntopp.de (Kristian Köhntopp)</managingEditor>

    
    <webMaster>kris-blog@koehntopp.de (Kristian Köhntopp)</webMaster>

    
    <lastBuildDate>Mon, 04 Nov 2024 18:58:13 +0000</lastBuildDate><atom:link href="https://blog.koehntopp.info/tags/security/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Crowdstroke</title>
      <link>https://blog.koehntopp.info/2024/07/22/crowdstroke.html</link>
      <pubDate>Mon, 22 Jul 2024 04:05:06 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2024/07/22/crowdstroke.html</guid>
      <description>&lt;p&gt;This is the Monday after the Friday
when Crowdstrike took out a good 1% of all Windows machines worldwide with a botched update.&lt;/p&gt;
&lt;h1 id=&#34;some-takes&#34;&gt;
    &lt;a href=&#34;#some-takes&#34;&gt;
	Some Takes
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/07/crowdstroke-01.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;h2 id=&#34;crowdstrike&#34;&gt;
    &lt;a href=&#34;#crowdstrike&#34;&gt;
	Crowdstrike
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The company did release a statement with
&amp;ldquo;&lt;a href=&#34;https://www.crowdstrike.com/blog/falcon-update-for-windows-hosts-technical-details/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Technical Details&lt;/a&gt;

&amp;rdquo;.
This is a big nothingburger.
They are confirming what we already knew.
Nothing is said about the server side, root causes and the chain of process failures that led to this incident.&lt;/p&gt;
&lt;h2 id=&#34;martin-seeger&#34;&gt;
    &lt;a href=&#34;#martin-seeger&#34;&gt;
	Martin Seeger
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Martin Seeger compares this to the XZ Incident in Open Source in
&lt;a href=&#34;https://infosec.exchange/@masek/112817758224618946&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a post&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We are now at t+26h.
Please compare
how much we knew about the xz-attack after less than a day with what
we know about the chain of events of giant outage yesterday.&lt;/p&gt;
&lt;p&gt;If something similar had been caused by an OSS component,
we would see congress discussing a ban on open software in critical infrastructure already.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;kevin-beaumont&#34;&gt;
    &lt;a href=&#34;#kevin-beaumont&#34;&gt;
	Kevin Beaumont
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Kevin Beaumont gives the kill count in
&lt;a href=&#34;https://cyberplace.social/@GossiTheDog/112819549722486621&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;another post&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Microsoft estimate almost 9 million Windows devices are impacted by the CrowdStrike incident
(likely from crash telemetry).
&lt;a href=&#34;https://blogs.microsoft.com/blog/2024/07/20/helping-our-customers-through-the-crowdstrike-outage/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;link to microsoft&lt;/a&gt;

&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But the outage did not affect just any one percent of all Windows machines,
but specifically, the one percent
that due to use in commercial environments with special requirements had Crowdstrike installed.
That is particularly funny, because the
&lt;a href=&#34;https://www.crowdstrike.com/terms-and-conditions-de/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ToS of Crowdstrike&lt;/a&gt;


says &amp;ldquo;not liable, not highly available, not suitable for anything important, and by the way, you are on your own&amp;rdquo;.
I am sure this will be contested in court,
but in any case, the liability clauses of anything else in the market are very similar.&lt;/p&gt;
&lt;h2 id=&#34;manuel-atug&#34;&gt;
    &lt;a href=&#34;#manuel-atug&#34;&gt;
	Manuel Atug
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/posts/manuel-honkhase-atug-820b27241_crowdstrike-kritis-activity-7220713390443241472-1EMl/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Manual Atug posts on LinkedIn&lt;/a&gt;


about this fact, and the comments section is largely in
&lt;a href=&#34;https://en.wikipedia.org/wiki/Five_stages_of_grief&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the denial stage of grief&lt;/a&gt;

.
Mostly people resign (&amp;ldquo;All EULA are like this.&amp;rdquo;),
think product liability is never going to be a thing,
and even ask how they are supposed to test this, or implement staggered rollouts for AV and endpoint security updates.&lt;/p&gt;
&lt;p&gt;That is not how KRITIS works.
If an outage on a desktop can affect flight operations or supermarket cash registers,
the desktops are in scope.
And the Crowdstrike outage, on the desktop, had an impact on travel, sales and other systems.
That means it&amp;rsquo;s in scope, and the testing, rollout and EULA are not adequate.&lt;/p&gt;
&lt;h2 id=&#34;lennart-poettering&#34;&gt;
    &lt;a href=&#34;#lennart-poettering&#34;&gt;
	Lennart Poettering
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Windows itself is badly prepared for such an outage.
Lennart Poettering (somewhat smugly)
&lt;a href=&#34;https://mastodon.social/@pid_eins/112818864687187963&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;in a post&lt;/a&gt;


points out that&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So, if you ask me what my takeaway from the Crowdstrike issue is, I&amp;rsquo;d say:
boot counting/boot assessment/automatic fallback should really be a MUST for today&amp;rsquo;s systems.
Before* you invoke your first kernel you need
have tracking of boot attempts and a logic for falling back to older versions automatically.
It&amp;rsquo;s a major shortcoming that this is not default behaviour of today&amp;rsquo;s distros, in particular commercial ones.&lt;/p&gt;
&lt;p&gt;Of course systemd has supported this for a long time:
&lt;a href=&#34;https://systemd.io/AUTOMATIC_BOOT_ASSESSMENT/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Automatic Boot Assessment&lt;/a&gt;

&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Windows does not do that, but Linux could.
If commercial Linux distros were to use this feature.&lt;/p&gt;
&lt;p&gt;MacOS also would not have been affected.
Apple prohibits security software implemented as device drivers,
because they &lt;a href=&#34;https://blog.koehntopp.info/2018/06/18/websense-dlp-gives-instant-root.html&#34;&gt;tend to be flawed&lt;/a&gt;

.
Instead, Apple provides a framework, System Extensions,
in which a non-privileged process can run a security scanning process safely and in a way
where a crash does not take down the system.
Microsoft claims they can&amp;rsquo;t provide this
because due to contracts with the EU they are bound to give security vendors the same API as they are using themselves.
That is, of course, bullshit.
Defender could use such an API, and then everybody else would have to, as well, because that &lt;em&gt;is&lt;/em&gt; the API.&lt;/p&gt;
&lt;h2 id=&#34;stefan-eissing&#34;&gt;
    &lt;a href=&#34;#stefan-eissing&#34;&gt;
	Stefan Eissing
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Stefan Eissing describes what the &lt;a href=&#34;&#34;&gt;mod_md&lt;/a&gt;

 certificate renewal process does.&lt;/p&gt;
&lt;p&gt;Apache mod_md is a module for the Apache web server that implements the ACME protocol as spoken by Let&amp;rsquo;s Encrypt.
Here is how he &lt;a href=&#34;https://chaos.social/@icing/112829370177074835&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;describes the update&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How Apache ACME (mod_md) gets you a new certificate:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;all ACME communication are done as unprivileged user&lt;/li&gt;
&lt;li&gt;all certificates from the CA are parsed as unprivileged user before storing them&lt;/li&gt;
&lt;li&gt;activation, as privileged user, parses again before replacing production as a last fail safe.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Since 2017.&lt;/p&gt;
&lt;p&gt;Typical over-engineering. What are the chances a CA sends you a borked file?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is what Crowdstrike did not do, in the client.&lt;/p&gt;
&lt;p&gt;So, what can we learn, not having a proper Root Cause Analysis from the vendor, four days later?&lt;/p&gt;
&lt;h1 id=&#34;learnings&#34;&gt;
    &lt;a href=&#34;#learnings&#34;&gt;
	Learnings
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;windows&#34;&gt;
    &lt;a href=&#34;#windows&#34;&gt;
	Windows
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows does not offer the equivalent of the macOS System Extension API,
in which an iterator for files is provided by the OS
and all security software is running with System Extension Capability,
but as an otherwise unprivileged user.&lt;/li&gt;
&lt;li&gt;Windows does not offer the equivalent of the Linux eBPF framework,
which allows vendors to implement probes in a safer, less intrusive and more resilient way than using raw C.&lt;/li&gt;
&lt;li&gt;Windows does not protect against recoverable device driver crashes such as Linux (Kernel Oops vs. Kernel Crash).&lt;/li&gt;
&lt;li&gt;Windows does not do automatic Boot Assessment and Rollback,
and manual rollback is complicated with disk encryption deployed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;crowdstrike-1&#34;&gt;
    &lt;a href=&#34;#crowdstrike-1&#34;&gt;
	Crowdstrike
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Crowdstrike implements a kernel process or driver,
which parses config files in a privileged kernel context which can lead to crash on boot
(which is remediated by deleting a config file)
&lt;ul&gt;
&lt;li&gt;This is a bad architecture from the 1990ies.&lt;/li&gt;
&lt;li&gt;Crowdstrike could implement a &amp;ldquo;System Extension&amp;rdquo; like static driver themselves,
and run the analysis in an unprivileged user account.
They do not have to wait for Microsoft for such an API.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Crowdstrike seems to use C or C++ instead of a memory safe language such as Rust.
&lt;ul&gt;
&lt;li&gt;Crashing a Rust-written driver in the way demonstrated would be much harder.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;There is no public documentation on the functioning, configuration or the data processed by Crowdstrike in their cloud.
It is weird that this can be even done in the EU, being GDPR-compliant and all.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;enterprises&#34;&gt;
    &lt;a href=&#34;#enterprises&#34;&gt;
	Enterprises
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Enterprises roll out such updates in an uncontrolled way.
No local testing, no staggered rollouts.
Complete absence of a proper Change Management process.&lt;/li&gt;
&lt;li&gt;The fact
that large Enterprises operating KRITIS have fired thousands of employees within the last 12 months also contributed,
for example, by the inability to implement proper testing and staggered rollout.
Non-functional decisions have functional consequences.
Enterprises have lost critical institutional knowledge and functional execution capabilities.&lt;/li&gt;
&lt;li&gt;Enterprises use such software in the critical path of KRITIS systems.
While not directly in regulated OT, the outage did affect the proper functioning of KRITIS systems,
and is therefore in scope.
&lt;ul&gt;
&lt;li&gt;This also suggests &lt;a href=&#34;https://blog.koehntopp.info/2023/02/18/this-is-not-a-drill.html&#34;&gt;inadequate BCM testing&lt;/a&gt;

.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In summary,
we are observing a multilateral process breakdown leading to a KRITIS outage,
indicating that we do have compliance driven architecture instead of an actual security process.&lt;/p&gt;
&lt;p&gt;See also: &lt;a href=&#34;https://blog.koehntopp.info/2024/02/10/snake-oil.html&#34;&gt;Snake Oil&lt;/a&gt;

,
especially the guinea pig at the end.
Some things can only be made bearable with cute guinea pig photos.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Snake Oil</title>
      <link>https://blog.koehntopp.info/2024/02/10/snake-oil.html</link>
      <pubDate>Sat, 10 Feb 2024 01:02:03 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2024/02/10/snake-oil.html</guid>
      <description>&lt;p&gt;Dieser Text ist auch in
&lt;a href=&#34;https://blog.koehntopp.info/2024/02/09/schlangenoel.html&#34;&gt;deutscher Sprache&lt;/a&gt;

 vorhanden.&lt;/p&gt;
&lt;p&gt;This week was &amp;ldquo;Broken Security Software Advertising Week.&amp;rdquo;&lt;/p&gt;
&lt;h1 id=&#34;fortigate-and-ivanti&#34;&gt;
    &lt;a href=&#34;#fortigate-and-ivanti&#34;&gt;
	Fortigate and Ivanti
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;First off, &lt;strong&gt;today&lt;/strong&gt; was Fortigate patch day:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/02/schlangenoel-01.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;CVE-2024-23113, CVSSV3 Score 9.8, Unauthorized Code Execution, &amp;ldquo;Format String Bug&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;A use of &lt;a href=&#34;https://cwe.mitre.org/data/definitions/134.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;externally-controlled format string&lt;/a&gt;

 vulnerability
in FortiOS &lt;code&gt;fgfmd&lt;/code&gt; daemon may allow a remote unauthenticated attacker to execute arbitrary code or
commands via specially crafted requests.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;This is a case where a C function accepts a format string like &lt;code&gt;&amp;quot;Blah %s Nonsense&amp;quot;&lt;/code&gt;,
to assemble a log message or a command for a &lt;code&gt;system()&lt;/code&gt; call.
However, the developer did not statically set the format parameter of the command to a format string
(&lt;code&gt;snprintf(buffer, length, &amp;quot;Blah %s Nonsense&amp;quot;, user_input)&lt;/code&gt;),
but instead took the user input as the format
(&lt;code&gt;snprintf(buffer, length, user_input))&lt;/code&gt;.
The user input can thus be used to do all sorts of things.&lt;/p&gt;
&lt;p&gt;This is a mistake automatically detected by the usual source code scanners.
If you try to commit or merge something like this in a modern development environment,
the scanner will thoroughly humiliate you,
the commit will be rejected, and you will be assigned a security training.&lt;/p&gt;
&lt;p&gt;This means this type of error does not occur in a contemporary development environment anymore.&lt;/p&gt;
&lt;p&gt;Also, &lt;strong&gt;yesterday&lt;/strong&gt; was Fortigate patch day:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/02/schlangenoel-02.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;CVE-2024-21762, CVSSV3 Score 9.6, Unauthorized Code Execution, &amp;ldquo;Out of Bounds Write&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;A &lt;a href=&#34;https://cwe.mitre.org/data/definitions/787.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;out-of-bounds write&lt;/a&gt;

 vulnerability
in FortiOS may allow a remote unauthenticated attacker to execute arbitrary code or command via specially crafted HTTP requests.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;This is a mistake easily made in C or other languages without index checking when accessing arrays.
In C, for example, one can access memory before the array using negative indices,
and if an error code is -1, but the error code is not checked after a function call, then everything goes up in flames.&lt;/p&gt;
&lt;p&gt;This type of error is not always found by source code scanners with a static analyzer,
but most cases should be flagged by the scanner as a code smell.&lt;/p&gt;
&lt;p&gt;Well, unfortunately, &lt;strong&gt;the day before yesterday&lt;/strong&gt; was also a Fortigate patch day.
&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/fortinet-warns-of-new-fortisiem-rce-bugs-in-confusing-disclosure/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BleepingComputer reports&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this instance, due to an issue with the API which we are currently investigating,
rather than an edit, this resulted in two new CVEs being created, duplicates of the original CVE-2023-34992,
FortiNet told BleepingComputer.&lt;/p&gt;
&lt;p&gt;However, it turns out that CVE-2024-23108 and CVE-2024-23109 are actually patch bypasses for the CVE-2023-34992
flaw discovered by Horizon3 vulnerability expert Zach Hanley.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, this was a patch for a patch because the mitigation didn&amp;rsquo;t work,
and Fortinet got confused with the CVE numbers due to the sheer volume of them currently open.&lt;/p&gt;
&lt;p&gt;Meanwhile, the US CISA (Cybersecurity and Infrastructure Security Agency)
is demanding all US institutions to shut down Ivanti VPN (formerly Juniper Pulse Secure):&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/02/schlangenoel-03.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;CISA is requiring all Federal agencies to disconnect Ivanti products by Friday at midnight
(Ivanti Connect Secure &amp;amp; Ivanti Policy Secure).
This is roughly 48-hours notice, to not patch, but rip it out!
Ivanti is an American company.
This is unprecedented.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;While the
&lt;a href=&#34;https://www.cisa.gov/news-events/directives/supplemental-direction-v1-ed-24-01-mitigate-ivanti-connect-secure-and-ivanti-policy-secure&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;original directive&lt;/a&gt;


could initially be interpreted as an update, re-installation, and reconfiguration, this hope has now been dashed.&lt;/p&gt;
&lt;p&gt;The patches mentioned are not suitable for fixing the error.
&lt;a href=&#34;https://infosec.exchange/@briankrebs/111863433959430768&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Brian Krebs has summarized this issue&lt;/a&gt;

:&lt;/p&gt;
&lt;p&gt;Meanwhile, someone opened up the Ivanti image and took a look inside.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/02/schlangenoel-04.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Versions of software that have been routinely outdated for more than a decade in the current image.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As curl developer Stefan Eissing phrases it, these are &amp;ldquo;corpse parts and zombie software.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;And, as expected, a few days after the CISA-mandated patch frenzy,
&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/ivanti-patch-new-connect-secure-auth-bypass-bug-immediately/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BleepingComputer headlines again&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Ivanti: Patch new Connect Secure auth bypass bug immediately&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The flaw (CVE-2024-22024) is due to an XXE
(&lt;a href=&#34;https://cwe.mitre.org/data/definitions/611.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;XML eXternal Entities&lt;/a&gt;

) weakness in the gateways&amp;rsquo; SAML component
that lets remote attackers gain access to restricted resources on unpatched appliances in low-complexity
attacks without requiring user interaction or authentication.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SAML, Security Assertion Markup Language, is an XML notation for access rights in Single Sign-On systems.
Because it&amp;rsquo;s an XML notation, it can have these &lt;code&gt;&amp;amp;blablub;&lt;/code&gt; things – Entities – that are replaced by other text.
With External Entities, the replacement text is not locally fixed but is downloaded from the net.&lt;/p&gt;
&lt;p&gt;What does this mean in the context of SAML?
It means that the access rights in the document are not necessarily fixed;
an attacker can load Entity definitions from the net.
Depending on where the Entity is used, it can partially or completely rewrite the SAML file and grant different rights.&lt;/p&gt;
&lt;p&gt;XML parsers are well understood,
and XXE is something that can be reliably scanned for automatically with a source code scanner.
This type of error is easily avoidable in modern development environments.&lt;/p&gt;
&lt;h1 id=&#34;antivirus-and-endpoint-security&#34;&gt;
    &lt;a href=&#34;#antivirus-and-endpoint-security&#34;&gt;
	Antivirus and Endpoint Security
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;This is not an exception and is not limited to VPN gateways,
but rather manufacturers of security software happily rely on
&amp;ldquo;security-relevant software with privileges, and programming methods from the 90s of the last millennium.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Examples from this blog:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2017/10/20/aslr.html&#34;&gt;ASLR&lt;/a&gt;

: macOS Trend Micro Binary without ASLR, every exploit (yes, there are some)
automatically stable across the entire fleet.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2018/06/18/websense-dlp-gives-instant-root.html&#34;&gt;Websense DLP gives instant root&lt;/a&gt;

:
WebSense DLP ships outdated software versions and an exploitable kernel module, probably missing QA and defective shipping process.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is so widespread in endpoint security that, for example,
&lt;a href=&#34;https://mastodon.social/@joxean&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@joxean&lt;/a&gt;


has written an entire book about it:
&lt;a href=&#34;https://www.amazon.de/Antivirus-Hackers-Handbook-English-ebook/dp/B014MJ6AKS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Antivirus Hacker&amp;rsquo;s Handbook&lt;/a&gt;

.
It describes how to find vulnerabilities of this kind in every – literally every – AV software.&lt;/p&gt;
&lt;p&gt;This is systematic: It is due to the way this software is designed and developed, and it cannot be fixed with patches.&lt;/p&gt;
&lt;p&gt;I know this because I played this game for a few years with a company Mac:
I used the so-called &amp;ldquo;security tools&amp;rdquo; that Corp installed on my Mac to gain privileges on my Mac.&lt;/p&gt;
&lt;p&gt;The whole process is reliably repeatable, and I never had to invest more than a slow Friday afternoon in any case.
And I am not even a &amp;ldquo;security researcher,&amp;rdquo; just an amateur with reverse engineering experience from the C64 era.&lt;/p&gt;
&lt;p&gt;It is this software, which is supposed to protect, ending up making the computer vulnerable.
When someone like Fefe talks about &lt;a href=&#34;https://blog.fefe.de/?q=Schlangen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;snake oil&lt;/a&gt;

, it is to be taken literally.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/02/schlangenoel-05.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Snake_oil&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Snake-Oil&lt;/a&gt;

 is a term used to describe deceptive marketing,
health care fraud, or a scam.
Similarly, snake oil salesman is a common label used to describe someone who sells, promotes,
or is a general proponent of some valueless or fraudulent cure, remedy, or solution.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;a-list-of-problems-and-outdated-processes&#34;&gt;
    &lt;a href=&#34;#a-list-of-problems-and-outdated-processes&#34;&gt;
	A List of Problems and Outdated Processes
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;We are talking about critically security-relevant software here,
which is supposed to prevent the intrusion of malware and attackers on computers,
or is supposed to detect such attacks, or has authentication or some other form of security-relevant function.&lt;/p&gt;
&lt;p&gt;It runs at critical points, often with privileges, and when it fails, it is not just one machine,
but often an entire company that is critically exposed.&lt;/p&gt;
&lt;p&gt;Such software should be developed with tools and methods that are state-of-the-art
and undergo critical inspection with regard to correctness, freedom from errors, and currency of dependencies.&lt;/p&gt;
&lt;p&gt;However, we see errors that suggest deficiencies in the development process at all points.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We are seeing critical errors that would not have to have major problematic impact
if the software had been written with minimal rights from the outset.
But running parsers for complex, unknown data formats that may contain potentially malicious payloads with privileges?
And then turning off elementary security mechanisms such as ASLR?
That means setting up for maximum damage.
It is not a winnable position.&lt;/li&gt;
&lt;li&gt;Doing all this in 2024 in C, when Go or Rust could have been used? Not particularly smart either.&lt;/li&gt;
&lt;li&gt;Packing your deliverables with software that, in the case of Ivanti, has been without patches for up to two decades?
Correct would be to have an automated release process that assembles a new release from the latest versions of everything
and tests it automatically.
What Ivanti delivers is not just &amp;ldquo;not state-of-the-art,&amp;rdquo; it is grossly negligent.&lt;/li&gt;
&lt;li&gt;Delivering all this in an encrypted image, instead of with a &amp;ldquo;SBOM of Shame&amp;rdquo;
is soon to be a federal crime in the USA, and the EU is on the same path. Good.
(An SBOM is a Software Bill Of Materials, a list of the dependencies used and their versions.)&lt;/li&gt;
&lt;li&gt;A &amp;ldquo;Format String Bug&amp;rdquo; or an &amp;ldquo;XML External Entities Vulnerability&amp;rdquo; are trivial errors that source code scanners can detect.
Such source scanners are being advertised by these security firms themselves or even developed in-house.
But these tools are not in use internally, because otherwise, such code could never have made it into a product.
This does not require AI; in part, these are better regular expressions, sometimes a bit of static analysis.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As external observers, based on the demonstrated error patterns,
we are witnessing a failure along the entire software development chain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;At the architecture level (not minimizing rights),&lt;/li&gt;
&lt;li&gt;at the tool level (no scanners for trivial errors, outdated dependencies, no automation in build and release),&lt;/li&gt;
&lt;li&gt;at the packaging level (the defective permissions in Websense, for example),&lt;/li&gt;
&lt;li&gt;and at every other point where one can infer the process from the errors observed from the outside.
&lt;ul&gt;
&lt;li&gt;For example, &amp;ldquo;no functioning code review and audit&amp;rdquo;
(&amp;ldquo;statically compiled-in backdoor passwords,&amp;rdquo; as are a persistent problem at Cisco, fall under this).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are thus management errors in the leadership of software companies that produce security-critical software.
It is the responsibility of management to establish and control processes that ensure a minimum level of quality.&lt;/p&gt;
&lt;p&gt;The notion &amp;ldquo;software errors, nothing can be done about it&amp;rdquo; is incorrect –
there are entire classes of errors that can be definitively avoided through architecture,
automatic scanning,
education,
review,
and testing.
It is the responsibility of management to establish and control such processes.&lt;/p&gt;
&lt;p&gt;All in all, one can only conclude that irresponsible hack shops without fundamental software development processes
are masquerading as &amp;ldquo;security&amp;rdquo; companies.
They are packaging radioactive toxic waste in glossy packages,
thereby building a highway for nation-state actors into the heart of critical infrastructures.&lt;/p&gt;
&lt;p&gt;In some cases, the nature of the error borders on deliberate sabotage, or,
to put it another way, it could hardly be worse with deliberate sabotage.&lt;/p&gt;
&lt;h1 id=&#34;1010-no-notes&#34;&gt;
    &lt;a href=&#34;#1010-no-notes&#34;&gt;
	10/10, no notes
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;On IRC, my friends joke:
&amp;ldquo;Are you a 10/10 company?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Security vulnerabilities are not only assigned a unique number, the CVE number,
but they also receive a severity grade,
the &lt;a href=&#34;https://en.wikipedia.org/wiki/Common_Vulnerability_Scoring_System&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CVSS-Score&lt;/a&gt;

.
A 10/10 is the maximum grade, but basically, anything above 8 is considered
&lt;a href=&#34;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a total loss and complete process failure&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;There is now a historical CVE database that can be
&lt;a href=&#34;https://www.cvedetails.com/vulnerability-list/cvssscoremin-9/cvssscoremax-10/vulnerabilities.html?page=1&amp;amp;cvssscoremin=9&amp;amp;cvssscoremax=10&amp;amp;order=3&amp;amp;trc=40515&amp;amp;sha=2721cbf47ba1e57d8b65ae1c3cf8883295fd04d7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sorted by CVSS score&lt;/a&gt;

,
and also narrowed down to companies like
&lt;a href=&#34;https://www.cvedetails.com/vulnerability-list/vendor_id-3080/Fortinet.html?page=1&amp;amp;cvssscoremin=9&amp;amp;order=3&amp;amp;trc=103&amp;amp;sha=0ba96ce0b5ea0195196988ef1d381bdd33622c49&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fortinet&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;We then see for Fortinet a series of 12 errors with a 10/10 rating,
specifically 2x in 2024, 1x in 2021, 1x in 2019, 3x in 2017, 4x in 2016, and once in 2005.
This can also be summarized as &amp;ldquo;no improvement is observable.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Security is a process,&amp;rdquo; it is often said.
For Business Continuity Management, I once wrote down what that means:
&lt;a href=&#34;https://blog.koehntopp.info/2023/02/18/this-is-not-a-drill.html&#34;&gt;This is not a Drill. This is just Tuesday&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Similar considerations can be made for secure software development processes,
and there are even ready-made process blueprints available for this purpose.
Furthermore, as I have shown, the patterns of errors can reveal the weaknesses in the internal development process
with regard to security best practices.
The numbers of CVEs and CVSS scores can indicate whether a company has improved its posture.&lt;/p&gt;
&lt;p&gt;If it is apparent that this has not been the case over the years, how can a purchasing decision be made positively?
Something to think about.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/02/meerschweinchen-anne.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Some things can only be made bearable with cute guinea pig photos.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Schlangenöl</title>
      <link>https://blog.koehntopp.info/2024/02/09/schlangenoel.html</link>
      <pubDate>Fri, 09 Feb 2024 01:02:03 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2024/02/09/schlangenoel.html</guid>
      <description>&lt;p&gt;This text also has a version in
&lt;a href=&#34;https://blog.koehntopp.info/2024/02/10/snake-oil.html&#34;&gt;english language&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Diese Woche war &amp;ldquo;Kaputte Security Software Werbewoche&amp;rdquo;.&lt;/p&gt;
&lt;h1 id=&#34;fortigate-und-ivanti&#34;&gt;
    &lt;a href=&#34;#fortigate-und-ivanti&#34;&gt;
	Fortigate und Ivanti
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Zunächst einmal war &lt;strong&gt;heute&lt;/strong&gt; Fortigate Patchday:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/02/schlangenoel-01.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;CVE-2024-23113, CVSSV3 Score 9.8, Unauthorized Code Execution, &amp;ldquo;Format String Bug&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;A use of &lt;a href=&#34;https://cwe.mitre.org/data/definitions/134.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;externally-controlled format string&lt;/a&gt;

 vulnerability
in FortiOS &lt;code&gt;fgfmd&lt;/code&gt; daemon may allow a remote unauthenticated attacker to execute arbitrary code or
commands via specially crafted requests.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Das ist ein Fall, wo eine C-Funktion einen Formatstring mit &lt;code&gt;&amp;quot;Bla %s Fasel&amp;quot;&lt;/code&gt; annimmt,
um etwa eine Log-Nachricht oder ein Kommando für einen &lt;code&gt;system()&lt;/code&gt; Aufruf zusammenzubauen.
Der Entwickler hat jedoch den Format-Parameter des Kommandos nicht statisch auf einen Formatstring gesetzt
(&lt;code&gt;snprintf(buffer, length, &amp;quot;Bla %s Fasel&amp;quot;, benutzereingabe)&lt;/code&gt;),
sondern stattdessen die Benutzereingabe als Format genommen
(&lt;code&gt;snprintf(buffer, length, benutzereingabe)&lt;/code&gt;).
Die Benutzereingabe kann so verwendet werden, um alles Mögliche zu tun.&lt;/p&gt;
&lt;p&gt;Das ist ein Fehler, der von den üblichen Sourcecodescannern automatisch erkannt wird,
und wenn man in einer modernen Entwicklungsumgebung versucht, so etwas zu comitten oder zu mergen,
dann wird man vom Scanner ganz furchtbar erniedrigt, der Commit zurückgewiesen und man bekommt ein Security-Training zugewiesen.&lt;/p&gt;
&lt;p&gt;Will sagen, dieser Fehler tritt in einer zeitgemäßen Development-Umgebung nicht mehr auf.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Auch gestern&lt;/strong&gt; war Fortigate Patchday:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/02/schlangenoel-02.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;CVE-2024-21762, CVSSV3 Score 9.6, Unauthorized Code Execution, &amp;ldquo;Out of Bounds Write&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;A &lt;a href=&#34;https://cwe.mitre.org/data/definitions/787.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;out-of-bounds write&lt;/a&gt;

 vulnerability
in FortiOS may allow a remote unauthenticated attacker to execute arbitrary code or command via specially crafted HTTP requests.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Das ist ein Fehler, der in C oder anderen Sprachen ohne Indexprüfung beim Zugriff auf Arrays gerne gemacht wird.
In C kann man zum Beispiel mit negativen Indices auf Speicher vor dem Array zugreifen, und
wenn ein Error-Code &lt;code&gt;-1&lt;/code&gt; ist, aber nach einem Funktionsaufruf der Error-Code nicht geprüft wird,
dann brennt alles nieder.&lt;/p&gt;
&lt;p&gt;Diese Sorte Fehler wird von Source Code Scannern mit statischem Analyzer nicht immer gefunden,
aber meistens und alle Fälle, wo das nicht passiert, sollten von dem Ding eigentlich als Code Smell angemerkt werden.&lt;/p&gt;
&lt;p&gt;Nun. Leider war &lt;strong&gt;auch vorgestern&lt;/strong&gt; Fortigate Patchday.
&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/fortinet-warns-of-new-fortisiem-rce-bugs-in-confusing-disclosure/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BleepingComputer schreibt&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this instance, due to an issue with the API which we are currently investigating,
rather than an edit, this resulted in two new CVEs being created, duplicates of the original CVE-2023-34992,
FortiNet told BleepingComputer.&lt;/p&gt;
&lt;p&gt;However, it turns out that CVE-2024-23108 and CVE-2024-23109 are actually patch bypasses for the CVE-2023-34992
flaw discovered by Horizon3 vulnerability expert Zach Hanley.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das war also ein Patch für einen Patch, weil die Mitigation nicht funktioniert hat und
Fortinet kam mit den CVE-Nummern durcheinander, weil gerade so viele davon offen sind.&lt;/p&gt;
&lt;p&gt;Unterdessen fordert die US CISA (Cybersecurity and Infrastructure Security Agency) von allen US-Institutionen das
Abschalten von Ivanti VPN (vormals Juniper Pulse Secure):&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/02/schlangenoel-03.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;CISA is requiring all Federal agencies to disconnect Ivanti products by Friday at midnight
(Ivanti Connect Secure &amp;amp; Ivanti Policy Secure).
This is roughly 48-hours notice, to not patch, but rip it out!
Ivanti is an American company.
This is unprecedented.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Während man
&lt;a href=&#34;https://www.cisa.gov/news-events/directives/supplemental-direction-v1-ed-24-01-mitigate-ivanti-connect-secure-and-ivanti-policy-secure&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;die Originaldirektive&lt;/a&gt;


ursprünglich noch als Update und Reinstallation sowie Neukonfiguration lesen konnte
hat sich diese Hoffnung mittlerweile zerschlagen.&lt;/p&gt;
&lt;p&gt;Die Patches, von denen dort die Rede ist, sind nicht geeignet, den Fehler zu beheben.
&lt;a href=&#34;https://infosec.exchange/@briankrebs/111863433959430768&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Brian Krebs hat das zusammengefasst&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Unterdessen hat jemand das Ivanti Image mal aufgemacht und reingesehen.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/02/schlangenoel-04.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Versionen von Software, die routinemäßig seit mehr als einer Dekade veraltet sind in einem aktuellen Image.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Das sind, wie curl-Entwickler Stefan Eissing formuliert &amp;ldquo;Leichenteile und Zombie Software&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Und, es kommt, wie es kommen muss:
Einige Tage nach der von CISA vorgeschriebenen Patchorgie
&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/ivanti-patch-new-connect-secure-auth-bypass-bug-immediately/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;titelt BleepingComputer erneut&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Ivanti: Patch new Connect Secure auth bypass bug immediately&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The flaw (CVE-2024-22024) is due to an XXE
(&lt;a href=&#34;https://cwe.mitre.org/data/definitions/611.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;XML eXternal Entities&lt;/a&gt;

) weakness in the gateways&amp;rsquo; SAML component
that lets remote attackers gain access to restricted resources on unpatched appliances in low-complexity
attacks without requiring user interaction or authentication.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SAML, Security Assertion Markup Language, ist eine XML-Notation für Zugriffsrechte in Single-Sign-On Systemen.
Weil es eine XML-Notation ist, kann es dort diese &lt;code&gt;&amp;amp;blablub;&lt;/code&gt;-Dinger geben – Entities – die durch anderen Text ersetzt werden.
Bei External Entities liegt der Ersetzungstext nicht lokal fest, sondern wird aus dem Netz nachgeladen.&lt;/p&gt;
&lt;p&gt;Was heißt das im Kontext von SAML? Es bedeutet, die Zugriffsrechte sind im Dokument also nicht zwingend festgenagelt,
sondern ein Angreifer kann Entity Definitionen aus dem Netz nachladen.
Je nachdem, wo die Entity verwendet wird, kann man damit die SAML-Datei in Teilen oder ganz umschreiben und sich andere Rechte geben.&lt;/p&gt;
&lt;p&gt;XML-Parser sind gut verstanden und XEE sind ein Ding, auf das man mit einem Sourcecode-Scanner zuverlässig automatisch scannen kann.
Diese Sorte Fehler ist in modernen Entwicklungsumgebungen gut auszuschließen.&lt;/p&gt;
&lt;h1 id=&#34;antivirus-und-endpoint-security&#34;&gt;
    &lt;a href=&#34;#antivirus-und-endpoint-security&#34;&gt;
	Antivirus und Endpoint Security
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Das ist alles keine Ausnahme und auch nicht auf VPN-Gateways beschränkt,
sondern Hersteller von Security Software setzen fröhlich auf
&amp;ldquo;Security-Relevante Software mit Privilegien, und Programmiermethoden aus den 90er Jahren des letzten Jahrtausends&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Beispiele aus diesem Blog:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2017/10/20/aslr.html&#34;&gt;ASLR&lt;/a&gt;

: MacOS Trend Micro Binary mit ohne ASLR, jeder Exploit
(ja, es gibt welche) ist automatisch stabil über die ganze Flotte.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2018/06/18/websense-dlp-gives-instant-root.html&#34;&gt;Websense DLP gives instant root&lt;/a&gt;

:
WebSense DLP veraltete Softwareversionen und exploitbares Kernelmodul, vermutlich fehlende QA und defekter Shipping Prozess.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Das ist bei Endpoint Security so verbreitet, daß zum Beispiel
&lt;a href=&#34;https://mastodon.social/@joxean&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@joxean&lt;/a&gt;

 ein ganzes Buch darüber geschrieben hat:
&lt;a href=&#34;https://www.amazon.de/Antivirus-Hackers-Handbook-English-ebook/dp/B014MJ6AKS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Antivirus Hacker&amp;rsquo;s Handbook&lt;/a&gt;

.
beschreibt, wie man Sicherheitslücken dieser Art in jeder, wirklich jeder AV Software findet.&lt;/p&gt;
&lt;p&gt;Das ist systematisch:
Es liegt an der der Art und Weise, wie diese Software designt und entwickelt wird,
und es ist auch mit Patchs nicht zu beheben.&lt;/p&gt;
&lt;p&gt;Ich weiß das, weil ich dieses Spiel einige Jahre mit einem Firmen-Mac gespielt habe:
Ich habe die sogenannten &amp;ldquo;Security Tools&amp;rdquo; verwendet, die Corp auf meinem Mac installiert, um auf meinem Mac Privilegien zu bekommen.&lt;/p&gt;
&lt;p&gt;Der ganze Prozess ist zuverlässig wiederholbar,
und ich habe in keinem Fall mehr als einen langsamen Freitagnachmittag dafür investieren müssen.
Dabei bin ich noch nicht einmal &amp;ldquo;Security-Researcher&amp;rdquo;,
sondern nur ein Amateur mit Reverse-Engineering Erfahrung aus dem C64-Zeitalter.&lt;/p&gt;
&lt;p&gt;Es ist diese Software, die angeblich schützen soll, die am Ende dazu führt, daß der Rechner angreifbar wird.
Wenn jemand wie Fefe von &lt;a href=&#34;https://blog.fefe.de/?q=Schlangen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Schlangenöl&lt;/a&gt;

 redet, dann ist das wortwörtlich zu verstehen.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/02/schlangenoel-05.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Snake_oil&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Snake-Oil&lt;/a&gt;

 is a term used to describe deceptive marketing,
health care fraud, or a scam.
Similarly, snake oil salesman is a common label used to describe someone who sells, promotes,
or is a general proponent of some valueless or fraudulent cure, remedy, or solution.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;eine-problemliste-und-veraltete-prozesse&#34;&gt;
    &lt;a href=&#34;#eine-problemliste-und-veraltete-prozesse&#34;&gt;
	Eine Problemliste und veraltete Prozesse
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Wir reden hier von kritisch security-relevanter Software,
die das Eindringen von Schadsoftware und Angreifern auf Rechnern verhindern soll,
oder die solche Angriffe erkennen soll,
oder die Authentisierung oder sonst eine Form von sicherheitsrelevanter Funktion hat.&lt;/p&gt;
&lt;p&gt;Sie läuft an kritischer Stelle, oft mit Privilegien und wenn sie versagt, ist meist nicht nur eine Maschine,
sondern eine ganze Firma kritisch exponiert.&lt;/p&gt;
&lt;p&gt;Solche Software sollte eigentlich mit Werkzeugen und Methoden, die Stand der Technik sind, entwickelt werden
und besonderer Beobachtung hinsichtlich Korrektheit, Fehlerfreiheit und Aktualität von Dependencies unterliegen.&lt;/p&gt;
&lt;p&gt;Wir sehen jedoch Fehler, die auf Defizite im Entwicklungsprozeß an allen Stellen schließen lassen.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wir sehen kritische Fehler, die keine groß problematischen Auswirkungen haben müßten,
wenn die Software von vorher herein rechteminimal geschrieben worden wäre.
Aber Parser für komplexe, unbekannte Datenformate, die potenziell bösartige Payloads enthalten,
mit Privilegien laufen zu lassen?
Und dann noch elementare Sicherheitsmechanismen des Betriebssystems abschalten?
Das bedeutet, sich für Maximalschaden aufzustellen.
Es ist keine gewinnbare Position.&lt;/li&gt;
&lt;li&gt;Das alles in 2024 in C zu tun, wenn man Go oder Rust zur Verfügung hätte?
Auch nicht sonderlich schlau.&lt;/li&gt;
&lt;li&gt;Seine Deliverables mit Software vollzupacken, die im Fall von Ivanti bis zu zwei Dekaden
ohne Patches auf dem Buckel hat, anstatt einen automatisierten Release-Prozess zu haben, der ein neues
Release aus den neusten Versionen von allem zusammenschraubt und automatisch testet?
Das ist nicht nur &amp;ldquo;nicht Stand der Technik&amp;rdquo;, sondern es ist grob fahrlässig.&lt;/li&gt;
&lt;li&gt;Das alles dann in einem verschlüsselten Image auszuliefern, statt mit einer &amp;ldquo;SBOM of Shame&amp;rdquo;
(Software Bill Of Materials, eine Liste der verwendeten Dependencies und ihrer Versionen)
ist bald schon ein Federal Crime in den USA, und auch die EU ist auf diesem Weg.
Gut so.&lt;/li&gt;
&lt;li&gt;Ein &amp;ldquo;Format String Bug&amp;rdquo; oder eine &amp;ldquo;XML External Entities Vulnerability&amp;rdquo; sind triviale Fehler,
die Source Code Scanner erkennen können, wie sie von diesen Securityfirmen selbst beworben
oder gar im eigenen Haus entwickelt werden.
Aber offensichtlich sind diese Werkzeuge im Hause nicht im Einsatz, denn sonst hätte solcher Code niemals in
ein Produkt gelangen können.
Dazu braucht es keine KI, teilweise sind das bessere Regular Expressions, manchmal ein bisschen statische Analyse.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Wir beobachten hier als Außenstehende auf der Grundlage der gezeigten Fehlerbilder ein
Versagen entlang der gesamten Software Development Chain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Auf der Architektur-Ebene (nicht rechteminimal),&lt;/li&gt;
&lt;li&gt;auf der Tool-Ebene (keine Scanner für triviale Fehler, veraltete Dependencies, keine Automation beim Build und Release)&lt;/li&gt;
&lt;li&gt;auf der Packaging-Ebene (die defekten Permissions bei Websense zum Beispiel)&lt;/li&gt;
&lt;li&gt;und an jeder anderen Stelle, bei der man von außen durch die Fehler auf den Prozess rückschließen kann.
&lt;ul&gt;
&lt;li&gt;Zum Beispiel &amp;ldquo;kein funktionierender Code-Review und Audit&amp;rdquo;
(&amp;ldquo;statisch einkompilierte Backdoor-Passworte&amp;rdquo;, wie sie bei Cisco das Dauer-Fehlerbild sind, fallen darunter).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Es sind mithin Managementfehler bei der Führung von Software-Häusern, die sicherheitskritische Software herstellen.
Es ist Aufgabe des Managements Prozesse einzurichten und zu steuern, die ein Mindestmaß an Qualität sicherstellen.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Softwarefehler, kann man nichts machen&amp;rdquo; stimmt so nicht – es gibt ganze Klassen von Fehlern,
die man durch Architektur,
durch automatisches Scannen,
durch Ausbildung,
durch Review,
und durch Testen sicher ausschließen kann,
und es ist die Aufgabe des Managements, solche Prozesse einzurichten und zu steuern.&lt;/p&gt;
&lt;p&gt;Alles in allem kann man nur zu dem Ergebnis kommen,
daß hier verantwortungslose Hackerbuden ohne elementare Software-Entwicklungsprozesse als &amp;ldquo;Security&amp;rdquo;-Firmen auftreten
und radioaktiven Giftmüll in Hochglanzpackungen abfüllen,
um so eine Autobahn für Nation State Actors ins Herz von kritischen Infrastrukturen zu bauen.&lt;/p&gt;
&lt;p&gt;Teilweise grenzt die Art der Fehler an mutwillige Sabotage,
beziehungsweise könnte man es auch mit mutwilliger Sabotage kaum schlimmer machen.&lt;/p&gt;
&lt;h1 id=&#34;1010-no-notes&#34;&gt;
    &lt;a href=&#34;#1010-no-notes&#34;&gt;
	10/10, no notes
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Im Chat witzeln Freunde von mir:
&amp;ldquo;Are you a 10/10 company?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Security-Lücken wird nicht nur eine eindeutige Nummer zugewiesen, die CVE-Nummer, sondern
sie bekommen auch einen Schweregrad, den &lt;a href=&#34;https://en.wikipedia.org/wiki/Common_Vulnerability_Scoring_System&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CVSS-Score&lt;/a&gt;

.
Eine 10/10 ist der Maximalgrad, aber im Grunde ist alles über 8
ein &lt;a href=&#34;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Totalschaden und komplettes Prozessversagen&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Es gibt nun eine historische CVE-Datenbank, die man
&lt;a href=&#34;https://www.cvedetails.com/vulnerability-list/cvssscoremin-9/cvssscoremax-10/vulnerabilities.html?page=1&amp;amp;cvssscoremin=9&amp;amp;cvssscoremax=10&amp;amp;order=3&amp;amp;trc=40515&amp;amp;sha=2721cbf47ba1e57d8b65ae1c3cf8883295fd04d7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;nach CVSS sortieren kann&lt;/a&gt;

,
und auch auf Firmen wie
&lt;a href=&#34;https://www.cvedetails.com/vulnerability-list/vendor_id-3080/Fortinet.html?page=1&amp;amp;cvssscoremin=9&amp;amp;order=3&amp;amp;trc=103&amp;amp;sha=0ba96ce0b5ea0195196988ef1d381bdd33622c49&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fortinet einschränken&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Wir sehen dann für Fortinet eine Reihe von 12 Fehlern mit 10/10, und zwar
2x in 2024, 1x in 2021, 1x in 2019, 3x in 2017, 4x in 2016 und einmal in 2005.
Das kann man auch mit &amp;ldquo;Besserung ist nicht erkennbar&amp;rdquo; zusammenfassen.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Security ist ein Prozess&amp;rdquo; heißt es.
Für Business Continuity Management habe ich einmal aufgeschrieben, was das bedeutet:
&lt;a href=&#34;https://blog.koehntopp.info/2023/02/18/this-is-not-a-drill.html&#34;&gt;This is not a Drill. This is just Tuesday&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Analoge Überlegungen kann man auch für sichere Software-Entwicklungsprozesse anstellen,
und es gibt sogar fertige Prozess-Blueprints dafür.
Weiterhin kann man, wie ich gezeigt habe, an den Fehlerbildern erkennen, welche Schwächen der interne Entwicklungsprozess
hinsichtlich Security Best-Practices hat,
und an den CVE-Anzahlen und CVSS-Scores erkennen, ob eine Firma ihre Posture verbessert hat.&lt;/p&gt;
&lt;p&gt;Wenn das erkennbar über Jahre nicht der Fall ist, wie kann dann eine Kaufentscheidung positiv beschieden werden?
Denkt mal darüber nach.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/02/meerschweinchen-anne.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Manche Dinge sind nur durch niedliche Meerschweinchenfotos erträglich zu machen.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>sshpass</title>
      <link>https://blog.koehntopp.info/2023/09/15/sshpass.html</link>
      <pubDate>Fri, 15 Sep 2023 01:02:03 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2023/09/15/sshpass.html</guid>
      <description>&lt;p&gt;Heute lernte ich, daß das Utility &lt;code&gt;sshpass&lt;/code&gt; existiert.
Ich habe das beim Lesen eines &lt;code&gt;.gitlab.ci.yml&lt;/code&gt; Files gelernt.
Und ihr wundert Euch, wieso Sysadmins alle Schwarz tragen und an Whisky interessiert sind.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2023/09/sshpass-01.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Was ist &lt;code&gt;sshpass&lt;/code&gt; werdet ihr jetzt fragen?&lt;/p&gt;
&lt;p&gt;Und
&lt;a href=&#34;https://www.redhat.com/sysadmin/ssh-automation-sshpass&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RedHat&lt;/a&gt;


erklärt:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The sshpass utility is designed to run SSH using the keyboard-interactive password authentication mode,
but in a non-interactive way.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Warum der Artikel jetzt nach und vor diesem Satz dann erklärt,
wie man das &lt;em&gt;benutzt&lt;/em&gt;, statt zu zeigen, warum man das &lt;em&gt;nie braucht&lt;/em&gt; und &lt;em&gt;wie man es ersetzt&lt;/em&gt; ist unklar.&lt;/p&gt;
&lt;p&gt;Aber Homebrew &lt;del&gt;ist&lt;/del&gt; war hilfreich:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; brew search sshpass
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;==&amp;gt; Formulae
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sshs
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;If you meant &amp;#34;sshpass&amp;#34; specifically:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;We won&amp;#39;t add sshpass because it makes it too easy for novice SSH users to ruin SSH&amp;#39;s security.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Das fasst es in etwa zusammen, was Homebrew nicht daran hinderte, sshpass wieder aus der Blacklist zu entfernen:
&lt;a href=&#34;https://github.com/Homebrew/brew/pull/15979&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/Homebrew/brew/pull/15979&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Okay, einmal das ganze gitlab, alle &lt;code&gt;.gitlab-ci.yml&lt;/code&gt;, alle Branches, nach &lt;code&gt;sshpass -p&lt;/code&gt; suchen.&lt;/p&gt;
&lt;h2 id=&#34;es-wird-schlimmer&#34;&gt;
    &lt;a href=&#34;#es-wird-schlimmer&#34;&gt;
	Es wird schlimmer
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ich konnte das nicht auf sich beruhen lassen, obwohl es Dinge gibt, bei denen einem das Wissen mehr schadet als das Unwissen.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/32255660/how-to-install-sshpass-on-mac&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stackoverflow weiß&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How to install sshpass on Mac?&lt;/p&gt;
&lt;p&gt;Accepted Answer:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;curl -L https://raw.githubusercontent.com/&amp;lt;...&amp;gt;Formula/sshpass.rb &amp;gt; sshpass.rb &amp;amp;&amp;amp; \
brew install sshpass.rb &amp;amp;&amp;amp; \
rm sshpass.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;Ich will hochgebeamt werden. Hier ist kein intelligentes Leben möglich.&lt;/p&gt;
&lt;h2 id=&#34;an-die-zwischenrufer&#34;&gt;
    &lt;a href=&#34;#an-die-zwischenrufer&#34;&gt;
	An die Zwischenrufer
    &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Aber ich brauche das doch, weil mein BMC keine Keys &amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/seveas/python-hpilo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hpilo&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/bmc-toolbox/bmcbutler&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bmcbutler&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/bmc-toolbox/dora&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dora&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Normal wird man die entsprechenden Zertifikate und Pubkeys beim Start der VM oder des Containers durch &lt;code&gt;cloud-init&lt;/code&gt; installieren,
nachdem sie von der Controlplane des Clusters da hin transportiert worden sind.
Bei Bare Metal kann der Installserver die Bootstrap-Pubkeys als Teil der Customization des Installationsprozesses mit installieren.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting rid of phishing training mails</title>
      <link>https://blog.koehntopp.info/2023/05/23/getting-rid-of-phishing-training-mails.html</link>
      <pubDate>Tue, 23 May 2023 01:02:03 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2023/05/23/getting-rid-of-phishing-training-mails.html</guid>
      <description>&lt;p&gt;Just like your work computer is being infested with corporate malware as to prevent it from being taken over from other people&amp;rsquo;s malware,
your account is also being spammed with corporate malware spam as to prevent it from being taken over by other malware spam.
And just like corporate malware &lt;a href=&#34;https://blog.koehntopp.info/2018/06/18/websense-dlp-gives-instant-root.html&#34;&gt;increases your machine&amp;rsquo;s attack surface&lt;/a&gt;

,
because it is &lt;a href=&#34;https://blog.koehntopp.info/2017/10/20/aslr.html&#34;&gt;badly written&lt;/a&gt;

 and running with privileges,
corporate spam is a useless &lt;a href=&#34;https://publikationen.bibliothek.kit.edu/1000119662&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;nuisance&lt;/a&gt;

 that
&lt;a href=&#34;https://blog.lukaszolejnik.com/solving-phishing-is-not-simple-can-anti-phishing-training-make-it-even-worse/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doesn&amp;rsquo;t do what it is supposed to do&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Of course, working in an enterprise, you will be subjected to such campaigns anyway.
So the best outcome for you would be to identify a phishing training campaign when it runs the first time,
and then upgrade your filters so that you will never be bothered again.&lt;/p&gt;
&lt;p&gt;The good news is that all phishing training campaigns have automatically detectable traits,
mostly X-Header lines, because the campaign needs to be able to deliver quantifiable results to the corporate overlords that pay for it.
And of course, we can filter for these.&lt;/p&gt;
&lt;h1 id=&#34;the-x-header&#34;&gt;
    &lt;a href=&#34;#the-x-header&#34;&gt;
	The X-Header
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;What X-Header actually is being used depends a lot on the Phishing Training service provider your company is using.
It may be something such as &lt;code&gt;X-KnowB4&lt;/code&gt; or &lt;code&gt;X-PhishMe&lt;/code&gt; or similar.
To find out what it is, you need to check the actual raw message content.&lt;/p&gt;
&lt;p&gt;In Mail.app, select the message you have identified as phishing training mail, and select
&lt;code&gt;View -&amp;gt; Message -&amp;gt; Raw Source (⌥⌘U)&lt;/code&gt;.
Then check for lines that start with &lt;code&gt;X-&lt;/code&gt; in the header that identify the training provider or reference &amp;ldquo;Phish&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2023/05/phish-06.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Message Raw Source in Mail.app.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In Outlook for Mac, select the message you have identified as phishing training mail, and select
&lt;code&gt;View Source&lt;/code&gt;.
Then check for lines that start with &lt;code&gt;X-&lt;/code&gt; in the header that identify the training provider or reference &amp;ldquo;Phish&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2023/05/phish-07.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Message Raw Source in Outlook for Mac.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The line you are looking for might be looking like this:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2023/05/phish-08.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;*In our case, the line identifying the phishing training mails looks like &lt;code&gt;X-Phishme: Phishing_Training&lt;/code&gt;.
In fact, we only care about the presence of the &lt;code&gt;X-PhishMe&lt;/code&gt; header line and the actual value after the &lt;code&gt;:&lt;/code&gt; is completely irrelevant.&lt;/p&gt;
&lt;p&gt;This header, in the exact spelling shown, is what we want. It is best to copy and paste it to prevent spelling errors.&lt;/p&gt;
&lt;h1 id=&#34;mailapp&#34;&gt;
    &lt;a href=&#34;#mailapp&#34;&gt;
	Mail.app
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;m on a Mac, and for a long time my corporate email was on Gmail.
Unfortunately, Gmail cannot filter on arbitrary X-headers, and registering an application to OAuth against corporate mail is complicated.
But Apple&amp;rsquo;s &lt;code&gt;Mail.app&lt;/code&gt; comes preregistered, was allowed, and can filter.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2023/05/phish-01.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;So I can just sacrifice another 200 MB or so to the God of Better Mail and get proper filters in return.
In any case, &lt;code&gt;⌘-,&lt;/code&gt; (&amp;ldquo;Cmd-Comma&amp;rdquo;) gives me the &lt;code&gt;Rules&lt;/code&gt; menu, and from there I can &lt;code&gt;Add Rule&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2023/05/phish-02.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;You would want to add a filter on the Header-Line &lt;code&gt;X-PhishMe&lt;/code&gt;.
For what, we want to create a rule that looks like this:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2023/05/phish-03.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is what our filter should look like, but it can&amp;rsquo;t.
That is, because the first time around Mail.app does not know about this &lt;code&gt;X-&lt;/code&gt; header.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Currently, your Mail.app does not yet understand this particular X-Header, so when you want to create this rule,
you need to &lt;code&gt;Edit header list...&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2023/05/phish-04.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;and then add the header to the list of known header lines:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2023/05/phish-05.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Only now can you create the filter as shown above.
In this example, I have moved the message to the Trash Bin, but you can choose any target you want.
Whatever you do, make sure that the last action you choose is &amp;ldquo;Stop evaluating rules&amp;rdquo;, then hit OK.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Now drag the rule up so that it becomes the first rule in the list.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You are done.&lt;/p&gt;
&lt;h1 id=&#34;outlook&#34;&gt;
    &lt;a href=&#34;#outlook&#34;&gt;
	Outlook
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;In Outlook for Mac, also hit &lt;code&gt;⌘-,&lt;/code&gt; (&amp;ldquo;Cmd-Comma&amp;rdquo;) and choose &lt;code&gt;Rules&lt;/code&gt;.
Create a new rule and make sure it is enabled:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2023/05/phish-09.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;The rule should look like this:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2023/05/phish-10.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;That is, move the message to a folder of your choice, and make sure to enable &amp;ldquo;Stop processing more rules&amp;rdquo;.
Make sure the rule is the first one in the list.&lt;/p&gt;
&lt;p&gt;You are done.&lt;/p&gt;
&lt;h1 id=&#34;summary&#34;&gt;
    &lt;a href=&#34;#summary&#34;&gt;
	Summary
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;All phishing trainings need to have uniquely identifiable marks in order for the training campaign to produce the required key performance indicators.
We can find these labels and use them to filter.
Our mailer will automatically ignore subsequent runs of the phishing training, for our peace of mind.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rotating Accounts or Passwords?</title>
      <link>https://blog.koehntopp.info/2023/02/20/rotating-accounts-or-passwords.html</link>
      <pubDate>Mon, 20 Feb 2023 12:13:14 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2023/02/20/rotating-accounts-or-passwords.html</guid>
      <description>&lt;p&gt;Some applications allow you to have multiple passwords.
For example, in &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/password-management.html#dual-passwords&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MySQL, since 8.0.14 you can dual passwords for an account&lt;/a&gt;

.
Also, &lt;a href=&#34;https://redis.io/docs/management/security/acl/#create-and-edit-user-acls-with-the-acl-setuser-command&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Redis 6 allows you to have multiple passwords on an account ACL&lt;/a&gt;

.&lt;/p&gt;
&lt;h1 id=&#34;personal-accounts-and-machine-accounts&#34;&gt;
    &lt;a href=&#34;#personal-accounts-and-machine-accounts&#34;&gt;
	Personal Accounts and Machine Accounts.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;When running services in a production system, the services sometimes have personal accounts (PAs) that allow humans to login and perform actions on the service.
Often, these accounts are very limited in number (in production), and privileged.&lt;/p&gt;
&lt;p&gt;Also, you have clients connecting to the system.
These are called Non-Personal Accounts, Machine Accounts or Service Accounts (MA) in many environments.
Machine Accounts are not used by humans, but are a set of credentials used by client applications to work with a service.&lt;/p&gt;
&lt;p&gt;It is good practice to assign a different MA to each application using a service,  and to rotate credentials regularly and quickly for each MA.
In many environments doing this is even a compliance requirement.&lt;/p&gt;
&lt;h1 id=&#34;different-usernames-are-helpful&#34;&gt;
    &lt;a href=&#34;#different-usernames-are-helpful&#34;&gt;
	Different Usernames are helpful
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Assigning different identities (different usernames) to different applications is useful in many ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Access permissions are tied to identities, so different identities are a requirement to separate different sets of permissions.&lt;/li&gt;
&lt;li&gt;Also, different identities allow you to attribute activity in the service to the identity, thus make monitoring, auditing and accounting possible.
It is much easier to identify a misbehaving application, if all applications using your service have different user account names.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;dynamically-assigned-credentials&#34;&gt;
    &lt;a href=&#34;#dynamically-assigned-credentials&#34;&gt;
	Dynamically assigned credentials
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Very often credentials are not stored at all in the client configuration, but are requested dynamically on-demand from another service, the Secrets Manager or Vault.
It is either part of a cloud control plane, and can leverage trust from the cloud infrastructure to know who is who and what to allow,
or it is an external service such as a Hashicorp Vault.&lt;/p&gt;
&lt;p&gt;In any case, the application would not store Database or Redis username and passwords in configuration files any more,
but ask the secrets manager to provide these credentials at runtime, receive them, and then store them only in memory.
They would also be expired and re-requested in regular intervals, on a multiple-minutes to hour scale.&lt;/p&gt;
&lt;p&gt;This allows the Secrets Manager to perform account operations, such as password or account rotation.&lt;/p&gt;
&lt;h1 id=&#34;account-rotation-or-password-rotation&#34;&gt;
    &lt;a href=&#34;#account-rotation-or-password-rotation&#34;&gt;
	Account Rotation or Password Rotation?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Rotating MA passwords is often a requirement, and most environments also require a comparatively high rotation frequency (&amp;ldquo;once per week&amp;rdquo;, which qualifies as &amp;ldquo;high&amp;rdquo; in database timescales).&lt;/p&gt;
&lt;p&gt;Some services, such as MySQL and Redis given as examples above, allow you to associate multiple password with a single account.
Many others do not, in them username (&amp;ldquo;identity&amp;rdquo;) and password (&amp;ldquo;authentication&amp;rdquo;) are a 2-tuple.&lt;/p&gt;
&lt;p&gt;Rotating passwords, when taken literally, is hard with such services, because changing the password atomically in the server and all its clients is impossible.
There is always some overlap during which the service already has the new password (and implicitly invalidated the old password),
while the clients are still using the old password.
If you rotated the password with traditional methods, there would be a discrepancy between clients and servers in password knowledge, and thus failed logins.&lt;/p&gt;
&lt;p&gt;One way around that is provisioning new MA accounts for an application, and then feeding the applications not only new passwords, but completely new credentials.
Thus,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;an application &lt;code&gt;androidapp&lt;/code&gt; would see the old user &lt;code&gt;androidapp_23ad63&lt;/code&gt; with a generated password &lt;code&gt;BBLA32Tm9feoAGpN&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;then account rotation would additionally create &lt;code&gt;androidapp_8760d3&lt;/code&gt; with the password &lt;code&gt;cts6Me5c7T4q6Dq2&lt;/code&gt; and the same authorizations in the service,&lt;/li&gt;
&lt;li&gt;then the account rotation would test that this newly creates account works as desired,&lt;/li&gt;
&lt;li&gt;then the account rotation would stop handing out the old credentials (&lt;code&gt;23ad63&lt;/code&gt;) to clients, and start serving the new credentials (&lt;code&gt;8760d3&lt;/code&gt;),&lt;/li&gt;
&lt;li&gt;then the account rotation would over the course of an hour observe the old account not being used anymore, and the new account picking up traffic,
&lt;ul&gt;
&lt;li&gt;then the account rotation would see the old &lt;code&gt;23ad63&lt;/code&gt; account being silent for two hours, and eventually lock and deprovision it&lt;/li&gt;
&lt;li&gt;or this does not work as expected, and &lt;code&gt;23ad63&lt;/code&gt; stays active past the deadline, in which case we raise an alarm.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;why-no-observability&#34;&gt;
    &lt;a href=&#34;#why-no-observability&#34;&gt;
	Why no observability?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Account rotation has some advantages over password rotation:
First: it works with any application, even those that have no support for multiple passwords.
Lack of multiple password support is stopping no-one from implementing rotation, it is just account and not password rotation you need to build.&lt;/p&gt;
&lt;p&gt;Then:
Even in MySQL and Redis it was not immediately obvious to me how password rotation can be validated to function correctly.
That is, I have been unable to find a way to isolate instances of logins using the &amp;ldquo;non-primary&amp;rdquo; (or old) password, and somehow make sure that all logins in the last hour or so have been using the newly updated password.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As an engineer running the application, I would want to make sure that the old password is unused before I ask the service to deprovision it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But observability on this seems to be completely non-existent.
Which is weird, because any security engineer will tell you that a control is only valid, if you can verify it is working as intended.&lt;/p&gt;
&lt;p&gt;With account rotation, usage of old accounts is immediately visible.
The system can check if the old account is still being used, and once it isn&amp;rsquo;t anymore, it can deprovision it.
If the old account does not go silent within some timeout, we can alert on this, identity the team responsible for the application, and sit down to talk about credential caching.&lt;/p&gt;
&lt;p&gt;Thus, I would rate the implementation of any password rotation feature that does not have good observability built in as incomplete.&lt;/p&gt;
&lt;h2 id=&#34;an-authorization-problem&#34;&gt;
    &lt;a href=&#34;#an-authorization-problem&#34;&gt;
	An authorization problem
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Conversely, while account rotation has automatically good observability, it complicates authorisation.
Authorisation is the set of permissions ties to an identity, the &lt;code&gt;GRANT&lt;/code&gt;s in SQL-lingo.&lt;/p&gt;
&lt;p&gt;If you rotate accounts, you are essentially creating new accounts and drop old accounts on a schedule.
That means&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;either store the authorization outside the system&lt;/li&gt;
&lt;li&gt;or you can leverage a role system.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the latter case, you would create a role &lt;code&gt;androidapp&lt;/code&gt;, and assign it the authorizations, then make sure all &lt;code&gt;androidapp%&lt;/code&gt; accounts are members of the role, inheriting the role authorizations with no individual per-account rules.&lt;/p&gt;
&lt;p&gt;Most, but not all systems have a role-system for accounts similar to MySQL 8 roles, in which you assign authorizations to groups instead of individual accounts.
If you have it, implementing account rotation without complicating authorization is comparatively easy.&lt;/p&gt;
&lt;h1 id=&#34;summary&#34;&gt;
    &lt;a href=&#34;#summary&#34;&gt;
	Summary
    &lt;/a&gt;
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Having a secrets manager that hands out secrets to services and clients is useful, because it allows you to prevent materialization of secrets.
&lt;ul&gt;
&lt;li&gt;One of the primary features of clouds (private and public) would be that the control-plane of the cloud can attest identity of instances, and would allow you to solve authentication trivially.
Sadly, Openstack and all Openstack derives private and public clouds seem to not implement that (and thus offer no IAM to services based on control-plane trust).&lt;/li&gt;
&lt;li&gt;For those where the cloud control-plane does not offer IAM, Hashivault can help out a lot.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Some applications have the ability to have multiple passwords per identity, to allow easier password rotation.
&lt;ul&gt;
&lt;li&gt;The value of that feature is greatly diminished by a lack of observability. Any control is only complete if it can be verified to work.
We need to be able to see if old deprecated passwords are unused in order to safely deprovision them.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Even without multiple passwords, we can always leverage a secrets manager and some relatively simple external driver to rotate accounts instead.
&lt;ul&gt;
&lt;li&gt;This is complicated by the fact that many applications bind authorizations (access permissions) to identities (usernames).&lt;/li&gt;
&lt;li&gt;We can use roles to work around that, and assign authorizations to these roles, then have the identity inherit from the role.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Implementing either account rotation or password rotation still requires additional work: an external driver, safeguards, monitoring and alerting, plus an update of the documentation.
In neither case you will be done by simply turning on a feature.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>This is not a Drill, this is just Tuesday</title>
      <link>https://blog.koehntopp.info/2023/02/18/this-is-not-a-drill.html</link>
      <pubDate>Sat, 18 Feb 2023 06:07:08 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2023/02/18/this-is-not-a-drill.html</guid>
      <description>&lt;h1 id=&#34;master-of-disaster&#34;&gt;
    &lt;a href=&#34;#master-of-disaster&#34;&gt;
	Master of Disaster
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;With a previous employer there was the requirement to implement business continuity management and patch management.
Specifically, there was a requirement to be able to lose a region completely without loss of business.
The other requirement was to be able to have all systems CVE-free within 30 days (in emergencies: 3 days), and to be able to blackstart them.&lt;/p&gt;
&lt;p&gt;That was of course impossible to implement.&lt;/p&gt;
&lt;p&gt;Managements reaction was to create the position of the &amp;ldquo;Master of Disaster&amp;rdquo; (MoD).
The MoD and their apprentice (&amp;ldquo;always two there are&amp;rdquo;) have then planned, for many months, a fail-over between two Regions.
But they did not achieve much, and they never could, because in the end Management Buy-In was missing.
In the end, Management wanted to know (needed to know!), before the test, that it would work.
That of course invalidated this approach completely.&lt;/p&gt;
&lt;h1 id=&#34;security-is-a-process-what-does-that-even-mean&#34;&gt;
    &lt;a href=&#34;#security-is-a-process-what-does-that-even-mean&#34;&gt;
	&amp;ldquo;Security is a process&amp;rdquo;, what does that even mean?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The MoD then changed their way of working completely.
They sat down with the teams, and with each they made a catalog of failure modes.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;What happens when a web server node fails?&amp;rdquo;
&amp;ldquo;What happens when ten web server nodes fail?&amp;rdquo;
&amp;ldquo;What happens when a load balancer dies?&amp;rdquo;
&amp;ldquo;What when a rollout rolls out broken code, and we need to roll back?&amp;rdquo;
&amp;ldquo;What when storage fails?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;And the MoD sat down and worked their way through protocols of past outages.
They cataloged the outages and mapped then to the scenarios created above, and if they found missing cases the catalog was extended, together with the team.&lt;/p&gt;
&lt;h1 id=&#34;it-is-only-science-if-you-write-it-down&#34;&gt;
    &lt;a href=&#34;#it-is-only-science-if-you-write-it-down&#34;&gt;
	It is only science if you write it down
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Then the team was asked to predict what would happen, how they would notice and how to fix.
The MoD made them write these things down, into Opdocs.
The Opdocs got Identifiers.
All scenarios had to have named alarms checking for the scenario, and each alarm message had to include the Opdoc ID.&lt;/p&gt;
&lt;p&gt;Then the team created a test scenario for each of these outages, bundled them together into a test session (&amp;ldquo;a drill&amp;rdquo;).
And together with the Master of Disaster, their apprentice and a scribe went through them one by one, writing down what happened.
Afterwards, all sat down, and compared notes with the predictions, and made a set of tasks to update the Alarms, the Opdocs or the Procedures themselves.
Then they scheduled a followup session.
In the end they arrived at a rhythm of a Drill every two or three sprints, until the team and the MoD were satisfied with the outcome.&lt;/p&gt;
&lt;h1 id=&#34;rinse-repeat&#34;&gt;
    &lt;a href=&#34;#rinse-repeat&#34;&gt;
	Rinse, Repeat
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The MoD did that with all the teams, and magically after a year or so, things were no longer painful, but became a way of operating.
The observed failure modes of the systems changed, because Drill findings made their way into development.
The way of working and the way of thinking changed, in all the teams, fundamentally, even.
Alerts became cleaned up, and with the need to attach Opdocs, Alerts became actionable, because that is what is in an Opdoc:
Packaged actions a relatively unskilled Operator can execute.
Tooling improved, to automate previously manual outage procedures.
Automation grew.
Reliability and reproducibility improved.
Metrics got better.&lt;/p&gt;
&lt;h1 id=&#34;large-scale-outages&#34;&gt;
    &lt;a href=&#34;#large-scale-outages&#34;&gt;
	Large scale outages
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Now the MoD moved on from team-level subsystem failures to larger scenarios that simulated loss of Racks or other larger units, or loss of Network connectivity (intermittently or for longer time).
Also, they added drill scenarios with a loss of storage, that is outages where teams did not get back the machine that was simulated to fail after the Drill.
Instead, they had to create replacements, first individually, then had to black-start entire regions.&lt;/p&gt;
&lt;p&gt;These Drills highlighted automation defects:
Manual and often undocumented work went into creating new systems, so that the automation was not resilient against large scale loss.&lt;/p&gt;
&lt;p&gt;Also, a lot of problems related to loss or unavailability of the automation control plane were highlighted:&lt;/p&gt;
&lt;p&gt;Systems might be able to lose their automation controllers.
This is a &amp;ldquo;loss of control&amp;rdquo; scenario, not &amp;ldquo;loss of availability&amp;rdquo;.
You do not lose web servers, but you lose the ability to make new ones or to decommission old ones or change the config of the existing ones.
Systems usually can continue to run without their automation controller for a few hours, provided the operational circumstances are somewhat stable.&lt;/p&gt;
&lt;p&gt;In some cases, loss of state in the control plane highlighted that the control plane could not rediscover its clients out there and scan them for state.
Instead, it was assumed that the entire region was to be recreated from scratch, when it was in fact there, and perfectly functional, just unknown to the controller.&lt;/p&gt;
&lt;p&gt;In some cases the automation assumed that new systems were to be recreated from scratch by cloning over data from remote regions.
But if all teams are doing that at the same time, the line capacity is insufficient.
It is necessary to do something more sophisticated and use local state (cloned over once) to implement a local fan-out.&lt;/p&gt;
&lt;p&gt;Again, a year or two went past, with limited scope but larger drills.&lt;/p&gt;
&lt;p&gt;Teams picked up the new requirements, development learned a thing or two, and by simply repeating until good the message arrived and improvements got implemented.
We have now reached a state where automation is only considered &amp;ldquo;done done&amp;rdquo; when it survives one of the regularly simulated outages,
and when the state of the Opdocs is good enough for members of adjacent teams (instead of the native team) to manage the outage.&lt;/p&gt;
&lt;p&gt;Also, we have reached a sophistication of automation that allows us to drop each and every instance and each and every image after 90 days,
because replacements are redeployed automatically, and state is cloned over.&lt;/p&gt;
&lt;h1 id=&#34;burning-it-all-down&#34;&gt;
    &lt;a href=&#34;#burning-it-all-down&#34;&gt;
	Burning it all down
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;This, after only three to four years, is where our organisation has reached a state where teams and management can go with confidence into a scenario where access to one Region is lost, in a controlled way and with pre-announcement.
Management can believe that the entire thing is understood well enough that this Drill will not lead of a major loss of income.&lt;/p&gt;
&lt;p&gt;Unannounced random failure of a Region, or total recovery from backup after a ransomware attack are still open issues, but they have become realistic targets.
Each would amount to rebuilding a Region, automatically, from nothing, without loss of operations or income.&lt;/p&gt;
&lt;h1 id=&#34;this-is-not-a-sprint&#34;&gt;
    &lt;a href=&#34;#this-is-not-a-sprint&#34;&gt;
	This is not a Sprint
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2023/02/not-a-drill.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;The key to success for the MoD was the change from Project to Process.
Do small things with individual teams, first with cooperative teams, then reaching out and making the process mandatory for all teams.&lt;/p&gt;
&lt;p&gt;This was not a single giant monster project, but small steps over many years, with a change in the MoD position and with a redefinition of the title and scope of the position along the way.
It also was a fundamental change in the way how operations are done, and what is acceptable.
It improved not only the business continuity stance, but also improved security overall, and made many audits and certifications easier.
It also delivered the necessary metadata (machine inventory, mapping of services to instances, mapping of dependencies, implementation of controls) to management to make a large set of certifications and audits just a formality.&lt;/p&gt;
&lt;p&gt;When people say &amp;ldquo;Security is a process&amp;rdquo;, this is what they mean.
Small, doable exercises that become part of everyday operations.
Then incremental widening of scope and increase of difficulty.&lt;/p&gt;
&lt;p&gt;And the work is not done by the MoD, but by the teams &amp;ndash; all teams.
The MoD only steers the process, and guides the teams through it.&lt;/p&gt;
&lt;p&gt;Because this is not a Drill.
This is just Tuesday.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Service Directories, and what they are good for</title>
      <link>https://blog.koehntopp.info/2023/02/06/service-directories-and-what-they-are-good-for.html</link>
      <pubDate>Mon, 06 Feb 2023 06:07:08 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2023/02/06/service-directories-and-what-they-are-good-for.html</guid>
      <description>&lt;p&gt;At a previous job we had a home-grown application &amp;ldquo;Service Directory&amp;rdquo;, which allowed a team to declare a service or deployed application.
The record for a service not only declared the application with pointers to the source code repository, artifacts and documentation.&lt;/p&gt;
&lt;p&gt;It also pointed to the operational facts, such as criticality, the owning teams, the SLO, the alerts, and the collected stats and dashboards.
And, most importantly, you had to declare dependencies &amp;ndash; which other services you depend on.&lt;/p&gt;
&lt;h1 id=&#34;using-dependencies-for-firewalls-and-passwords&#34;&gt;
    &lt;a href=&#34;#using-dependencies-for-firewalls-and-passwords&#34;&gt;
	Using Dependencies for Firewalls and Passwords
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;From data in service directory firewall rules were being generated, automatically.
That meant that with a non-existent or incomplete SD declaration you could talk to nothing and nobody.&lt;/p&gt;
&lt;p&gt;Also, all machine accounts (non-personal accounts, NPAs) were provisioned with Hashicorp Vault, controlled by SD.
The data in vault was autogenerated, based on – you guessed it – data from the service directory.
And it was rotated.&lt;/p&gt;
&lt;p&gt;That is, every week or so new accounts with new passwords were being added to Vault, picked up by the services, and then also picked up by the clients – order matters a lot here.&lt;/p&gt;
&lt;p&gt;Having individualized machine accounts per application helps a lot to identify service (or database) abuse.
It also allows for individualized rate limits or other controls, and of course minimal permissioning of applications.&lt;/p&gt;
&lt;p&gt;Monitoring would see if old accounts from last week were still being used.
If so, somebody would need to talk to the team owning the service using these accounts, because obviously something was caching credentials somehow, when it should not.
If old accounts are quiet and stay so for some time, the old accounts can be decommissioned and deleted.&lt;/p&gt;
&lt;p&gt;This also makes some nice graphs showing the speed of account (and password) rotation across the enterprise, and these things come handy in audits.
It allows you to prove that passwords are fresh, and that old NPA secret in the hands of leavers cannot be leveraged to gain access to production.&lt;/p&gt;
&lt;h1 id=&#34;using-dependencies-for-capacity-and-business-continuity-planning&#34;&gt;
    &lt;a href=&#34;#using-dependencies-for-capacity-and-business-continuity-planning&#34;&gt;
	Using Dependencies for Capacity and Business Continuity planning
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Having dependency data also comes in handy in many other tasks, such as (with additional data) planning capacity.
While SD data does not directly contain the volumes needed to plan, dependencies show who can generate demand on a service, and from that it is clear what to measure and where to pick up additional information, such as current fleet size, plans for the coming season and so on.&lt;/p&gt;
&lt;p&gt;The dependency web can also be mapped on locations and structural failure boundaries from the underlying physical machinery, and thus it becomes possible to calculate failure scenarios, and using actual placement data, detect co-failure scenarios or write scheduler plugins to avoid them.
Also, mapping dependencies into a graph allows for a functioning black start plan.
It would still require testing, but at least the data for such a thing is there.&lt;/p&gt;
&lt;h1 id=&#34;dependency-inflation&#34;&gt;
    &lt;a href=&#34;#dependency-inflation&#34;&gt;
	Dependency Inflation
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;In such a setup, having not enough dependencies will make an application not work.
Thus, SD data can be relied on to be at least as large as the minimum dependencies, or larger.&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;or larger&amp;rdquo; part is undesirable, but hard to  limit.
The only workable way I have seen requires annoying recurring audits, or equally nagging regular re-requests for all resources.&lt;/p&gt;
&lt;p&gt;Experimentally, requested resources and observed resource usage in production can be mapped on each other, and unused resources can be detected.
They cannot be automatically cancelled, because they still may be necessary, if only in rare situations.
But this would at least bring the nag-level down to manageable sizes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I don&#39;t hate Let&#39;s Encrypt anymore</title>
      <link>https://blog.koehntopp.info/2023/01/04/i-dont-hate-letsencrypt-anymore.html</link>
      <pubDate>Wed, 04 Jan 2023 06:07:08 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2023/01/04/i-dont-hate-letsencrypt-anymore.html</guid>
      <description>&lt;p&gt;So, Rachel is in a bad mood:
&lt;a href=&#34;https://rachelbythebay.com/w/2023/01/03/ssl/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Why I still have an old-school cert on my https site&lt;/a&gt;


and I feel her.
Like her, for my own sites I have always been running Apache.
There was never much need to upgrade, the software was available, stable, and fast enough.&lt;/p&gt;
&lt;p&gt;At some point in time, I needed TLS and started to use &lt;a href=&#34;https://letsencrypt.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;That was messy: Running
&lt;a href=&#34;https://github.com/dehydrated-io/dehydrated&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dehydrated&lt;/a&gt;

,
a bunch of haphazard shell scripts trying to get certificates authenticated and installed, through a wild chain of callbacks and sourced scripts all over the system,
driven by Cron, and with bad alerting.&lt;/p&gt;
&lt;p&gt;None of that was necessary.&lt;/p&gt;
&lt;p&gt;Turns out, starting with Apache 2.4.30 (19-Feb-2018), Apache supports
&lt;a href=&#34;https://httpd.apache.org/docs/trunk/mod/mod_md.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mod_md&lt;/a&gt;

,
and that supports Let&amp;rsquo;s Encrypt out of the box.
For good measure, I also enabled &lt;a href=&#34;https://httpd.apache.org/docs/current/mod/mod_macro.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mod_macro&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;This being an Ubuntu, I put this into my &lt;code&gt;/etc/apache2/sites-available/000-default.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-apacheconf&#34; data-lang=&#34;apacheconf&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;ServerName&lt;/span&gt; mybasedomain.koehntopp.de
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;MDomain&lt;/span&gt; mybasedomain.koehntopp.de contentdomain.koehntopp.de proxydomain.koehntopp.de
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;MDContactEmail&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;@example.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;MDCertificateAgreement&lt;/span&gt; accepted
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;MDPrivateKeys&lt;/span&gt; RSA &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There is no additional &amp;ldquo;SSLEngine&amp;rdquo; needed, except &lt;code&gt;SSLEngine on&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I also add two macros that I use a lot to create virtual hosts to the same file.
One is for straight-up content domains:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-apacheconf&#34; data-lang=&#34;apacheconf&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;Macro&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;VHost $host&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;*:80&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ServerName&lt;/span&gt; $host
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ServerAdmin&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;@example.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;DocumentRoot&lt;/span&gt; &lt;span class=&#34;sx&#34;&gt;/var/www/&lt;/span&gt;$host
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/var/www/$host&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;Options&lt;/span&gt; Indexes FollowSymLinks
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;AllowOverride&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;Require&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;all&lt;/span&gt; granted
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ErrorLog&lt;/span&gt; ${APACHE_LOG_DIR}/error-$host.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;CustomLog&lt;/span&gt; ${APACHE_LOG_DIR}/access-$host.log combined
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;RewriteEngine&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;On&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;RewriteRule&lt;/span&gt; ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;*:443&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ServerName&lt;/span&gt; $host
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ServerAdmin&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;@example.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ErrorLog&lt;/span&gt; ${APACHE_LOG_DIR}/error-$host.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;CustomLog&lt;/span&gt; ${APACHE_LOG_DIR}/access-$host.log combined
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;DocumentRoot&lt;/span&gt; &lt;span class=&#34;sx&#34;&gt;/var/www/&lt;/span&gt;$host
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/var/www/$host&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;Options&lt;/span&gt; Indexes FollowSymLinks
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;AllowOverride&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;Require&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;all&lt;/span&gt; granted
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;SSLEngine&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Macro&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The other is for Proxy Domains to dockerized stuff:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-apacheconf&#34; data-lang=&#34;apacheconf&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;Macro&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;ProxyVHost $host $toport&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;*:80&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ServerName&lt;/span&gt; $host
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ServerAdmin&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;@example.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;DocumentRoot&lt;/span&gt; &lt;span class=&#34;sx&#34;&gt;/var/www/&lt;/span&gt;$host
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/var/www/$host&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;Options&lt;/span&gt; Indexes FollowSymLinks
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;AllowOverride&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;Require&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;all&lt;/span&gt; granted
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ErrorLog&lt;/span&gt; ${APACHE_LOG_DIR}/error-$host.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;CustomLog&lt;/span&gt; ${APACHE_LOG_DIR}/access-$host.log combined
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;RewriteEngine&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;On&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;RewriteRule&lt;/span&gt; ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;*:443&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ServerName&lt;/span&gt; $host
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ServerAdmin&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;@example.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ErrorLog&lt;/span&gt; ${APACHE_LOG_DIR}/error-$host.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;CustomLog&lt;/span&gt; ${APACHE_LOG_DIR}/access-$host.log combined
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;DocumentRoot&lt;/span&gt; &lt;span class=&#34;sx&#34;&gt;/var/www/&lt;/span&gt;$host
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/var/www/$host&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;Options&lt;/span&gt; Indexes FollowSymLinks
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;AllowOverride&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;Require&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;all&lt;/span&gt; granted
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;SSLEngine&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ProxyPreserveHost&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;On&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ProxyPass&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://127.0.0.1:$toport/&amp;#34;&lt;/span&gt; nocanon
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;ProxyPassReverse&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://127.0.0.1:$toport/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;RequestHeader&lt;/span&gt; set X-Forwarded-Proto %{REQUEST_SCHEME}s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;RequestHeader&lt;/span&gt; set X-Forwarded-For %{REMOTE_ADDR}s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;RequestHeader&lt;/span&gt; set X-Real-IP %{REMOTE_ADDR}s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;AllowEncodedSlashes&lt;/span&gt; NoDecode
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Macro&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The actual host definition can then be rather short.
A content domain is simply&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Use Vhost contentdomain.koehntopp.de&amp;#34;&lt;/span&gt; &amp;gt; /etc/apache2/sites-available/contentdomain.koehntopp.de.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; a2ensite contentdomain.koehntopp.de
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and I am done. Similarly, a proxy to some internal service:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Use ProxyVHost proxydomain.koehntopp.de 3000&amp;#34;&lt;/span&gt; &amp;gt; /etc/apache2/sites-available/proxydomain.koehntopp.de.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; a2ensite proxydomain.koehntopp.de
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;where &lt;code&gt;3000&lt;/code&gt; is the exposed port from docker. An &lt;code&gt;apachectl configtest&lt;/code&gt; and an &lt;code&gt;apachectl graceful&lt;/code&gt; later things are rolling.
A look at &lt;code&gt;/server-status&lt;/code&gt; will tell you if things worked, and what the state of the &lt;code&gt;mod_md&lt;/code&gt; deployment is.&lt;/p&gt;
&lt;p&gt;If you added a new domain, that certificate will be available, but not yet loaded, so a second reload is necessary for deployment.&lt;/p&gt;
&lt;p&gt;Find the actual cert files in &lt;code&gt;/etc/apache2/md/domains/mybasedomain.koehntopp.de&lt;/code&gt;, as &lt;code&gt;pubcert.pem&lt;/code&gt; and &lt;code&gt;privkey.pem&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Additional Note:&lt;/strong&gt;
You can use &lt;code&gt;mod_md&lt;/code&gt; to get certificates for your Tailscale domains (Domains in the &lt;code&gt;*.ts.net&lt;/code&gt; namespace).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Was mein Kind in der Schule so macht</title>
      <link>https://blog.koehntopp.info/2022/12/30/was-mein-kind-in-der-schule-so-macht.html</link>
      <pubDate>Fri, 30 Dec 2022 01:02:03 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2022/12/30/was-mein-kind-in-der-schule-so-macht.html</guid>
      <description>&lt;p&gt;Die Niederlande sind ja ein Land, das mit WhatsApp funktioniert.
&amp;ldquo;Ik stuur je snel een appie&amp;rdquo; und wenn WhatsApp mal down ist, wird das Land vorübergehend geschlossen.&lt;/p&gt;
&lt;p&gt;Damit kann man einverstanden sein oder nicht, aber Metcalfe&amp;rsquo;s Law ist mächtig und wenn man das Land nicht in Hard Mode spielen will, dann legt man sich besser ein WhatsApp zu.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/12/whatsapp-01.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;An ungefähr jedem zweiten Wohngebiet findet man ein solches Schild an der Einfahrtstraße.
Es gehört zu &lt;a href=&#34;https://www.wabp.nl/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WBAP&lt;/a&gt;

 (WhatsApp BuurtPreventie), einem System von mehr als 10.000 Nachbarschafts-Chatgruppen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Auch die Schulen haben viele Jahre lang mit den Eltern pro Klasse eine WhatsApp-Gruppe gefahren.
Das ist dann vor vier oder fünf Jahren plötzlich aus Datenschutzgründen untersagt worden.
Dabei ist &amp;ndash; datenschutztypisch &amp;ndash; keine Alternative genannt worden.&lt;/p&gt;
&lt;p&gt;Man hat also hastig eine Chatfunktion in die Schul-App integriert, also in unserem Fall für die Grundschule in &lt;a href=&#34;https://www.parnassys.nl/oplossingen/modules/parro&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Parro&lt;/a&gt;

.
Da hatte man dann eine 50:50 Chance, daß die betreffende Lehrkraft das auch benutzt und in Time gesehen hat.&lt;/p&gt;
&lt;p&gt;Die Schüler hatten alle kein Problem.
Die hatten alle, sobald sie schreiben konnten, ein eigenes Handy.
Entweder ohne SIM oder mit einer Prepaid-Karte drin.
Und natürlich haben sie sich selbst pro Klasse WhatsApp-Gruppen gebaut.&lt;/p&gt;
&lt;p&gt;Wenn man also zuverlässig kommunizieren wollte, dann mußte man über die WhatsApp-Gruppe der Kinder herausfinden, welche WhatsApp-Gruppe die Eltern der Klasse organisiert hatten, und dann ging es weiter.
Nur halt ohne Lehrer.&lt;/p&gt;
&lt;p&gt;Das ist hoffentlich für niemanden überraschend:
Wenn jemand etwas aus welchem Grund auch immer verbietet, dann geht der Bedarf ja nicht weg, der zum Betrieb der originalen Lösung geführt hat.
Wenn man also den Datenschutz, Security oder sonst irgendwelche Interessen vertritt und dabei nicht konstruktiv arbeitet, also rechtskonforme, aber vor allen Dingen funktionierende und bedarfsgerechte Lösungen als Ersatz anbietet, dann passiert… genau gar nix.&lt;/p&gt;
&lt;p&gt;Außer einem weiteren gloriosen Sieg für den Datenschutz, mit dem wir Europäer den bösen amerikanischen Datenkraken-Megakonzernen mal so richtig gezeigt habe, was eine Harke ist.
Feuerwerk!&lt;/p&gt;
&lt;h1 id=&#34;schul-app&#34;&gt;
    &lt;a href=&#34;#schul-app&#34;&gt;
	Schul-App
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Ein wenig Hintergrund:
&lt;a href=&#34;https://nl.wikipedia.org/wiki/Verzuiling&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Verzuiling&lt;/a&gt;

 (&amp;ldquo;Versäulung&amp;rdquo;) ist eine spezifische Entwicklung von innerstaatlichen Parallelgesellschaften, die typisch für die niederländische Gesellschaft war.
So gab es im Schulbereich katholische, protestantische und nicht-konfessionelle Schulen und in einigen Bereichen auch gewerkschaftlich geprägte Schulzüge.&lt;/p&gt;
&lt;p&gt;Selbst hier in unserem 5000-Leute-Dorf gab es bis vor 4 Jahren noch eine konfessionelle und eine nicht-konfessionelle Grundschule, die dann erst aus finanziellen Gründen und wegen der sinkenden Schülerzahlen zusammen gegangen sind.
Das war weitgehend problemlos, da auch an der (größeren) konfessionellen Schule außer dem Religionsunterricht und gelegentlichen Kirchenbesuchen am Reformationstag kaum etwas von der konfessionellen Ausrichtung zu spüren war.&lt;/p&gt;
&lt;p&gt;Aber die Schulen, mit denen ich Erfahrung habe, sind meistens Mitglied in einer Gruppe, die eine gemeinsame Schul- und Technikorganisation haben.
Für unsere Grundschule war das zum Beispiel
&lt;a href=&#34;https://jl.nu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stichting Jong Leren&lt;/a&gt;

,
und die jl-Schulen verwenden alle
&lt;a href=&#34;https://www.parnassys.nl/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Parnassys&lt;/a&gt;


als Schul-Anwendung und Parro als Schulapp.&lt;/p&gt;
&lt;p&gt;Bei den VWO, die ich im Detail angesehen habe, war das dann alles auf der Basis von
&lt;a href=&#34;https://www.magister.nl/voor-iedereen/leerlingen-en-ouders/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Magister&lt;/a&gt;

.
Alle Schulen, mit denen ich zu tun hatte, nahmen dann hinten dran im Betrieb Google Edu und weitere hinten dran gestrickte Anwendungen von Schulbuch- und Contentverlagen.&lt;/p&gt;
&lt;p&gt;Die sind dann jeweils von der Trägerorganisation in Zusammenarbeit mit den Verlagen entwickelt worden, und passen zu den Lehrbüchern und Übungen.&lt;/p&gt;
&lt;p&gt;In der Regel arbeiten die verschiedenen Träger zusammen, und so gibt es da nicht sonderlich tiefgreifende Unterschiede zwischen den Trägern.
Das will man schon aus Kostengründen nicht erzwingen, wozu auch?&lt;/p&gt;
&lt;p&gt;Wenn man als Schule Arbeit vom Hals haben will, dann sucht man sich also eine zur eigenen Säule und zur eigenen Ideologie passende Träger-Organisation aus und tritt da ein, damit man Zugriff auf diese Ressourcen hat.
Am Ende landet man dann bei Magister und Google Edu, weil das irgendwie alle machen und das auch total sinnvoll ist.&lt;/p&gt;
&lt;h1 id=&#34;magister&#34;&gt;
    &lt;a href=&#34;#magister&#34;&gt;
	Magister
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Um einmal einen Eindruck zu vermitteln, wie so etwas aussehen kann:
Magister bietet in der Elternansicht eine Reihe von nützlichen Funktionen an, die im Grunde ein &amp;ldquo;Klassenbuch&amp;rdquo; komplett ersetzen.&lt;/p&gt;
&lt;p&gt;Die Anwendung kann mehrere Kinder verwalten.&lt;/p&gt;
&lt;p&gt;Ich sehe den Stundenplan, Hausaufgabe, Fehlzeiten, Noten und diverse Mails und Mitteilungen der Schulleitung, sowie To-do-Listen und zusätzliche Studienangebote der Schule.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/12/magister-01.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Screenshot des Hauptmenüs von Magister mit den Punkten Stundenplan, Hausaufgaben, Abwesenheit, Noten, Mail, Mitteilungen, Studienwegweiser, Todo und Stammdatenverwaltung.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ich kann im Stundenplan sehen, ob Hausaufgaben aufgegeben sind.
Ich kann auch erkennen, ob das Kind sie abgehakt hat (dann wäre der Böppel grün).&lt;/p&gt;
&lt;p&gt;In der Hausaufgabenansicht bekomme ich das kompakter, als Liste.&lt;/p&gt;
&lt;p&gt;Fehlzeiten, entschuldigt und unentschuldigt, bekomme ich auch mit.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/12/magister-02.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Stundenplan für den 12. Januar 2023, mit Unterrichtsbeginn um 9:35. Es ist eine Doppelstunde Geschichte, dann Kunst, dann zwei Doppelstunden O&amp;amp;O. Zu Geschichte ist eine Hausaufgabe vorhanden, die noch nicht abgehakt ist.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In der Notenansicht sind die letzten Ergebnisse, das Datum des neusten Ergebnisses und die Note selbst (hier zensiert) jeweils sichtbar.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/12/magister-03.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Die Notenansicht. Sie zeigt jeweils das Datum des letzten Ergebnisses und (hier zensiert) das letzte Ergebnis, sowie die Anzahl der vorliegenden Ergebnisse. Man kann dann auf die einzelnen Leistungsnachweise zurückblättern.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Auf diese Weise ist zwischen allen Beteiligten jeweils die Faktenlage aktuell und transparent dokumentiert und es geht nichts verloren.
Alles in allem ist das recht effektiv.&lt;/p&gt;
&lt;p&gt;Wir hatten vor den Weihnachtsferien das erste Elterngespräch auf der neuen Schule.
Da von den Sachfragen her alles klar war, haben wir mit dem Kind und zwei Lehrkräften zusammen gesessen und dann mal darüber geredet, wie das so ist mit Niederländisch als Zweitsprache an der VWO, und wo noch was zu machen ist.&lt;/p&gt;
&lt;p&gt;Mit einem deutschen Elternabend komplett nicht vergleichbar.&lt;/p&gt;
&lt;p&gt;Das ist bemerkenswert, weil die Lehrerausbildung in Deutschland sehr viel besser ist.
Hierzulande ist Lehrer ein Ausbildungsberuf, und je nach Hintergrund haben die betreffenden Personen zwischen sechs Monaten und drei Jahren Ausbildung erhalten.
Der Rest muss per Weiterbildung und durch Assimilation &amp;ldquo;on the Job&amp;rdquo; passieren.
Man kann am Alter der Lehrkraft schon grob abschätzen, wie umfassend ihr Repertoire an Methodik, Konfliktlösung und Kommunikationstraining ist.
Und wie bei Handwerkern auch ist das Spektrum an Leistungsunterschieden sehr viel breiter, als man das von Deutschland gewohnt ist, weil die Ausbildung selbst sehr viel individueller und variabler ist.&lt;/p&gt;
&lt;h1 id=&#34;schwächen-aber-nicht-bei-der-technik&#34;&gt;
    &lt;a href=&#34;#schw%c3%a4chen-aber-nicht-bei-der-technik&#34;&gt;
	Schwächen, aber nicht bei der Technik
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Alles in allem kann man sowohl für die Grundschule als auch die VWO sagen, daß die Technik funktioniert.&lt;/p&gt;
&lt;p&gt;Die Schulgebäude sind modern, sauber und gut renoviert.
Die Ausstattung mit der Technik ist natürlicht nicht optimal, aber weitgehend adäquat, und die Räume sind von der Ausstattung her in der Lage, die Technik zu tragen.
Das gilt insbesondere auch für Netz in die Schule (Glasfaser) und Wifi (aktiv gemanaged und auf die Anzahl der Clients abgestimmt, mit einer Abdeckungs- und Lastanalyse).&lt;/p&gt;
&lt;p&gt;Verwaltung und Betrieb sind an ICT-Firmen ausgelagert, die mit den Verwaltungsanwendungen und Google Edu umzugehen wissen.
Erwartungsgemäß kommt es dabei zu Beginn des Schuljahres zu einzelnen Rucklern und Rechteschwankungen, die jedoch teilweise erstaunlich lange in der Bearbeitung brauchen.
Am Ende hat es 14 Tage gedauert, bis alle Schüler in ihren Klassenverbänden mit den korrekten Stammdaten und Rechten registriert waren.&lt;/p&gt;
&lt;h2 id=&#34;mithalten-ist-arbeit&#34;&gt;
    &lt;a href=&#34;#mithalten-ist-arbeit&#34;&gt;
	Mithalten ist Arbeit
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Schule selbst steht zum Teil vor großen pädagogischen Problemen, weil die Leistungsstände der Kinder beim Umgang mit Rechnern und mit der speziellen Umgebung extrem unterschiedlich sind.
Sie darf nichts voraussetzen, aber die meisten Kinder kennen sich mit der Technik gut genug aus, um sofort loszuarbeiten und einzelne Kinder haben einen Leistungsstand, der dem der Lehrkräfte vergleichbar ist.
Dies zu vereinheitlichen und dabei weder oben noch unten Leute zu verlieren ist nahezu unmöglich, und auch nicht gut gelöst.&lt;/p&gt;
&lt;p&gt;Die oft gehörten Bedenken &amp;ldquo;große Konzerne drängen auf den Bildungsmarkt, und versuchen Abhängigkeiten zu erzeugen, Curricula zu pushen und Kunden für die Zukunft zu binden oder Daten zu monetarisieren&amp;rdquo; lassen sich durch Beobachtung von meiner Seite nicht bestätigen.&lt;/p&gt;
&lt;p&gt;Es bestehen Probleme, aber die sind anderer Art.
In &amp;ldquo;ICT Basisvaardigheden&amp;rdquo; wird teilweise Unterrichtsmaterial verwendet, das Spezifika von Windows-Programmen voraussetzt und abfragt.
Aber die Schule setzt Chromebooks ein und wir haben Apple daheim.
Das Kind &amp;ndash; im Grunde sehr sicher im Umgang mit Rechnern &amp;ndash; kommt aufgelöst angerannt und fragt sich, wie es die Aufgabe lösen soll.
&amp;ldquo;Ja&amp;rdquo;, sagt die Schule, &amp;ldquo;wir können das Unterrichtsmaterial nicht schnell genug anpassen.&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;arbeiten-in-lokalen-und-verteilten-gruppen&#34;&gt;
    &lt;a href=&#34;#arbeiten-in-lokalen-und-verteilten-gruppen&#34;&gt;
	Arbeiten in lokalen und verteilten Gruppen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Auch in der Gestaltung des Unterrichts stößt die Schule teilweise an ihre Grenzen, hier dann aber wegen Ausbildungs- und Umsetzungsschwächen.
Diese spezielle Schule ist sehr stolz auf das Fach O&amp;amp;O (&amp;ldquo;Onderzoek &amp;amp; Ontwerpen&amp;rdquo;, &amp;ldquo;Untersuchen und Entwerfen&amp;rdquo;).
Die Grundidee ist fantastisch, weil das eine schulbegleitende, fächerübergreifende Ingenieursanwendung ist:
Die Kinder sollen in Kleingruppen, gemeinsam, ein konkretes real-weltliches Problem lösen, also zum Beispiel ein Löwengehege im Artis-Zoo von Amsterdam entwerfen oder eine Upcycling-Lösung für ein Produkt einer Firma entwerfen.&lt;/p&gt;
&lt;p&gt;Die Umsetzung scheitert auf mehr als einer Ebene, und das müßte sie im Grunde nicht.
Wir reden hier nach deutscher Skala von Kindern 7. Klasse Gymnasium, die in einem neu zusammengewürfelten Klassenverband die neue Schule beginnen.
Sie werden zufällig und für jedes Projekt neu in zufällige, nicht selbstbestimmte 4er-Gruppen geworfen, und natürlich geht das Team danach immer wieder neu durch die Forming, Storming, Norming and Performing-Phasen.
Das wäre leicht vermeidbar, wenn man dies verstünde, die Teams stabil ließe und dabei dann behutsam Ausgleichs-Umbesetzungen vornähme, wo das notwendig ist.&lt;/p&gt;
&lt;p&gt;Die einzelnen Aufgaben werden teilweise mit recht wenig Begleitung und gewiss ohne Meta-Ziele in die Teams geworfen.
Es wäre total sinnvoll, die erste Aufgabe als Wegwerf-Projekt zu inszenieren und dabei nicht nur den Gebrauch der Google-Office-Werkzeuge zu lehren, sondern auch kollaboratives Arbeiten, Strukturierung der Arbeitsumgebung, und dabei den Teams Zeit und Raum zu geben, gemeinsame Normen und Methoden zu finden.
Auch diese Chance wurde vergeben.&lt;/p&gt;
&lt;p&gt;Ebenso hätte man bei verschiedenen dieser Projekte die Konzepte von Stakeholdern, multilateralen Zielen, Design Constraints und andere Dinge einführen können.
Artis ist zum Beispiel ein Zoo, der auf enorm kleinem Raum auskommen muß, weil er mitten in einer dicht gepackten Innenstadt liegt.
Die Bedürfnisse von Tieren, Besuchern, Wärtern und die finanziellen Constraints der Betreiber unter einen Hut zu bekommen ist so gut wie unmöglich, aber selbst mit einer vereinfachten Aufgabenstellung hätte man zumindest diese Blickwinkel, harte und weiche Einschränkungen und dergleichen mehr ansprechen können und das Projekt so pädagogisch sehr viel wertvoller machen können.&lt;/p&gt;
&lt;p&gt;Ich bin nicht nahe genug dran, um beurteilen zu können, warum das so ist, aber ich habe den laienhaften Eindruck, daß es da an strukturierter Aufbereitung der Ziele und der pädagogischen Umsetzung mangelt.
Dort wären viele &amp;ldquo;leichte&amp;rdquo; Gewinne und einfache Verbesserungen möglich.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Chromebooks in der Schule</title>
      <link>https://blog.koehntopp.info/2022/12/29/chromebooks-in-der-schule.html</link>
      <pubDate>Thu, 29 Dec 2022 01:02:03 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2022/12/29/chromebooks-in-der-schule.html</guid>
      <description>&lt;p&gt;In
&lt;a href=&#34;https://blog.koehntopp.info/2020/01/28/mein-sohn-sitzt-vor-dem-computer.html&#34;&gt;Mein Sohn sitzt vor dem Computer&lt;/a&gt;


und in
&lt;a href=&#34;https://blog.koehntopp.info/2020/06/23/schulen-digitalisieren.html&#34;&gt;Schulen digitalisieren&lt;/a&gt;


ging es schon einmal um den Einsatz von Computern in der Schule, in Deutschland und in den Niederlanden.&lt;/p&gt;
&lt;h1 id=&#34;vwo&#34;&gt;
    &lt;a href=&#34;#vwo&#34;&gt;
	VWO
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Jetzt stand bei uns letzten Sommer nach dem Ende der 8. Grundschulklasse (der deutschen 6. Grundschulklasse) der Schulwechsel auf die &lt;a href=&#34;https://nl.wikipedia.org/wiki/Voorbereidend_wetenschappelijk_onderwijs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VWO&lt;/a&gt;

 an.
VWO steht für &amp;ldquo;Voorbereidend wetenschappelijk onderwijs&amp;rdquo;, studienvorbereitender Unterricht, und entspricht noch am ehesten einem deutschen Gymnasium.
So wie es in Deutschland Gymnasien mit unterschiedlicher Ausrichtung gibt, gibt es das auch in den Niederlanden und der Name &amp;ldquo;Gymnasium&amp;rdquo; steht für eine VWO mit altsprachlicher Ausrichtung, der Name &amp;ldquo;Atheneum&amp;rdquo; für VWO mit einer technisch-naturwissenschaftlichen Ausrichtung, und es gibt noch ein paar weitere Geschmacksrichtungen.
Die Schulart ist VWO.&lt;/p&gt;
&lt;p&gt;Wie auch schon in der Grundschule werden im Unterricht unter anderem Chromebooks benutzt und der Online-Teil des Unterrichts um
&lt;a href=&#34;https://edu.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Edu&lt;/a&gt;


herum strukturiert.
In einer Diskussion mit Deutschen gab es dabei einen Haufen komische Vorstellungen, was das ist, wieso das nützlich ist und natürlich einen Haufen Befürchtungen, ob das nicht gefährlich ist.&lt;/p&gt;
&lt;h1 id=&#34;chromebook&#34;&gt;
    &lt;a href=&#34;#chromebook&#34;&gt;
	Chromebook
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Ein Chromebook ist ein normaler Laptop mit Linux, der direkt in einen Chrome Browser bootet.
Auf dem Gerät werden keine Daten gespeichert, alle Daten werden in den Diensten hinterlegt, die man mit dem Gerät nutzt.&lt;/p&gt;
&lt;p&gt;Chromebooks gibt es in sehr unterschiedlichen Leistungsklassen und Preislagen.
Von 200 Euro Wegwerf-Geräten bis zu 2k Euro mit Touchscreen und dicken CPUs ist alles vorhanden, auch wenn der Schwerpunkt eindeutig auf kostengünstigen Geräten mit niedrigem Energieverbrauch und langer Akkulaufzeit liegt.&lt;/p&gt;
&lt;p&gt;Wir haben gar keines gekauft, sondern ein Angebot eines
&lt;a href=&#34;https://rentcompany.nl/easy4u-abonnement/ouders-van-vo-scholieren&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;von der Schule empfohlenen Dienstleisters&lt;/a&gt;


wahrgenommen, und mieten für 13.70 Euro im Monat.
Dadurch haben wir immer ein aktuelles und funktionsfähiges Gerät (und Daten können prinzipbedingt sowieso nicht verloren gehen), und brauchen uns keine Sorgen zu machen.&lt;/p&gt;
&lt;p&gt;Technisch ist das so, daß das Kind ein von der Schule bereitgestelltes Google Edu Login bekommt.
Mit dem Login kann er sich auf dem Gerät oder auf seinem Rechner daheim anmelden.
Danach kann er dann die von der Schule bereitgestellten Dienste und Daten nutzen.
Dabei spielt es keine Rolle wo er ist, und ob er das Chromebook oder seinen privaten Rechner benutzt, solange er im Browser mit der Schul-Identität unterwegs ist.&lt;/p&gt;
&lt;p&gt;Angenehm ist, daß&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;das Gerät im Grunde keine Rolle spielt, sondern nur das Login wichtig ist&lt;/li&gt;
&lt;li&gt;keine Daten auf dem Gerät sind, sodaß nichts verloren gehen kann und nahtlos zwischen daheim und der Schule gewechselt werden kann&lt;/li&gt;
&lt;li&gt;der Chrome-Browser mehrere Identitäten verwalten kann, sodaß das Kind sowohl auf dem Chromebook als auch auf dem privaten Rechner in unterschiedlichen Fenstern unterschiedliche Identitäten haben kann&lt;/li&gt;
&lt;li&gt;Zugriffsregeln und Rechte vom Login abhängen und nicht vom Gerät&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nützlich ist auch, daß das Gerät eine Tastatur und Maus hat.
Dadurch kann man auf dem Gerät sinnvoll schreiben und Inhalte erzeugen.
Es gibt Geräte mit Touchscreen und Tablet-Betrieb, wenn man das &lt;em&gt;auch&lt;/em&gt; braucht,
aber generell sind dies &amp;ldquo;richtige Laptops&amp;rdquo; und keine Tablet-Geräte, die auf Konsum von Inhalten optimiert sind.&lt;/p&gt;
&lt;h2 id=&#34;keine-viren&#34;&gt;
    &lt;a href=&#34;#keine-viren&#34;&gt;
	Keine Viren
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Chromebooks unterscheiden sich von normalen Computern dadurch, daß sie in der normalen Betriebsart einen &amp;ldquo;trusted boot&amp;rdquo; durchführen.
Das System ist dann vom Systemstart an validiert und durch Prüfsummen abgesichert &amp;ndash; weder das System noch der Browser können durch Viren, unangemeldete Systemerweiterungen oder Browser-Plugins &amp;ldquo;verunreinigt&amp;rdquo; werden.
Wenn der Zustand des Rechners einmal fragwürdig sein sollte, drückt Ctrl-Alt-Shift-R und wählt Restart -&amp;gt; Powerwash.
Das System führt dann einen &amp;ldquo;&lt;a href=&#34;https://support.google.com/chromebook/answer/183084&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Powerwash&lt;/a&gt;

&amp;rdquo; durch, und ist danach wieder auf den abgesicherten Fabrikzustand zurückgesetzt.
Nach einem neuen Login hat man dann ein sauber aufgesetztes System und seine Daten.&lt;/p&gt;
&lt;p&gt;Das ist für die Schule angenehm, denn dies ist in der Tat die gesamte Gerätewartung, die vor Ort notwendig ist.
Installation, Konfiguration und Wartung vor Ort entfallen komplett.&lt;/p&gt;
&lt;h1 id=&#34;google-edu&#34;&gt;
    &lt;a href=&#34;#google-edu&#34;&gt;
	Google Edu
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Für die Schule ist das Wegfallen der Gerätewartung und Installation angenehm, aber nur das User-Ende der Schul-Verwaltung.
Der eigentliche Clou ist Google Edu, also &amp;ldquo;&lt;a href=&#34;https://workspace.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Workspace&lt;/a&gt;

 für Schulen&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Google Workspace&amp;rdquo; ist für den Endbenutzer sichtbar die Sammlung von Werkzeugen, die früher unter dem Namen &amp;ldquo;Google Office&amp;rdquo; bekannt war.
Also Gmail, Calendar, Drive, Docs/Sheets/Slides/Forms, und das Meet Konferenzsystem/Chat.&lt;/p&gt;
&lt;h2 id=&#34;iam&#34;&gt;
    &lt;a href=&#34;#iam&#34;&gt;
	IAM
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wichtiger für die Schule selbst und für den Endbenutzer eher unsichtbar ist das IAM-Backend.
IAM steht dabei für &amp;ldquo;Identitäts- und Access-Management&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Das ist die Struktur, die der Schule &amp;ldquo;Logindienste&amp;rdquo; und &amp;ldquo;Rechteverwaltung&amp;rdquo; bereitstellt.
In
&lt;a href=&#34;https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control.html&#34;&gt;Identität, Authentisierung, Autorisierung, Auditing und Accounting&lt;/a&gt;


definiere ich eben diese Begriffe.
Die Kurzform:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Identität ist der Login-Name, der mich im Kontext meiner Organisation repräsentiert.
Also so etwas wie &amp;ldquo;&lt;a href=&#34;mailto:kristian.koehntopp@schulname.nl&#34;&gt;kristian.koehntopp@schulname.nl&lt;/a&gt;

&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Authentisierung ist der Mechanismus, oder die Kombination von Mechanismen, mit der ich gegenüber dem System beweise, daß ich wirklich &amp;ldquo;&lt;a href=&#34;mailto:kristian.koehntopp@schulname.nl&#34;&gt;kristian.koehntopp@schulname.nl&lt;/a&gt;

&amp;rdquo; bin.
Also so was wie mein Paßwort und der Knopfdruck auf meinem Yubikey.&lt;/li&gt;
&lt;li&gt;Anker ist die Bestätigung der Organisation, daß ich wirklich zur Organisation gehöre und welche Rolle ich dort habe.
Das ist vor allen Dingen bei Self-Signup wichtig, also wenn man Login nicht durch die Schule generiert worden wäre, sondern ich mich selbst anmelde.
Mit der Verankerung verhindert die Organisation, daß jemand  sich anmeldet und sich selbst dann Attribute wie &amp;ldquo;gehört der Schule an&amp;rdquo;, &amp;ldquo;ist Mitglied des Lehrkörpers&amp;rdquo; und so weiter zuweist.&lt;/li&gt;
&lt;li&gt;Autorisierung ist der Satz an Rechten, den ich auf Grund meiner bewiesenen Identität habe.
&lt;ul&gt;
&lt;li&gt;Der Rechtesatz ist in der Regel identisch mit dem vieler anderer Nutzer, die die gleiche Rolle wie ich haben (&amp;ldquo;Schüler&amp;rdquo;, &amp;ldquo;Lehrer&amp;rdquo;, &amp;ldquo;Administrator&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;Der Rechtesatz kann automatisch generiert werden, wenn verifizierte Attribute bereitstehen (&amp;ldquo;Lehrer&amp;rdquo;-Rolleninhaber können nur die Daten &amp;ldquo;ihrer Klasse&amp;rdquo; sehen).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Auditing ist ein nicht abschaltbares, nicht veränderbares Logbuch von systemrelevanten Aktivitäten im System, bei dem das Verändern von Systemobjekten durch Benutzer mitgeloggt wird.
&lt;ul&gt;
&lt;li&gt;Ein Audit-Event ist dann so etwas wie &amp;ldquo;Der Lehrer Lempel hat die Mathematik-Note von Kristian Köhntopp am &amp;hellip; um &amp;hellip; unter Benutzung der IP &amp;hellip; auf 3 gesetzt.&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Accounting ist ein spezielles Auditing, das die Grundlage der Rechnungslegung ist.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Der eigentliche Clou, für die Schule und ihre Administration, ist dabei das IAM, also die Tatsache, daß der Schule und ihren Partnern ein konfigurierbares, offenes IAM bereitgestellt wird.
Partner kann dabei auch ein IT-Partner sein, also eine Firma oder Behörde, die für die Schule die Konfiguration und den Betrieb von Google Edu übernimmt.
Dabei ist das System selbstverständlich so gestaltet, daß ein solcher Partner zwar die Rechte der Benutzer konfigurieren kann, aber natürlich nicht ihre Daten sehen oder verändern.&lt;/p&gt;
&lt;h2 id=&#34;oauth2&#34;&gt;
    &lt;a href=&#34;#oauth2&#34;&gt;
	OAuth2
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Google Edu stellt dabei wie viele andere Systeme auch &amp;ldquo;&lt;a href=&#34;https://de.wikipedia.org/wiki/OAuth&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OAuth&lt;/a&gt;

&amp;rdquo; als Login-Mechanismus bereit.
OAuth ist ein Verfahren, mit dem ein IAM-Dienstleister (also etwa Google Edu) externen Diensten Identitäten beglaubigen und bereitstellen kann.
Dabei kann für jeden Dienst einzeln und unterscheidbar Zugriff gewährt werden, der Zugriff an Rechte und Rollen gebunden werden, und für den Benutzer sichtbar gemacht werden, welche Dienste wann warum worauf zugegriffen haben.&lt;/p&gt;
&lt;p&gt;Wenn die Schule also etwa mit Schulbuchverlagen und den Anbietern von Schulsoftware zusammenarbeitet, dann kann die Schule Anwendungen von solchen Anbietern einzelnen Schülern oder Klassen zuweisen.
Die Schule kann dabei auch festlegen, welche Daten vom Schüler (&amp;ldquo;keine, nur ein anonymes Identifikationstoken&amp;rdquo;, &amp;ldquo;die Loginkennung&amp;rdquo;, &amp;ldquo;der volle Name des Schülers&amp;rdquo;, &amp;ldquo;die Daten des Schülers in anderen Diensten&amp;rdquo;) mit dem Softwareanbieter geteilt werden.
Schüler können die ihnen zugewiesenen Anwendungen sehen, und auch welche Daten und Rechte damit verbunden sind.
Anbieter von Anwendungen können sich sicher sein, daß die Identitäten der Nutzer authentisch sind.&lt;/p&gt;
&lt;p&gt;Alle können im Falle einer Sicherheitsschwankung die Auswirkungen begrenzen:
Sollte es zu Einbrüchen bei externen Anbietern kommen, können Zugriffs-Tokens zurückgerufen werden und die Account-Sicherheit so vergleichsweise einfach wieder hergestellt werden.
Zugleich ist durch die Datenverwaltung von IAM und OAuth klar, welche Daten im Zugriff waren und welches Ausmaß der Schaden hat.&lt;/p&gt;
&lt;h1 id=&#34;plattform&#34;&gt;
    &lt;a href=&#34;#plattform&#34;&gt;
	Plattform
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Selbst ohne die Google-eigenen Anwendungen ist das Zusammenspiel von IAM, OAuth und Chromebook schon sehr viel wert.
Für die Schule und die Anbieter von Inhalten entsteht so eine offene Plattform, gegen die entwickelt werden kann:
Anbieter können sich auf der Basis von offenen Standards (HTML, CSS, Javascript, dokumentierte Browser-APIs) und verifizierten Identitäten mit einem Rechtesystem in einem Ökosystem gruppieren, in dem sich Dienste anbieten, regeln und abrechnen lassen.&lt;/p&gt;
&lt;p&gt;Die Plattform selbst besteht dabei aus gut verstandenen Komponenten: Linux, Chrome, offenen Standards und Schnittstellen und einem vielfach verifizierten und zertifizierten Dienstanbieter mit einem ausgezeichneten Sicherheitsbewußtsein.&lt;/p&gt;
&lt;p&gt;Dazu kommen optional noch die Werkzeuge aus dem Google-Werkzeugkasten selbst.
Aber dies sind auch nur Anwendungen, die wie externe Anwendungen dazu geschaltet werden können.&lt;/p&gt;
&lt;p&gt;Anders als andere Plattformen (&amp;ldquo;iPads&amp;rdquo;) oder selbst gekochte Lösungen (&amp;ldquo;Moodle und Jitsi plus einige Extras&amp;rdquo;) gibt es ein verifiziertes und zertifiziertes Betriebs- und Rechtekonzept, das auch von externen Dienstleistern gut verstanden und unterstützt wird.&lt;/p&gt;
&lt;p&gt;Das ist bemerkenswert, weil dies bisher nicht nur bei deutschen Schulen, sondern auch bei fast allen europäischen Cloud-Anbietern ein blinder Fleck ist:
Während es viele europäische Dienste gibt, die (meist auf der Basis von Openstack) virtuelle Maschinen oder Dienste anbieten, gibt es kaum einen europäischen Cloud- oder Schulanbieter, der IAM/OAuth und ein Verwaltungs-Framework darum herum anbietet.
Ganz zu schweigen von &amp;ldquo;Null Aufwand&amp;rdquo;-Clients, die eine über viele Jahre stabile und weiterentwickelte Hardware in Schülerhand darstellen, und bei der sich die Verwaltungsarbeit zentral gesteuert und kryptografisch abgesichert bis in den Client hinein erstreckt.&lt;/p&gt;
&lt;p&gt;Tatsächlich ist es so, daß die Diskussion in Deutschland sich meist in abstrakten Datenschutzbeschwörungen (&amp;ldquo;Google böse&amp;rdquo;) und Hardware-Streitereien (&amp;ldquo;iPads oder Windows-Laptop&amp;rdquo;) Gerede erschöpft.
Es wäre sinnvoller, stattdessen einmal Ende-zu-Ende Betriebskonzepte zu besprechen und bewerten.
Und dabei die Erkenntnisse und Entwicklungen der letzten zehn Jahre auf dem Gebiet der Auftragsdatenverarbeitung (&amp;ldquo;Cloud&amp;rdquo;) und des Rechnerbetriebs zu berücksichtigen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ChatGPT and Limits</title>
      <link>https://blog.koehntopp.info/2022/12/11/chatgpt-and-limits.html</link>
      <pubDate>Sun, 11 Dec 2022 06:07:08 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2022/12/11/chatgpt-and-limits.html</guid>
      <description>&lt;p&gt;Like everybody else, I have been playing with ChatGPT from &lt;a href=&#34;https://openai.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenAI&lt;/a&gt;

.
Specifically, I wanted to test how it could be used as a coding assistant, and what the limits are in terms of size and complexity.&lt;/p&gt;
&lt;h1 id=&#34;code-generation&#34;&gt;
    &lt;a href=&#34;#code-generation&#34;&gt;
	Code Generation
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;I have been using the
&lt;a href=&#34;https://blog.koehntopp.info/2021/01/10/labyrinths-in-python.html&#34;&gt;Labyrinths&lt;/a&gt;


example as a base. My goal was to have ChatGPT write the
&lt;a href=&#34;https://github.com/isotopp/labyrinths/blob/master/src/labyrinth.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Labyrinth&lt;/a&gt;


class for me.&lt;/p&gt;
&lt;p&gt;I did so interactively.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kris:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Write an empty Python class named Labyrinth&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Labyrinth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Kris:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Add code to this class to represent a grid as a list of lists of integers, and store the width and the height of the grid in two appropriately name variables.
Write a constructor that accepts the width and height as keyword variables defaulting to 10.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Labyrinth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Kris:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Show the code with type markup that could be used by mypy.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Labyrinth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Kris:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Add a method &lt;code&gt;__repr__&lt;/code&gt; to the class returns a representation of the grid for debugging.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Labyrinth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__repr__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cell&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Kris:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a type&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NewType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Pos&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Tuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;add a &lt;code&gt;__getitem__&lt;/code&gt; and &lt;code&gt;__setitem__&lt;/code&gt; method to the class.
The methods should allow us to use an instance of &lt;code&gt;Labyrinth&lt;/code&gt; indexed by a &lt;code&gt;Pos&lt;/code&gt;, and that should end up reading or writing the grid element addressed by the &lt;code&gt;Pos&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Tuple&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;types&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NewType&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NewType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Pos&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Tuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Labyrinth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__getitem__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__setitem__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__repr__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cell&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Kris:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Add a predicate &lt;code&gt;position_valid&lt;/code&gt; to the class that takes a &lt;code&gt;Pos&lt;/code&gt; as a parameter.
The predicate is &lt;code&gt;True&lt;/code&gt; if the &lt;code&gt;Pos&lt;/code&gt; is valid (each coordinate is positive, and smaller than height or width respectively).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Tuple&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;types&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NewType&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NewType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Pos&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Tuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Labyrinth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;position_valid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__getitem__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__setitem__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__repr__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cell&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Kris:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Make sure that all methods only accept valid &lt;code&gt;Pos&lt;/code&gt; values where appropriate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Tuple&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;types&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NewType&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NewType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Pos&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Tuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Labyrinth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;position_valid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__getitem__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;position_valid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;raise&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;IndexError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Invalid position&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__setitem__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;position_valid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;raise&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;IndexError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Invalid position&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__repr__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cell&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I was then trying to add cardinal directions as a type, and a predicate to make sure a given &lt;code&gt;Direction d&lt;/code&gt; is valid, but this is where I lost it.&lt;/p&gt;
&lt;p&gt;According to the documentation, ChatGPT has a working memory of about &amp;ldquo;4000 Tokens&amp;rdquo; (3000 Words).
It seems as if the code above is about the limit of what it can keep in &amp;ldquo;mind&amp;rdquo; at any given point in time.&lt;/p&gt;
&lt;p&gt;1000 Tokens cost around 2 ct with the Davinci model, so the above code is worth around 10 ct to 20 ct, or something, with all the iterations.&lt;/p&gt;
&lt;p&gt;ChatGPT definitively allows a person with domain knowledge and a basic understanding of how algorithms work to write code in a language they do not understand.
The amount of context that can be held active is limited.&lt;/p&gt;
&lt;h1 id=&#34;code-analysis&#34;&gt;
    &lt;a href=&#34;#code-analysis&#34;&gt;
	Code Analysis
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Conversely, if you paste the full source of the
&lt;a href=&#34;https://github.com/isotopp/labyrinths/blob/master/src/labyrinth.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;labyrinth.py&lt;/a&gt;


file into ChatGPT and ask it what it does, this is the analysis:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The code defines a &lt;code&gt;Labyrinth&lt;/code&gt; class that represents a grid-based maze.
The maze is stored as a &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;Lists&lt;/code&gt; of &lt;code&gt;int&lt;/code&gt;s.
Passages in the maze are represented by bit flags (i.e., binary numbers): N=1, E=2, S=4, and W=8.
When a particular bit is set, it indicates that there is a passage from the current cell into the direction indicated by that bit.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Labyrinth&lt;/code&gt; class provides several methods for working with the maze, such as &lt;code&gt;carve()&lt;/code&gt; for carving out passages in the maze, &lt;code&gt;position_valid()&lt;/code&gt; for checking if a given position is valid within the bounds of the maze, &lt;code&gt;direction_valid()&lt;/code&gt; for checking if a given direction is valid, and &lt;code&gt;random_directions()&lt;/code&gt; for generating a list of random directions.&lt;/p&gt;
&lt;p&gt;Additionally, the &lt;code&gt;Labyrinth&lt;/code&gt; class uses the &lt;code&gt;typing&lt;/code&gt; module to specify the types of its attributes and parameters, which can make the code easier to read and understand.
For example, the &lt;code&gt;width&lt;/code&gt; attribute is defined as having type &lt;code&gt;int&lt;/code&gt;, and the &lt;code&gt;carve()&lt;/code&gt; method has a parameter named show with type &lt;code&gt;Any&lt;/code&gt;, indicating that it can accept any type of value for that parameter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That is a fair analysis, and as good as it gets from glancing at the source of a single module.&lt;/p&gt;
&lt;p&gt;Now, I am adding
&lt;a href=&#34;https://github.com/isotopp/labyrinths/blob/master/src/backtracking.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;backtracking.py&lt;/a&gt;


to the mix, but sans comments, and ask it what happens.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kris:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you supply the following class as a &lt;code&gt;carver&lt;/code&gt; to the &lt;code&gt;Labyrinth&lt;/code&gt; class, what does this code do?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;src.labyrinth&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Labyrinth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Backtracking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;carve&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Labyrinth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;directions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lab&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random_directions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;directions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lab&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;step&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;ValueError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;red&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;green&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;lab&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;make_passage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;lab&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;carve&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;Backtracking&lt;/code&gt; class defines a &lt;code&gt;carve()&lt;/code&gt; method that uses a backtracking algorithm to generate a maze in a given &lt;code&gt;Labyrinth&lt;/code&gt; object.
The method takes a &lt;code&gt;lab&lt;/code&gt; parameter which is an instance of the &lt;code&gt;Labyrinth&lt;/code&gt; class, a &lt;code&gt;pos&lt;/code&gt; parameter which specifies the current position in the maze, and an optional &lt;code&gt;show&lt;/code&gt; parameter that can be used to display the maze as it is being generated.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And again, this is a correct analysis of the code, in the context of the larger &lt;code&gt;Labyrinth&lt;/code&gt; class above.&lt;/p&gt;
&lt;h1 id=&#34;continuing-the-code-interview&#34;&gt;
    &lt;a href=&#34;#continuing-the-code-interview&#34;&gt;
	Continuing the code interview
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Kris:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Does Python have a recursion depth limit?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Yes, Python has a default recursion depth limit.
This means that when a function calls itself recursively, the number of times it can do so is limited.
The default recursion depth limit in Python is typically around 1000 calls, but it can vary depending on the specific implementation and platform.
If a function exceeds the recursion depth limit, a &lt;code&gt;RecursionError&lt;/code&gt; will be raised.&lt;/p&gt;
&lt;p&gt;It is possible to change the recursion depth limit in Python by using the &lt;code&gt;sys.setrecursionlimit()&lt;/code&gt; function.
For example, the following code sets the recursion depth limit to 2000:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setrecursionlimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;ChatGPT has knowledge of the fact that Python has a recursion depth limit, the default value and how to change it.&lt;/p&gt;
&lt;p&gt;Let it apply this information to the example:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kris:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given this information, what is the longest path the &lt;code&gt;Backtracking&lt;/code&gt; class above can produce?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The length of the longest path that the &lt;code&gt;Backtracking&lt;/code&gt; class can produce is limited by the default recursion depth limit in Python.
As mentioned previously, the default recursion depth limit is typically around 1000 calls, but it can vary depending on the specific implementation and platform.&lt;/p&gt;
&lt;p&gt;In the case of the &lt;code&gt;Backtracking&lt;/code&gt; class, the &lt;code&gt;carve()&lt;/code&gt; method calls itself recursively to generate the maze.
Therefore, the longest path that the &lt;code&gt;Backtracking&lt;/code&gt; class can produce is limited to the default recursion depth limit in Python.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That is correct.
The system correctly identified the fact the method calls itself, and how and why it does this.
It then deduces that this is subject to the above limitation, and what the consequence is.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the &lt;code&gt;carve()&lt;/code&gt; method is called with a starting position that is more than 1000 steps away from the end of the maze, it will exceed the recursion depth limit and raise a &lt;code&gt;RecursionError&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That is arguably correct, and in a real coding interview would be an invitation to do some hairsplitting, but in general it is not wrong.&lt;/p&gt;
&lt;h1 id=&#34;summary&#34;&gt;
    &lt;a href=&#34;#summary&#34;&gt;
	Summary
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;ChatGPT works very well, if you use it as a way to augment the facilities of a human, that guides it with a purpose and additional domain knowledge.
It seems to be limited in constructive tasks.
I was not able to get beyond the code generation barrier above.&lt;/p&gt;
&lt;p&gt;The opposite direction, in which we have it analyze an existing piece of code and interrogate it about its properties works a lot better.&lt;/p&gt;
&lt;p&gt;In a real coding interview, on the analytics side this is good enough to pass at least at the lower levels.
On the constructive side, it is more complicated.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2FA für Mastodon</title>
      <link>https://blog.koehntopp.info/2022/12/10/2fa-fuer-mastodon.html</link>
      <pubDate>Sat, 10 Dec 2022 06:07:08 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2022/12/10/2fa-fuer-mastodon.html</guid>
      <description>&lt;p&gt;Multi-Factor Authentication (Identifikation mit mehreren Faktoren) oder 2FA (Two-Factor-Authentication) sind ein Weg, einen Account vor der Übernahme durch Dritte zu schützen.&lt;/p&gt;
&lt;p&gt;Statt sich mit Usernamen und Passwort anzumelden ist zusätzlich noch eine wechselnde Pseudozufallszahl notwendig.
Diese wird von einem Seed-Wert generiert, der durch eine Buchstabenfolge oder einen QR-Code repräsentiert wird.&lt;/p&gt;
&lt;h1 id=&#34;authenticator-anwendung-installieren&#34;&gt;
    &lt;a href=&#34;#authenticator-anwendung-installieren&#34;&gt;
	Authenticator Anwendung installieren
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Das Verfahren ist &lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc6238&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;standardisiert&lt;/a&gt;

 und wird von vielen Tools unterstützt.
Dazu gehören Google Authenticator, Bitwarden und viele andere Passwortmanager.&lt;/p&gt;
&lt;p&gt;Um mit MFA zu arbeiten, sollte man entweder einen Passwortmanager installiert haben, der auch MFA verwalten kann, oder sich eine 2FA Anwendung installieren.
Populäre Passwortmanager sind etwa Bitwarden, 1Password oder LastPass.
Populäre 2FA-Anwendungen sind Google Authenticator, der Authenticator von Microsoft, Twilio Authy oder Aegis.&lt;/p&gt;
&lt;p&gt;Auch auf der Kommandozeile kann man 2FA Codes generieren, aber das ist eher für
&lt;a href=&#34;https://blog.koehntopp.info/2017/07/27/zero-factor-authentication.html&#34;&gt;komische Spielereien&lt;/a&gt;


wichtig.
Auf jeden Fall implementiert auch &lt;code&gt;oath-toolkit&lt;/code&gt; die üblichen Verfahren zur Generierung dieser Codes.&lt;/p&gt;
&lt;h1 id=&#34;2fa-aktivieren-in-mastodon&#34;&gt;
    &lt;a href=&#34;#2fa-aktivieren-in-mastodon&#34;&gt;
	2FA aktivieren in Mastodon
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Um MFA zu aktivieren, klicke auf &amp;ldquo;Edit Profile&amp;rdquo; im Mastodon Webinterface, und wähle Account Settings -&amp;gt; Two Factor Auth.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/12/2fa-01.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Auf Edit Profile klicken, um in die Benutzerkonfiguration zu kommen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/12/2fa-02.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Im Menü in der Seitenleiste erst auf &amp;ldquo;Account Settings&amp;rdquo;, und dann auf &amp;ldquo;Two-factor Auth&amp;rdquo; klicken.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/12/2fa-03.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Es erscheint das 2FA Setup. Man kann gefahrlos durch den ganzen Prozess laufen, ohne die Konfiguration zu verändern.
Erst, wenn man den ersten Sechs-Zahlen-Code erfolgreich eingegeben hat, wird 2FA für dieses Login aktiviert.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Es kommt dieser Screen, eventuell nach nochmaliger Aufforderung, das Passwort einzugeben.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/12/2fa-04.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Der gezeigte QR-Code kann mit einer Authenticator-Anwendung gescannt werden.
Er enthält nichts anderes als die daneben angezeigte Seed-Folge.
Diese wiederum kann man auch direkt in Anwendungen wie Bitwarden kopieren.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Klickt man auf Set Up, bekommt man einen QR-Code zum Scannen in der Google Authenticator App, oder den Seed-String als Text (etwa für Bitwarden).&lt;/p&gt;
&lt;p&gt;Man sollte auf jeden Fall einen Screenshot vom QR-Code oder eine Kopie des Seed machen, und diese an einem sicheren Ort archivieren.
Ich habe einen USB-Stick für solche Dinge.
Damit kann man bei Verlust von Telefon oder Rechner dennoch an seine Accounts kommen, denn man kann den QR-Code so oft scannen wie man will, und auf so vielen Geräten scannen wie man will.&lt;/p&gt;
&lt;p&gt;In der Regel ist es bei Problemen einfacher, die archivierten QR-Codes neu zu scannen, als durch den Account Recovery Workflow eines mit 2FA geschützten Accounts zu laufen.
Das ist dann auch einheitlich, Account Recovery ist je nach Anbieter unterschiedlich.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/12/2fa-05.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Der Seed-Code wird in diesem Beispiel in Bitwarden eingetragen.
Bitwarden wird mit dem Code und der aktuellen Zeit in die Lage versetzt, den jeweils geltenden Code zu erzeugen und anzuzeigen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Verwendet man eine Authenticator-App (oder hat einfach ein aktuelles iPhone), kann man auch einfach den QR-Code mit der App (oder der normalen iPhone Scanfunktion) scannen und ein Eintrag wird erzeugt.
Entweder in der Authenticator-App, wenn man diese verwendet, oder im Passwortspeicher des iPhone, wenn man direkt mit dem Telefon scannt.&lt;/p&gt;
&lt;h1 id=&#34;den-generierten-code-ausprobieren&#34;&gt;
    &lt;a href=&#34;#den-generierten-code-ausprobieren&#34;&gt;
	Den generierten Code ausprobieren
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Nachdem man den QR-Code mit einem Authenticator gescannt hat, oder man den Seed-String in den Passwortmanager kopiert hat, wird einem dort eine Zahl angezeigt.
Sie hat 6 Stellen und wechselt alle 30 Sekunden.
Sie ist aber oft ein wenig länger gültig: Viele Implementierungen nehmen die vorhergehende und die nachfolgende Zahl auch noch an.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/12/2fa-06.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Nach dem Abspeichern des Seeds in Bitwarden wird eine laufend wechselnde Zahl angezeigt.
Diese kann man in das Testfeld &amp;ldquo;Two-factor code&amp;rdquo; übertragen und beweist so, daß das Setup korrekt ist.
Erst nach dem Klicken auf den großen &amp;ldquo;Enable&amp;rdquo;-Knopf wird 2FA aktiviert. Hier kann man also noch abbrechen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Zahl basiert auf einem Pseudo-Zufallszahlengenerator:
Basierend auf dem Startwert (dem Seed-Wert von da oben) und der aktuellen Zeit wird ein Code generiert.
Der Code ist immer derselbe, vorausgesetzt man kennt den Seed und hat eine genau gehende Uhr.
Sowohl der Mastodon-Server als auch die Authenticator-Anwendung kennen diese Daten und generieren den Code, und zwar bei übereinstimmenden Werten denselben Code.&lt;/p&gt;
&lt;p&gt;Zur Aktivierung muss man den aktuellen Zahlencode in das Feld unter dem QR-Code eintragen.
Dies beweist, daß man eine Authenticator-App hat und sie korrekt konfiguriert ist.
Erst dann wird 2FA wirklich aktiviert.&lt;/p&gt;
&lt;p&gt;Dies ist der &amp;ldquo;Point of no Return&amp;rdquo; (stimmt nicht: Man kann 2FA auch wieder deaktivieren).&lt;/p&gt;
&lt;h1 id=&#34;account-recovery-codes&#34;&gt;
    &lt;a href=&#34;#account-recovery-codes&#34;&gt;
	Account Recovery Codes
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Mastdon generiert dann noch einen Satz Account Recovery Codes.
Wenn man den QR-Code archiviert hat, braucht man die nie.
Stattdessen wäre es viel einfacher, den archivierten QR-Code neu einzuscannen.&lt;/p&gt;
&lt;p&gt;Es kann aber nicht schaden, diese zu kopieren und auch zu archivieren.
Etwa in Bitwarden und auf dem o.a. USB-Stick mit dem QR-Code.
Oder auf einem Papierfetzen, den man unter die Schreibtisch-Schublade klebt.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/12/2fa-07.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Diese Recovery-Codes werden niemals gebraucht, wenn man stattdessen den Seed-Text oder den QR-Code archiviert.
Mit dem kann man sich jederzeit ein neues Authenticator-Gerät aufsetzen, indem man den Code neu scannt.
Dennoch kann es nützlich sein, auch die Recovery-Codes zu archivieren.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;wieso-2fa-wenn-ich-doch-einzigartige-passworte-verwende&#34;&gt;
    &lt;a href=&#34;#wieso-2fa-wenn-ich-doch-einzigartige-passworte-verwende&#34;&gt;
	Wieso 2FA, wenn ich doch einzigartige Passworte verwende?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&amp;ldquo;Aber Kris, ich verwende doch sowieso auf jedem Account einzigartige Passworte.
Warum sollte ich mich mit 2FA rumnerven?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Hier eine Geschichte aus dem echten Leben:
&lt;a href=&#34;https://blog.koehntopp.info/2021/11/30/discord-nitro-spam-and-2fa.html&#34;&gt;Discord Nitro Spam and 2FA&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;2FA erlaubt es in vielen Fällen, einen Account zu retten, auch wenn er ganz oder in Teilen durch einen Unfall übernommen wird.
2FA, OAuth2 und &amp;ldquo;scoped Tokens&amp;rdquo; retten Euren Arsch auch dann, wenn ihr schon gehackt oder gecybert worden seid.
Sie machen solche Unfälle oft reversibel.&lt;/p&gt;
&lt;h1 id=&#34;cloud-oder-nicht-cloud&#34;&gt;
    &lt;a href=&#34;#cloud-oder-nicht-cloud&#34;&gt;
	Cloud oder nicht cloud?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Es gibt 2FA Speicher, die 2FA Codes in der Cloud sichern und an die eigene Telefonnummer binden.&lt;/p&gt;
&lt;p&gt;Google Authenticator und Aegis gehören nicht dazu, die Daten werden ausdrücklich lokal gespeichert und die Anwendung beansprucht keine Rechte, und funktioniert offline.
Code-Transfer erfolgt mit QR-Codes.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/12/2fa-08.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Twilio Authy fragt bei der Einrichtung nach einer Telefonnummer, sendet dieser dann eine Kennung zu und verbindet den Passwortspeicher mit der Telefonnummer.
Auch bei Wechsel zwischen Android und iPhone (oder hier MacOS) bleiben die 2FA Secrets erhalten.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Twilio Authenticator und Microsoft Authenticator sichern Codes in der Cloud.&lt;/p&gt;
&lt;p&gt;Bei Apples Systemspeicher für Passworte hängt es davon ab, ob man Passworte in der iCloud synchronisiert oder nicht.&lt;/p&gt;
&lt;h1 id=&#34;2fa-nicht-nur-für-mastodon&#34;&gt;
    &lt;a href=&#34;#2fa-nicht-nur-f%c3%bcr-mastodon&#34;&gt;
	2FA nicht nur für Mastodon
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Viele Passwortmanager haben die Option, Reports und Account-Audits zu generieren.
Oft wird eine Funktion angeboten, die alle möglichen, aber nicht genutzten 2FA-Möglichkeiten listet.
Diese Liste kann man durchgehen und systematisch für alle Accounts 2FA aktivieren.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/12/2fa-09.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Vaultwarden Webanwendung, Passwort-Reports.
Hier kann man auf &amp;ldquo;Inactive Two-step Login&amp;rdquo; klicken und eine Liste von Logins bekommen, die man hat und die 2FA haben könnten, aber bei denen in Vaultwarden kein 2FA hinterlegt ist.
Die meisten Passwortmanager haben inzwischen solche Reports.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;zusammenfassung&#34;&gt;
    &lt;a href=&#34;#zusammenfassung&#34;&gt;
	Zusammenfassung
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Mit Zwei-Faktor-Authentisierung kann man ein Login zusätzlich absichern.
Dazu wird beim Login neben dem Passwort auch noch ein wechselnder Code abgefragt, der entweder von einer Authenticator Anwendung oder einem Passwortmanager generiert wird.&lt;/p&gt;
&lt;p&gt;Das ist nützlich, weil so ein verloren gegangenes oder abgefischtes Passwort kein Weltuntergang mehr sind.
Im verlinkten Beispielartikel ist so etwa ein kompromittierter Discord-Account wieder gerettet worden.&lt;/p&gt;
&lt;p&gt;Es ist gute Praxis, 2FA auf allen Logins zu aktivieren, bei denen dies angeboten wird.
Dies sichert das Login zusätzlich ab, und verhindert Weltuntergang bei Passwortlecks und Phishing.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Software Supply Chain Issues</title>
      <link>https://blog.koehntopp.info/2022/10/18/software-supply-chain-issues.html</link>
      <pubDate>Tue, 18 Oct 2022 06:07:08 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2022/10/18/software-supply-chain-issues.html</guid>
      <description>&lt;p&gt;The GitHub Security Lab has a long hard look at &amp;ldquo;Apache Commons Text&amp;rdquo; in March this year.
That resulted in &lt;a href=&#34;https://securitylab.github.com/advisories/GHSL-2022-018_Apache_Commons_Text/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CVE-2022-42889&lt;/a&gt;

.
The exploit goes like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringSubstitutor&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interpolator&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringSubstitutor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createInterpolator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interpolator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;${script:javascript:java.lang.Runtime.getRuntime().exec(&amp;#39;touch /tmp/foo&amp;#39;)}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next to &lt;code&gt;${script:...}&lt;/code&gt; there are apparently also a &lt;code&gt;${url:...}&lt;/code&gt; and `${dns} as other unsuitable substitutions, and they nest.&lt;/p&gt;
&lt;p&gt;This was fixed in October 2022, after being reminded by GHSL in May and August.&lt;/p&gt;
&lt;p&gt;It was introduced in October 2018, in Version 1.5, and only discovered in March this year.&lt;/p&gt;
&lt;h1 id=&#34;whats-wrong-with-this&#34;&gt;
    &lt;a href=&#34;#whats-wrong-with-this&#34;&gt;
	What&amp;rsquo;s wrong with this?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The security impact of this new feature is obvious, when discussed.
Yet, it was integrated in October 2018, and that apparently did not raise any red flags in a security or merge review.
Also, none of the users of the library found anything weird.&lt;/p&gt;
&lt;p&gt;The package has &lt;a href=&#34;https://commons.apache.org/proper/commons-text/userguide.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt;

.
String substitution is described in the manpage for that class, &lt;a href=&#34;https://commons.apache.org/proper/commons-text/apidocs/org/apache/commons/text/StringSubstitutor.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;StringSubstituror&lt;/a&gt;

.
The &amp;ldquo;fix&amp;rdquo; for the CVS was to disable some substitutors.
This is described in &lt;a href=&#34;https://commons.apache.org/proper/commons-text/apidocs/org/apache/commons/text/lookup/StringLookupFactory.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;StringLookupFactory&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;It took almost 3.5 years for somebody to look at this and find that to be a security risk.&lt;/p&gt;
&lt;p&gt;After reporting the risk, it took Apache 2 reminders and way more than the standard 90 days to react and publish a mitigation.&lt;/p&gt;
&lt;p&gt;This means&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nonfunctional feature and security impact review for code merges.&lt;/li&gt;
&lt;li&gt;slow reaction to security issues (CVSS 3.x score: 9.8)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Clearly, the security process of the Apache organisation has huge room for improvement.&lt;/p&gt;
&lt;h1 id=&#34;is-that-a-good-mitigation&#34;&gt;
    &lt;a href=&#34;#is-that-a-good-mitigation&#34;&gt;
	Is that a good mitigation?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;You decide. Among the interpolations that are still enabled by default are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://commons.apache.org/proper/commons-text/apidocs/org/apache/commons/text/lookup/StringLookupFactory.html#fileStringLookup--&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fileStringLookup&lt;/a&gt;

, which replaces the &lt;code&gt;${file:UTF-8:/filename}&lt;/code&gt; with the content of a file.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://commons.apache.org/proper/commons-text/apidocs/org/apache/commons/text/lookup/StringLookupFactory.html#propertiesStringLookup--&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;propertiesStringLookup&lt;/a&gt;

, which replaces a value for a key in a properties file.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://commons.apache.org/proper/commons-text/apidocs/org/apache/commons/text/lookup/StringLookupFactory.html#environmentVariableStringLookup--&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;environmentVariableStringLookup&lt;/a&gt;

, which replaces &lt;code&gt;${env:USER}&lt;/code&gt; with the content of an environment variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All have the potential, if controlled by an attacker, to read and leak data, and maybe secrets.
That is not remote code execution, but probably still arbitrary file read and secrets leak.&lt;/p&gt;
&lt;p&gt;Such a string interpolation under control of a user is risky at best, but the default configuration is still far from secure, even if the fix improves things.&lt;/p&gt;
&lt;h1 id=&#34;not-the-first-time&#34;&gt;
    &lt;a href=&#34;#not-the-first-time&#34;&gt;
	Not the first time
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;This situation seems to be a repeat of the &lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2021-44228&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;log4j exploit&lt;/a&gt;

 from the year before.
In the log4j case, the initial find was presented on a conference and dismissed as unimportant.
It only escalated after the exploit was used in the wild against Minecraft servers and their associated Discords, and then it quickly escalated to the full scope we observed last year.&lt;/p&gt;
&lt;p&gt;Handling this was imperfect as well, with a series of fixes trying to mitigate the problem, and failing to do so in the first round.&lt;/p&gt;
&lt;p&gt;So both projects/packages&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;accepted contribution of text interpolation without understanding the implications that thing would have&lt;/li&gt;
&lt;li&gt;bungled the security response process, in various ways (slow response, or no response at all)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This points to non-functional processes inside the collection of Apache projects.
They are either not executed, or they are not effective, when executed.
The meta-question is if the collection of Apache projecs are aware of that, and how they are trying to address this?&lt;/p&gt;
&lt;h1 id=&#34;are-there-more-packages-that-have-this-issue&#34;&gt;
    &lt;a href=&#34;#are-there-more-packages-that-have-this-issue&#34;&gt;
	Are there more packages that have this issue?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;As a developer or organisation that makes software, you sometimes take on external dependencies.
You are still being asked to be able to answer questions about the whole product, so you need a way to form an opinion about the state of the dependencies and their dependencies.&lt;/p&gt;
&lt;p&gt;That starts with an inventory, and some useful scoping.
And the mostly liveness, quality and maturity of processes.&lt;/p&gt;
&lt;h2 id=&#34;one-evaluation-approach&#34;&gt;
    &lt;a href=&#34;#one-evaluation-approach&#34;&gt;
	One evaluation approach
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;One quick evaluation approach is documented &lt;a href=&#34;https://askcloudarchitech.com/posts/tutorials/open-source-security-dependency-review/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;

.
I&amp;rsquo;d reorder things a bit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Is it necessary&amp;rdquo;-Phase: Do we need that dependency?&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Is it popular&amp;rdquo;-Phase: Who else is using this?&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Is it maintained&amp;rdquo;-Phase: Do we see commits? Do we understand the code and the commits?&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Is Security considered&amp;rdquo;-Phase: Check their security response process and the execution&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Is it supported&amp;rdquo;-Phase: Go check out their presence on various media.
How do you reach them?
Are they approachable or more on the Hugo/Cyrus spectrum of interaction?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;another-evaluation-approach&#34;&gt;
    &lt;a href=&#34;#another-evaluation-approach&#34;&gt;
	Another evaluation approach
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Another approach is documented &lt;a href=&#34;https://opensource.com/life/14/1/evaluate-sustainability-open-source-project&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;It is similar, and asks you to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;check contributions, and contributors. Read a bit of code.&lt;/li&gt;
&lt;li&gt;Look at the release history. Are the regular releases? A schedule?&lt;/li&gt;
&lt;li&gt;The user community. Are they talking to people? How?&lt;/li&gt;
&lt;li&gt;Longevity.&lt;/li&gt;
&lt;li&gt;The general ecosystem.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;d add some kind of metric around process execution.
Check merge reviews, execution of security process and again, approachability and response times.&lt;/p&gt;
&lt;h2 id=&#34;another-commercial-approach&#34;&gt;
    &lt;a href=&#34;#another-commercial-approach&#34;&gt;
	Another, commercial approach
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Some vendors are starting to approach this, for example &lt;a href=&#34;https://socket.dev/npm/package/@webassemblyjs/ast/overview/1.11.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;All in all, this seems to be a largely unsolved problem.
Criteria are uneven across various attempts, projects and ecosystems.
Some languages or projects seem to have problems even with creating an inventory of dependencies.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Never check for an error condition you don&#39;t know how to handle</title>
      <link>https://blog.koehntopp.info/2022/01/10/never-check-for-an-error-condition.html</link>
      <pubDate>Mon, 10 Jan 2022 07:11:35 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2022/01/10/never-check-for-an-error-condition.html</guid>
      <description>&lt;p&gt;This is the english version of an &lt;a href=&#34;https://blog.koehntopp.info/2009/08/21/was-bedeutet-eigentlich-never-check-for-an-error-condition-you-don-t-know-how-to-handle.html&#34;&gt;older text in German&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Computer scientists are weird.
In their science there are a few rules that sound wrong when you hear them first, but make a lot of sense if you think about them.
Some of them are making sense even outside of computer science.&lt;/p&gt;
&lt;p&gt;One of those rules is&lt;/p&gt;
&lt;h1 id=&#34;never-check-for-an-error-condition-you-dont-know-how-to-handle&#34;&gt;
    &lt;a href=&#34;#never-check-for-an-error-condition-you-dont-know-how-to-handle&#34;&gt;
	Never check for an error condition you don&amp;rsquo;t know how to handle.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;When you encounter this the first time that sounds very questionable.
There are known error conditions in my program that I know they can happen, and I should not check for them?&lt;/p&gt;
&lt;p&gt;If you read that left to right, that&amp;rsquo;s exactly what it means.
Let&amp;rsquo;s have a look at an example and try to understand what goes on.
Here is a very simple case: I could try to allocate memory from the operating system and that can fails.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;someSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;what_now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That is a very typical situation.
For example, why does the library function &lt;code&gt;malloc()&lt;/code&gt; not check itself for &lt;code&gt;p == NULL&lt;/code&gt;  and handles this case?
Because it does not, I have to do that every time and must not forget that in a single case.&lt;/p&gt;
&lt;p&gt;Indeed, most programs have a function &lt;code&gt;safe_malloc()&lt;/code&gt;, which wraps &lt;code&gt;malloc()&lt;/code&gt; and more or less looks like the example above.
The point being that each program has their own implementation of &lt;code&gt; what_now()&lt;/code&gt;, because the desired behavior is specific to the application and cannot be provided by the library.&lt;/p&gt;
&lt;p&gt;One could argue that &lt;code&gt;malloc()&lt;/code&gt; should internally call a &lt;code&gt;what_now()&lt;/code&gt;, and each library user would have to provide an implementation for that.
But that would proscribe a certain mode of usage for &lt;code&gt;malloc()&lt;/code&gt;.
The solution that &lt;code&gt;malloc()&lt;/code&gt; does not do the check, but only signals the error, is the most flexible solution &amp;ndash; and hence suitable for a library function, because it leaves the choice to the user.
It provides mechanism, but not policy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Side thought:&lt;/strong&gt; That&amp;rsquo;s one of the main differences between a library and a framework.
Libraries provide mechanism, but do not enforce a policy.
They do not proscribe a default way of working with problems.
Frameworks are opinionated, and have been designed with a specific way of working in mind, and provide policies that are considered default solutions in the context of the framework.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Side side thought:&lt;/strong&gt; Kernel, libraries and frameworks are all infrastructure, and as all infrastructure they are being judged by how they fail.
In this case: What solutions exist to bypass the policy in a framework, if the policy does not fit.
&amp;ldquo;How can I have queries in &lt;a href=&#34;https://en.wikipedia.org/wiki/Ruby_on_Rails&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RoR&lt;/a&gt;

 that bypass &lt;a href=&#34;https://en.wikipedia.org/wiki/Active_record_pattern&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Active Record&lt;/a&gt;

&amp;rdquo; is one example.
How free of policy is this library?
Is it just a mechanism or is there an obvious or hidden intention, a policy?&lt;/p&gt;
&lt;p&gt;A library ideally supplies just a mechanism, but that makes it mandatory for the developer to think about a policy for error handling and how to implement it.
That&amp;rsquo;s a relatively obvious point, but one that in my experience is not taught sufficiently.
If it wasn&amp;rsquo;t, we&amp;rsquo;d have less bad code in many projects.
And I do not want to limit myself to the tons of toxic PHP-MYSQL that fire queries at a database without checking for errors at all.&lt;/p&gt;
&lt;p&gt;The point is rather that a missing policy for error handling requires that you provide one in the application (or at least some minimal standards in the application).
Some programming environments have a name for such an informal construct:
A convention, a contract between library developer and application developer that is informal and not enforced by the mechanisms of the language.
The convention is also often unspoken, or not made explicit enough in the documentation of the library.
And hence taught insufficiently, and then implemented insufficiently.&lt;/p&gt;
&lt;p&gt;But you can take the sentence&lt;/p&gt;
&lt;h1 id=&#34;never-check-for-an-error-condition-you-dont-know-how-to-handle-1&#34;&gt;
    &lt;a href=&#34;#never-check-for-an-error-condition-you-dont-know-how-to-handle-1&#34;&gt;
	Never check for an error condition you don&amp;rsquo;t know how to handle.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;and read it backwards.
What exactly does it mean to handle an error condition?
Specifically, if the error happens, what are our options and what is the desired failure mode?
What is supposed to happen?&lt;/p&gt;
&lt;p&gt;Going back to the &lt;code&gt;malloc()&lt;/code&gt; above:
When that happens, the operating system can&amp;rsquo;t or won&amp;rsquo;t give us more memory.
We don&amp;rsquo;t know why, so we have to assume the worst.
That is: memory is full, nobody gets any memory any more.
In fact, there could be another program that permanently allocates more memory.
So even if we gave memory back to the operating system, we wouldn&amp;rsquo;t get it back when trying to reserve it.&lt;/p&gt;
&lt;p&gt;So handling this error means that we already have all memory required to recover from the situation before the error happens.
That&amp;rsquo;s a really complicated situation, and too complicated for most application developers when we force them to think about it.
At the point in time when this happens they are usually busy with completing the non-failing, actually function path of the application before they are ready to turn to failure modes and their code paths.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Side thought:&lt;/strong&gt; This is another main reason for bad code:
We force developers to think about failing code paths at the wrong point in time.
They really want to write programs that work well.
But we shouldn&amp;rsquo;t bother them with failure handling right when they are busy with completing the money earning part of the code.&lt;/p&gt;
&lt;p&gt;If we bother devs at the wrong moment in time, we get error handling like this at best:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;someSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ENOMEM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// out of memory error
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Well, at least they checked for an error.
Maybe there are even some &lt;code&gt; atexit(3)&lt;/code&gt; handlers stacked that will try to clean up, but did you ever see any of those?&lt;/p&gt;
&lt;p&gt;If you see code like this, it is screaming at you &amp;ldquo;Yes, yes, I know, but I am really busy now with other things. Go away!&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Another common problem is that we need to check for the error at the lowest level, but need more context at the higher levels of our code to handle it properly.
Sometimes there is not even a contract on how errors are being bubbled up to the next layer without losing information.
The interiors of the MySQL codebase used to be a prime example of that.
You could find code that mapped error codes similar to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;errcode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;doSomeThing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;errcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;E_THIS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;E_THAT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is taking detailed internal error codes and flattens them into larger categories, losing detail.
Sometimes a higher level handler has more context, but no longer sufficient detail to decide what exactly went wrong at the lower layers.&lt;/p&gt;
&lt;p&gt;The rule&lt;/p&gt;
&lt;h1 id=&#34;never-check-for-an-error-condition-you-dont-know-how-to-handle-2&#34;&gt;
    &lt;a href=&#34;#never-check-for-an-error-condition-you-dont-know-how-to-handle-2&#34;&gt;
	Never check for an error condition you don&amp;rsquo;t know how to handle.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;means we need to discuss things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Diagnosis:&lt;/strong&gt; Capture the error. Formulate a test which at some point in the code checks that we have a problem and distinctively signals which error that is.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Policy:&lt;/strong&gt; Determine the desired behavior for handling the error, that is, have a policy that explains how to handle the error.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Context:&lt;/strong&gt; Decide where in the stack the error can be handled best, or if we need to escalate. When we escalate, make sure an escalation is expected at the higher layer and check for their policy. They need to have one. Also make sure the escalation does not lose detail.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;this-is-useful-outside-of-computer-science&#34;&gt;
    &lt;a href=&#34;#this-is-useful-outside-of-computer-science&#34;&gt;
	This is useful outside of computer science.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The original trigger to write this article in 2009 was a discussion about a 911-button (110-Taste) in a web browser.
&amp;ldquo;If you see something, say something&amp;rdquo;: If you find web pages that contain things that may be relevant for law enforcement, have a way to call for help.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s a very german and very 2009 idea, but suppose you want that: Coding that is easy, right? A button in a browser that raises an alarm somewhere should be very few lines of code in an extension.&lt;/p&gt;
&lt;p&gt;The real problem - and that is not a code problem - is the &lt;code&gt;what_now()&lt;/code&gt;.
What is supposed to happen with that alarm signal.
That&amp;rsquo;s a process question, that is &lt;strong&gt;WHO needs to talk WHEN with WHOM about WHAT?&lt;/strong&gt;
What information needs to be sent when the button is pressed and what reaction is then expected?&lt;/p&gt;
&lt;p&gt;Do we build a central emergency call center?
Do we transport location and identity information together with the call, if that is necessary?
If so, how?&lt;/p&gt;
&lt;p&gt;What other information is necessary to provide context?
The current URL?
The persistent state of the browser, with all bookmarks, the history and so on?
The volatile state of the browser, eg with all active spywat, but also all legit variables?
The whole state of the computer, processlist, memory and program information, installed software and so on?&lt;/p&gt;
&lt;p&gt;How is that call then handled and classified?&lt;/p&gt;
&lt;p&gt;What are standard reactions to verified and classfied emergency escalations?
Can the emergency call center take over the computer and extract further information and do a full forensic analysis?
Can they write and change the state of the machine to help?
Or can they just call back, and request a read-only screen sharing session to talk the user through the emergency?&lt;/p&gt;
&lt;p&gt;What taxonomy of emergencies do we build, and what are the required steps to verify a case?&lt;/p&gt;
&lt;p&gt;Do we plan for proactive intervention, when we register a spike in incidents of a certain type (ie a computer virus outbreak)?
Do we have a problem management and change managent on top of our incident management that would want to and be able to prevent a large scale situation in the field?
In the case of an outbreak, for example, by forcing patches on all machines?&lt;/p&gt;
&lt;p&gt;How do we build the technical and legal framework for this?
How do we build the organisation for this?
How to we enforce the technical changes required to be able to do this?
Do we make the installation of some software mandatory to be able to be on the Internet?
How do we protect this infrastructure against abuse?&lt;/p&gt;
&lt;p&gt;The check was easy &amp;ndash; an emergency call button in a browser.&lt;/p&gt;
&lt;p&gt;The work is in the handling, which can be &amp;ldquo;somewhat involved&amp;rdquo;.
But these are details that are gracefully elided in the discussion when politicians demand such a button.
That&amp;rsquo;s providing quite simplicistic discussions:
Why do we not have such a button in every browser already?&lt;/p&gt;
&lt;p&gt;Can&amp;rsquo;t be that hard, right?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Es funktioniert wie spezifiziert</title>
      <link>https://blog.koehntopp.info/2021/12/14/funktioniert-wie-spezifiziert.html</link>
      <pubDate>Tue, 14 Dec 2021 20:32:00 +0100</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2021/12/14/funktioniert-wie-spezifiziert.html</guid>
      <description>&lt;p&gt;Dieser Artikel basiert auf
&lt;a href=&#34;https://twitter.com/isotopp/status/1470668771962638339&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;einem Twitter-Thread&lt;/a&gt;


und ist in deutscher Sprache als
&lt;a href=&#34;https://www.heise.de/meinung/Kommentar-zu-log4j-Es-funktioniert-wie-spezifiziert-6294476.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Heise Kommentar&lt;/a&gt;


erschienen.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Über den Java-Slogan &amp;ldquo;Write Once, Run Everywhere&amp;rdquo; wurden schon viele Witze gemacht.
Den log4j-Exploit behandeln viele nun wie einen Bug – das ist er nicht.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Eine kritische Lücke in der Java-Bibliothek Log4j beherrscht gerade die Schlagzeilen.
Die IT-Welt ruft &amp;ldquo;Warnstufe Rot&amp;rdquo; aus – weil offenbar der log4j-Code JNDI-Variablenexpansion vornehmen kann.
Doch was ist JNDI?
Jindi al Dap ist der Name eines alten arabischen Philosophen und Mathematik-Pioniers, der für Sun/Oracle gearbeitet hat, um &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/jndi/overview/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ein System von Directory Lookups in Java&lt;/a&gt;

 zu entwickeln.
Dieses System lädt irgendwie Code aus dem Internet nach.
Aber selbst, wenn man länger auf das Systemdiagramm starrt, erkennt man nicht unbedingt sofort, an welcher Stelle sich der Java CLASSPATH so erweitert, dass er das gesamte Internet umfasst:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/spezifiziert1.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Systemdiagramm des JNDI Subsystems von Java, aus der &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/jndi/overview/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dokumentation&lt;/a&gt;

.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;nichts-ist-jemals-simpel&#34;&gt;
    &lt;a href=&#34;#nichts-ist-jemals-simpel&#34;&gt;
	Nichts ist jemals simpel.
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das ist so, weil in Java nichts jemals simpel ist.
Java Code ist unstrukturierter trockener Staub von Codefragmenten in Klassendateien, die inert in keiner Weise miteinander interagieren.
Erst mit den passenden Factories, Delegates, Generators und ClassLoaders werden sie instanziiert und zusammengesetzt.
Der entstehende Haufen an Querverweisen führt dann nur zufällig irgendwann einmal tatsächlich wirksamen Code aus. Man könnte jetzt auf die Idee kommen, eine IDE mit integrierter syntaktischer Codesuche zu verwenden, um diesen Quelltexthaufen in Form zu bringen und zu verstehen.
Aber das ist vergebens:
Auch mit der gesamten Codebasis und einem Index darauf kann man nicht vorhersagen, was eine gegebene Java Codebase tun wird, wenn man sie startet.&lt;/p&gt;
&lt;p&gt;Es braucht auch noch Konfigurationsdateien.
Diese sind ein weiterer Haufen &amp;ndash; Properties-Dateien &amp;ndash; in einem vorsintflutlichen Vorläufer von YAML geschrieben: XML.
Oder jedenfalls, das ist es, was wir denken sollen:
Mit den Properties und der Codebasis können wir endlich versuchen zu verstehen, was Java tut.
Und das wäre auch beinahe so, aber JNDI ist genau angetreten, dieses Problem zu beheben:
Directory Lookups!
Statt also die Anwendung und ihre Konfiguration zu paketieren, und dann die Pakete in Produktion zu installieren, können wir nun mit JNDI die Konfiguration vom Netz lesen.
Das heißt, die eigentlichen Konfigurationsdateien, die uns sagen, was die Anwendung tut sind&amp;hellip; nicht mehr da.
Fortschritt!&lt;/p&gt;
&lt;p&gt;Das stellt sicher, dass uns niemand mehr hacken kann, weil niemand den Code mehr versteht:
Wichtige, zum Verständnis der Codebasis notwendige Informationen sind versteckt in einem Verzeichnisdienst, und wir wissen nicht mal welcher.
Aber wir können das noch einen Schritt weiterspielen:
Der Code, der den Directory Lookup vornimmt, ist auch nicht da, nur ein Bootstrap:
&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/jndi/overview/event&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Event and Service Provider Packages&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/spezifiziert2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Laut &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/jndi/overview/event&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dokumentation&lt;/a&gt;

 können wir Objekte aus der Nameing API bekommen und dort hinein serialisieren. Wir bekommen also Printer-Objekte mit Printer-Methoden aus dieser API, wenn wir danach fragen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Dank JDNI SPI können wir also Java Classfiles von einem LDAP-Server ausliefern lassen, die angeblich ein Printer-Object generieren, wenn wir nach einem Printer fragen &amp;ndash; dann aber stattdessen Doom installieren.
Oder einen Kryptominer oder Verschlüsselungstrojaner.
So geht Enterprise Security!&lt;/p&gt;
&lt;h2 id=&#34;write-once-run-everywhere&#34;&gt;
    &lt;a href=&#34;#write-once-run-everywhere&#34;&gt;
	Write Once, Run Everywhere!
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Der Java-Slogan ist ja &amp;ldquo;Write Once, Run Everywhere&amp;rdquo;.
Wir haben da viele Witze drüber gemacht, weil Java so oft gecrashed ist &amp;ndash; die meisten Java-Anwendungen liefern inzwischen ja die gesamte Ausführungsumgebung einschließlich der JRE mit, damit überhaupt etwas funktioniert.
Jetzt funktioniert endlich mal alles, und die Leute sind wieder unglücklich.
Aber im Ernst: Viele behandeln den log4j-Exploit wie einen Bug, einen Programmierfehler, eine Verletzung einer Spezifikation.
Genau das ist jedoch nicht der Fall:&lt;/p&gt;
&lt;p&gt;Es funktioniert &amp;ndash; wortwörtlich &amp;ndash; endlich einmal alles wie spezifiziert und dokumentiert:
All die Modularität und dynamische Erweiterbarkeit von Java hat ganz wunderbar und genau wie geplant zusammengearbeitet und funktioniert.
Darauf haben wir dekadenlang hingearbeitet!&lt;/p&gt;
&lt;h2 id=&#34;notabug-wontfix&#34;&gt;
    &lt;a href=&#34;#notabug-wontfix&#34;&gt;
	&amp;ldquo;NOTABUG, WONTFIX&amp;rdquo;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Und das ist das eigentliche Problem hier.
Viele rufen jetzt nach &amp;ldquo;Mehr Kontrolle!&amp;rdquo;, &amp;ldquo;Mehr Review!&amp;rdquo;, &amp;ldquo;Mehr Funding!&amp;rdquo;, &amp;ldquo;Mehr Augen auf den Code!&amp;rdquo;.
Was wirklich helfen würde wäre weniger Code, weniger Indirektion und Boilerplate, und einfach mehr&amp;hellip; Einfachheit.&lt;/p&gt;
&lt;p&gt;Wieso brauche ich ein &lt;code&gt;LogAppenderFactorySingleton&lt;/code&gt;, das XML liest, um den Namen der Klasse zu bekommen, die es instanziieren muss, damit ich meine Logzeile da einwerfen kann, um sie asynchron an einen &lt;code&gt;LogStream&lt;/code&gt; anzuhängen?
Das ist nicht einfach.
Was ist einfach?
JSON nach stderr drucken.
Das ist einfach.
Aber Firmen stellen seit etwa einer Dekade Leute ein, die nicht wissen, was stdout und stderr sind und das ist irgendwie okay, weil inzwischen ja sowieso alles ein Webservices ist&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/spezifiziert4.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ein totales log4shell Nonmention von &lt;a href=&#34;https://twitter.com/apenwarr/status/1469183890749558784&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;apenwarr&lt;/a&gt;

.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Softwareentwicklung ist viel moderner geworden:
Wir haben Merge Requests mit Code Review, CI/CD-Pipelines, Infrastructure as Code und Immutable Infrastructure.
Das nützt nur nix, wenn meine Java Logging Library &lt;a href=&#34;https://twitter.com/TheASF/status/1400875147163279374&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;auf dem Mars Code von Directory-Servern auf der Erde nachlädt&lt;/a&gt;

 und so das &amp;ldquo;Remote&amp;rdquo; in RCE komplett neu definiert.
Die Analyse von Dependencies hat nur dann Sinn, wenn die Liste dieser Abhängigkeiten endlich, und genau so immutable wie die Infrastruktur ist.&lt;/p&gt;
&lt;p&gt;Java hatte einmal die notwendigen Kontrollknöpfe, mit denen wir erzwingen konnten, dass diese Liste von Abhängigkeiten endlich und unveränderlich ist.
Wenn man auf diese Art von Lebensstil steht, gibt es etwas, das sich SM nennt: &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/essential/environment/security.htmlOracle&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Oracle SM&lt;/a&gt;

.
SM bringt die notwendigen Verträge und die Disziplin, die eine Codebase braucht.
Aber die meisten Anwender stehen nicht auf SM, und lehnen die Idee ab.
Also wird die Funktionalität in Java 17 als deprecated (veraltet) gekennzeichnet und später entfernt werden (&lt;a href=&#34;https://openjdk.java.net/jeps/411&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JEP 411: Deprecate the Security Manager for Removal&lt;/a&gt;

).&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/spezifiziert3.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;h2 id=&#34;wie-ein-dreijähriger&#34;&gt;
    &lt;a href=&#34;#wie-ein-dreij%c3%a4hriger&#34;&gt;
	Wie ein Dreijähriger
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Auch JNDI hat SM abgelehnt und hat ein promiskuitives Interface, das Code irgendwoher lädt und ausführt.
Man muss sich das wie einen Dreijährigen vorstellen, der sich jede Klasse in den Mund steckt, um herauszufinden wie sie schmeckt und ob sie sich ausführen lässt.
Das ist am Ende genau die Spezifikation:
Hier ist ein Object, deserialisiere es.
In Java bedeutet das, dass der Code für die Klasse des Objektes irgendwo her kommen muss, deren Methoden dann ausgeführt werden.&lt;/p&gt;
&lt;p&gt;Natürlich würde niemand das für eine gute Idee halten, wenn man es so formuliert.
Aber andererseits hat es die Person, die das vor 8 Jahren implementiert hat, nicht gesehen, und auch die Hunderttausend, die log4j in ihre Codebasis importiert haben, sind nicht darüber gestolpert.
Was sagt uns das über den Dependency-Management-Prozess von Organisationen, die Software entwickeln?
Über das Verständnis der Codebase, der Abhängigkeiten, und der Prozesse, die Datenfluss und Releases planen?
Ja, genau.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Wir verwenden eine modulare Architektur und agile Methoden, um die Entwicklungsgeschwindigkeit zu steigern.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E = 1/2m*(v^2)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Mehr Entwicklungsgeschwindigkeit macht größere Krater.&lt;/p&gt;
&lt;h2 id=&#34;code-ist-nicht-dein-freund&#34;&gt;
    &lt;a href=&#34;#code-ist-nicht-dein-freund&#34;&gt;
	Code. Ist. Nicht. Dein. Freund.
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ganz besonders nicht dynamisch aus dem Internet nachgeladener Code.&lt;/p&gt;
&lt;p&gt;Code. Ist. Nicht. Dein. Freund.&lt;/p&gt;
&lt;p&gt;Ich weiß, es klingt komisch, wenn man Entwickler ist und den eigenen Lebensunterhalt damit bestreitet, dass man glaubt, man sei mit dem Code befreundet.&lt;/p&gt;
&lt;p&gt;Aber so ist es.
Weniger Code ist besserer Code.
Am besten so wenig Code, dass man ihn zur Gänze und mit allen seinen Interaktionen verstehen kann.
Und auch den Code, der notwendig ist, um den eigenen Code zu betreiben.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Discord Nitro Spam and 2FA</title>
      <link>https://blog.koehntopp.info/2021/11/30/discord-nitro-spam-and-2fa.html</link>
      <pubDate>Tue, 30 Nov 2021 08:29:00 +0100</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2021/11/30/discord-nitro-spam-and-2fa.html</guid>
      <description>&lt;p&gt;This morning the Discord account of my son started to send &amp;ldquo;free nitro&amp;rdquo; spam to his friends on the friend list, and to some Discords he was a member of.
He had 2FA (Google Authenticator) on the account.
That fact alone made this a recoverable failure.&lt;/p&gt;
&lt;p&gt;My son is playing minecraft, has a friend list of around 100 fellow players, and is member of around 40 Discords.
He also connected his Discord to Spotify, YouTube and other services, and he authorized around 12 application services, mostly Discord/Minecraft bot services.
It is pretty safe to say that his Discord account is very valuable to him, and plays a central part in his pandemic coping.&lt;/p&gt;
&lt;p&gt;The spam was sending messages to all his friends, and a few Discords, impersonating him.
It was not acting as a bot, or even one of his own bots.
That means the spammer had accessed his account and identity.&lt;/p&gt;
&lt;h2 id=&#34;recovery-was-easy-thanks-to-2fa&#34;&gt;
    &lt;a href=&#34;#recovery-was-easy-thanks-to-2fa&#34;&gt;
	Recovery was easy, thanks to 2FA
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Changing the account password is a 2FA protected operation, and invalidates all other login tokens.&lt;/p&gt;
&lt;p&gt;That means, only a person having access to his cellphone can 2FA and change the password - him (or, this time, me).
It also means his Desktop client, all spammers impersonating him and everyone else is logged out.
This stopped the Spam dead immediately.&lt;/p&gt;
&lt;h2 id=&#34;how-the-spam-works&#34;&gt;
    &lt;a href=&#34;#how-the-spam-works&#34;&gt;
	How the spam works
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The &amp;ldquo;free nitro&amp;rdquo; spam is a message promising Discord Nitro (Server Boost, a pay feature) for free.
It contains a link that leads you to a typosquatter domain displaying Discords original CI.
It presents you with a QR code to scan.&lt;/p&gt;
&lt;p&gt;It then directs you to open the Discord app on the phone, hit the settings, hit the personal icon on the right and use the function labelled &amp;ldquo;Scan QR code&amp;rdquo; to claim the prize.&lt;/p&gt;
&lt;p&gt;Nothing in the UI of the original Discord cellphone app explains to a casual observer what this function does:
&amp;ldquo;Using this function will log somebody in to your account&amp;rdquo;.
The copy is simply &amp;ldquo;Scan QR code&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/discord-scan-qr.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Discord Settings show the &amp;ldquo;Use the cellphone to auth the desktop app&amp;rdquo; function simply as &amp;ldquo;Scan QR Code&amp;rdquo;. Nothing explains what the function really does: It logs in somebody which may or may not be you. Never use this function.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Doing what is being asked will provide a bot with a login token to your account.
The bot will then begin to send spam in your name to your friends and all discords you are member of.&lt;/p&gt;
&lt;p&gt;It will also change your password, if it can.
It cannot do that when 2FA is active on your account.
2FA is literally saving your account here.&lt;/p&gt;
&lt;h2 id=&#34;training-your-kid&#34;&gt;
    &lt;a href=&#34;#training-your-kid&#34;&gt;
	Training your kid
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Here is what to do: Train your kid to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use 2FA properly, and always use this and no login shortcuts.&lt;/li&gt;
&lt;li&gt;archive the original 2FA QR codes used for setting up 2FA. Make a screenshot, and store the PNG of the setup QR code on a USB stick or another offline storage for recovery. This is much easier than the regular account recovery procedures 2FA setups offer, and unlike them, it is one way that works the same for all accounts. It also lets you have the 2FA code generator on the phone and a tablet, for example.&lt;/li&gt;
&lt;li&gt;Never re-use passwords. In the case of my son, he did not use his Discord password anywhere else, and he has a password list. Thus, he had to change only the Discord password and not fix any other accounts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, help your kid: Audit their online accounts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;make yourself a calendar entry to audit the accounts your kid has every 6 months:
&lt;ul&gt;
&lt;li&gt;Check the password store: Make sure passwords are not re-used.&lt;/li&gt;
&lt;li&gt;Check 2FA: Have it enabled everywhere possible where regular TOTP can be used. Avoid Steam Authenticator or other special 2FA apps that may be offered, they are just more to learn and confusing. They break important workflows that must always be done right.&lt;/li&gt;
&lt;li&gt;Check account connections, cross-authentication, enabled bots and their permissions and so on.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;actually perform the audit.
&lt;ul&gt;
&lt;li&gt;Have your kid sit in on this, and explain what you do and why. Discuss your thought with them, and the risk analysis you do. Explain online business models with them, too: How is this service or game making money, where is the value, do you think that is okay? What do you want? Offer opinions and evaluation, but try to let them make choices.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, hold yourself to the same standards.&lt;/p&gt;
&lt;p&gt;For the record, my personal Google Authenticator has 18 entries.
I did not specifically set out to maximize that, so just take this as a guidance, not a competition.&lt;/p&gt;
&lt;h2 id=&#34;2fa-works&#34;&gt;
    &lt;a href=&#34;#2fa-works&#34;&gt;
	2FA works!
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Again, note how 2FA worked exactly the way it is designed to work:&lt;/p&gt;
&lt;p&gt;It made a loss of control on the account a recoverable operation.
Instead of a permanent and total loss of the center of his online life, this was just an awkward 30 minutes and a bunch of apologies.&lt;/p&gt;
&lt;p&gt;Also note that while Discord is the better Slack, it does have UI/UX design problems around QR code quick authentication.
Never use this function.
Train your kid to not use this function.
Always login with username, password and 2FA.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arista Type 7 Passwords</title>
      <link>https://blog.koehntopp.info/2021/11/22/arista-type-7-passwords.html</link>
      <pubDate>Sun, 21 Nov 2021 17:29:00 +0100</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2021/11/22/arista-type-7-passwords.html</guid>
      <description>&lt;p&gt;A friend of mine wanted to provision BGP passwords for their Arista switch configuration.&lt;/p&gt;
&lt;p&gt;So a config stanza such as&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;router bgp 65001
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   router-id 10.1.1.1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   neighbor mydevices peer-group
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   neighbor mydevices password 7 8kjYaye5DsQh0epELyKNe0oZ3E3zp39X
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;requires generation of the Password (actually &amp;ldquo;supersecretpassword&amp;rdquo;) in an encrypted form.&lt;/p&gt;
&lt;p&gt;Arista switches can do this using CLI tools, apparently.
They seem to have an onboard Linux, which seems to provide limited tooling, but is good enough to run a 32-bit Python 3.7.
Arista provides modules to help with handling their configuration.
&lt;a href=&#34;https://medium.com/@what_if/encrypting-decrypting-arista-bgp-bmp-ospf-passwords-ff2072460942&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ryan Gelobter&lt;/a&gt;


documented these in an article on Medium.&lt;/p&gt;
&lt;p&gt;Unfortunately, these modules are not well portable.
They have been implemented in a CPython module for Python 3.7 on i386 (32bit) Linux.
They also have a lot of dependencies to other shared objects that are not easily available except in the switch environment.&lt;/p&gt;
&lt;p&gt;So, if you wanted to provision switch configurations,
you would need to run some code on the switch to generate the passwords the way Ryan Gelobter documents,
or do the same in a virtual machine with a virtual switch running in it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;switch1# bash python -c &amp;#39;import DesCrypt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;print DesCrypt.encrypt(&amp;#34;BMP1_passwd&amp;#34;, &amp;#34;supersecretpassword&amp;#34;)&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;JieKbldfLyl9IzUBJZRvKIcc1w5wWogI
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Looking at the &lt;code&gt;DesCrypt.py&lt;/code&gt; is not particularly helpful:
The code in it does little more than&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;_DesCrypt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;encryptedData&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_DesCrypt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cbcEncrypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and &lt;code&gt;_DesCrypt&lt;/code&gt; is actually &lt;code&gt;_Descrypt.cpython-37m-i386-linux-gnu.so&lt;/code&gt;.
Well, at least it is only 10 KB in size, so how hard can it be?&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s have a look:&lt;/p&gt;
&lt;h1 id=&#34;ghidra&#34;&gt;
    &lt;a href=&#34;#ghidra&#34;&gt;
	Ghidra
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;When we drop the module into Ghidra, we get to see a &lt;code&gt;PyInit__DesCrypt(void)&lt;/code&gt; symbol.
The code in that function just calls out to &lt;code&gt;PyModuleCreate2(&amp;amp;PyModuleDef, 0x3f5)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Looking at the &lt;code&gt;PyModuleDef&lt;/code&gt; requires &lt;a href=&#34;https://docs.python.org/3/c-api/module.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the documentation&lt;/a&gt;

 to properly understand what is going on.
We identify two functions, &lt;code&gt;cbcEncrypt&lt;/code&gt; and &lt;code&gt;cbcDecrypt&lt;/code&gt; by their &lt;a href=&#34;https://docs.python.org/3/c-api/structures.html#c.PyMethodDef&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;PyMethodDef&lt;/code&gt;&lt;/a&gt;

 entries.
Two labels for entry points in a stripped binary identified.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/arista-pymethoddef.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Python Method Definition Table for the _DesCrypt Module defines two functions, named &lt;code&gt;cbcEncrypt&lt;/code&gt; and &lt;code&gt;cbcDecrypt&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Looking at the &lt;code&gt;cbcEncrypt&lt;/code&gt; function shows us that it has a dependency on &lt;code&gt;cbc_crypt()&lt;/code&gt;,
and that seems to be a function from &lt;code&gt;libc&lt;/code&gt;, according to &lt;a href=&#34;https://linux.die.net/man/3/cbc_crypt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the manpage&lt;/a&gt;

.
So it is ancient DES, in CBC mode that is being used.
We should be able to do this in pure Python without many additional dependencies then.&lt;/p&gt;
&lt;p&gt;Using Ghidra more, we can decode &lt;code&gt;cbcEncrypt()&lt;/code&gt; and the &lt;code&gt;getHashedKey()&lt;/code&gt; function it calls.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;getHashedKey&lt;/code&gt; generates the key the usual way, by xor-ing the incoming string with itself in an 8 bytes long ring buffer, but the starting value is not all zeroes, but some magic value (&lt;code&gt;238ad5f51ec9a8d5&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;Also, &lt;code&gt;cbcEncrypt&lt;/code&gt; pads the data to an even 8 byte boundary as required by DES.
How much was padded needs to be embedded in the ciphertext.
There is a selection of standard methods for this, as offered for example by
&lt;a href=&#34;https://pycryptodome.readthedocs.io/en/latest/src/util/util.html#Crypto.Util.Padding.pad&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Crypto.Util.Padding.pad()&lt;/a&gt;


in pycryptodome (&amp;ldquo;pkcs7&amp;rdquo;, &amp;ldquo;iso7816&amp;rdquo; and &amp;ldquo;x923&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cbcEncrypt&lt;/code&gt; uses none of these standard methods, and implements its own method:
the padding is encoded in the high nibble of a fixed magic int.&lt;/p&gt;
&lt;p&gt;That magic int is always prepended, even if no padding was necessary:
We get &lt;code&gt;?ebb884c&lt;/code&gt;, with &lt;code&gt;?&lt;/code&gt; indicating the number of padbytes (&lt;code&gt;0&lt;/code&gt; to &lt;code&gt;7&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/arista-gethashedkey.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ghidra Output of the getHashedKey() function, with a bit of annotation and typing added to get a better view.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;With this information, we should be able to recreate the function in our own C-code and check if it can recreate the examples Ryan Gelobter provided.&lt;/p&gt;
&lt;p&gt;Of course, it does not.&lt;/p&gt;
&lt;h1 id=&#34;debugging-the-original-code&#34;&gt;
    &lt;a href=&#34;#debugging-the-original-code&#34;&gt;
	Debugging the original code
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;We need to debug, and in order to be able to do that we need to be able to load and isolate &lt;code&gt;getHashedKey()&lt;/code&gt; first.
The original version, to check what the actual hashed key should look like, and compare the result to our own.&lt;/p&gt;
&lt;p&gt;That should be easy:
An example
&lt;a href=&#34;https://blog.koehntopp.info/2005/10/08/dynamisch-geladener-code.html&#34;&gt;from 2005&lt;/a&gt;


(german language article) shows&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to turn a function into a &lt;code&gt;libsomething.a&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;then into &lt;code&gt;libsomething.so&lt;/code&gt;, and&lt;/li&gt;
&lt;li&gt;then how to &lt;code&gt;dlopen()&lt;/code&gt; and &lt;code&gt;dlsym()&lt;/code&gt; that binary to call a single function in it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That final piece of code will serve us well:
We want to load the _DesCrypt module and call &lt;code&gt;getHashedKey()&lt;/code&gt; in an isolated context to see what a correct return value looks like.&lt;/p&gt;
&lt;h1 id=&#34;dependencies&#34;&gt;
    &lt;a href=&#34;#dependencies&#34;&gt;
	Dependencies
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Turns out, loading &lt;code&gt;_DesCrypt...so&lt;/code&gt; is not so easy, because of a dependency on &lt;code&gt;libtac.so.0&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ldd _DesCrypt.cpython-37m-i386-linux-gnu.so
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        linux-gate.so.1 (0xf7f7c000)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        libtac.so.0 =&amp;gt; not found
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        libpython3.7m.so.1.0 =&amp;gt; not found
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        libstdc++.so.6 =&amp;gt; /lib32/libstdc++.so.6 (0xf7d81000)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        libm.so.6 =&amp;gt; /lib32/libm.so.6 (0xf7c7d000)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        libgcc_s.so.1 =&amp;gt; /lib32/libgcc_s.so.1 (0xf7c5e000)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        libc.so.6 =&amp;gt; /lib32/libc.so.6 (0xf7a73000)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        /lib/ld-linux.so.2 (0xf7f7e000)```
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So we are missing two libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;libpython3.7m.so.1.0&lt;/code&gt; and&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libtac.so.0&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Python bit is fixed by building a Python-3.7 in 32-bit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; apt install gcc-multilib
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; wget https://www.python.org/ftp/python/3.7.5/Python-3.7.5.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; tar xzf Python-3.7.5.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Python-3.7.5/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./configure --build&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i686-pc-linux-gnu &lt;span class=&#34;nv&#34;&gt;CFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-m32 &lt;span class=&#34;nv&#34;&gt;CXXFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-m32 &lt;span class=&#34;nv&#34;&gt;LDFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-m32 --enable-shared
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; make -j6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A minor roadbump: We need to build for 32-bit, but on a 64-bit machine.
The compile-flag &lt;code&gt;-m32&lt;/code&gt; does that, but it will fail due to some missing includes until we install &lt;code&gt;gcc-multilib&lt;/code&gt; as shown above.
We can then download the old version of Python, and build it with the required flags for 32-bit support.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;libtac.so.0&lt;/code&gt; we could copy off the switch.
If we try, things escalate quickly .
That is, because that &lt;code&gt;.so&lt;/code&gt; in turn loads even more libraries, most of which we don&amp;rsquo;t have access to.
And if we had them, they might load even more dependencies.&lt;/p&gt;
&lt;p&gt;Looking into Ghidra again, we know that the code we are interested in does not really depend on &lt;code&gt;libtac,so.0&lt;/code&gt;.
&lt;code&gt;cbcEncrypt()&lt;/code&gt; itself does, but only if something goes wrong and an exception is being raised,
but at this stage of our investigation we only want &lt;code&gt;getHashedKey()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Following the guide from 16 years ago, we can quickly write some code to &lt;code&gt;dlopen()&lt;/code&gt; the library:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;func_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;mydevices_passwd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;keylen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;supersecretpassword&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;func_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;main start&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;dlopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LIBNAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RTLD_LAZY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;dlopen(%s, RTLD_LAZY) failed: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;LIBNAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nf&#34;&gt;dlerror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// find func
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;dlerror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;dlsym&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;_Z12getHashedKeyPKciPc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;dlerror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;dlsym(%p, &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;getHashedKey&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; failed: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;gethashedKey %p&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keylen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keylen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;dlclose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;killing-dependencies&#34;&gt;
    &lt;a href=&#34;#killing-dependencies&#34;&gt;
	Killing Dependencies
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;That way we can inspect the output of the function (it overwrites the first 8 bytes of &lt;code&gt;data&lt;/code&gt;) and get a reference key value to debug against.
Or could, if that would work.
It does not, because the &lt;code&gt;.so&lt;/code&gt; we open still has listed &lt;code&gt;libtac.so.0&lt;/code&gt; as &lt;code&gt;NEEDED&lt;/code&gt; and we need to fix it.&lt;/p&gt;
&lt;p&gt;There are many ways to edit ELF binaries, but most are badly maintained.
An easy way is a web service such as &lt;a href=&#34;https://elfy.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;elfy.io&lt;/a&gt;

.
We upload the library, click &lt;code&gt;Load information&lt;/code&gt; -&amp;gt; &lt;code&gt;Loader directives&lt;/code&gt; and edit the first dependency (&lt;code&gt;libtac.so.0&lt;/code&gt;) (offset 0x270) to point to the second dependency (&lt;code&gt;libpython3.7m.so.1.0&lt;/code&gt; (offset 0x283) instead.
Downloading the code again, we can rename it to &lt;code&gt;libtest.so&lt;/code&gt; and load it with our test program from above, getting a reference key value.
So &lt;code&gt;mydevices_passwd&lt;/code&gt; in a non-broken implementation yields the raw key value of &lt;code&gt;4A 0E 5D 1A 70 4F 1F 23&lt;/code&gt; for DES.&lt;/p&gt;
&lt;p&gt;Having that, debugging can continue.
It turns out: math is hard and Intel is a little-endian architecture:
The seed byte sequence &lt;code&gt;D5 A8 ... 8A 23&lt;/code&gt; is of course the long &lt;code&gt;238A…A8D5&lt;/code&gt;.
I am definitively not doing these things often enough anymore to not make this kind of mistake.&lt;/p&gt;
&lt;h1 id=&#34;progress&#34;&gt;
    &lt;a href=&#34;#progress&#34;&gt;
	Progress!
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Having a working &lt;code&gt;getHashedKey()&lt;/code&gt; we can now look at &lt;code&gt;cbcEncrypt()&lt;/code&gt; and reverse that.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/arista-cbcencrypt.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The heart of &lt;code&gt;cbcEncrypt()&lt;/code&gt; fetches two Python &lt;code&gt;bytearray&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; and works with them. The &lt;code&gt;key&lt;/code&gt; is processed with &lt;code&gt;getHashedKey()&lt;/code&gt;, then &lt;code&gt;cbc_crypt()&lt;/code&gt; is set up and called. The result returned to Python using &lt;code&gt;Py_BuildValue&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The moment we try to build this in C, it proves frustrating again:
&lt;code&gt;cbc_crypt()&lt;/code&gt; is no longer part of &lt;code&gt;libc&lt;/code&gt;.
It is outdated, legacy, but unfortunately still in use.
Not only by Arista, but also other companies and protocols.
Among them some ancient RPC protocols.
It has been removed from &lt;code&gt;libc&lt;/code&gt; and moved to &lt;code&gt;libtirpc3&lt;/code&gt;, it seems.
We need to install &lt;code&gt;libtirpc3&lt;/code&gt;, &lt;code&gt;libtirpc-dev&lt;/code&gt; and &lt;code&gt;libtirpc-common&lt;/code&gt; to be able to build code that calls &lt;code&gt;cbc_crypt()&lt;/code&gt;.
Even then we seem to be limited to static linking, because for some reason the shared objects do no longer export the symbol.&lt;/p&gt;
&lt;p&gt;Some more short short hiccups:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The padding value is a nibble, not a byte, and the long it is part of has to be little endian naturally.&lt;/li&gt;
&lt;li&gt;The padding needs itself to take the 4 bytes added by the padding itself into account.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the end we get code that reproduces the expected result.&lt;/p&gt;
&lt;h1 id=&#34;in-python&#34;&gt;
    &lt;a href=&#34;#in-python&#34;&gt;
	In Python
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;If, and that is important, &lt;code&gt;des_parity()&lt;/code&gt; is being called.
In Python that function is not available, and should not be necessary:
The legacy DES function in Python&amp;rsquo;s module supposedly ignores DES parity bits automatically.&lt;/p&gt;
&lt;p&gt;But the Python code produces a different result.
So what goes on here, and how do we get &lt;code&gt;des_parity()&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;Turns out, &lt;code&gt;des_parity()&lt;/code&gt; is really weird code:
Look at it &lt;a href=&#34;https://github.com/alisw/libtirpc/blob/master/src/des_soft.c#L33-L50&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;

.
It is supposed to make the 8 bytes of the DES code uneven parity by manipulating the low-value bits in the key.
But the actual code also effectively masks out the high order bit, so we do not get 56 bit of keyspace, but only 48 bit.
Yay, export crypto?&lt;/p&gt;
&lt;p&gt;Anyway, this is the code Arista runs for their key obfuscation, so we need to duplicate it to produce correct data.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/isotopp/arista_type_7/blob/main/pypoc.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Here&lt;/a&gt;

 is a PoC in Python.&lt;/p&gt;
&lt;p&gt;With the poc provided, it should be possible to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;arista_descrypt&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cbc_encrypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cbc_decrypt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;encrypted&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cbc_encrypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mydevices_passwd&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;supersecretpassword&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encrypted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and that should be sufficient to build an Ansible module for Arista config provisioning.
The code uses &lt;code&gt;cryptography&lt;/code&gt; or &lt;code&gt;pycryptodome&lt;/code&gt; automatically, one of the two is installed.
It is not dependent on the legacy &lt;code&gt;cbc_crypt()&lt;/code&gt; function that formerly was in &lt;code&gt;libc&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id=&#34;generating-passphrases&#34;&gt;
    &lt;a href=&#34;#generating-passphrases&#34;&gt;
	Generating passphrases
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Encrypting and decrypting BGP passwords requires a passphrase. In EOS,
this passphrase is not static, but depends on the neighbor where the
BGP password is configured.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;router bgp 65001
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   router-id 10.1.1.1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   neighbor mydevices peer-group
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   neighbor mydevices password 7 8kjYaye5DsQh0epELyKNe0oZ3E3zp39X
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The passphrase is generated by taking the string after &lt;code&gt;neighbor&lt;/code&gt; (in this
example &lt;code&gt;mydevices&lt;/code&gt;), and appending the string &lt;code&gt;_passwd&lt;/code&gt; to it. The string
can be the name of a peer group, an IPv4 address or an IPv6 address, and
has to be used as shown in the device configuration output. This is particularly
important for IPv6 addresses which have multiple forms of representation.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A01:2021 - Broken Access Control</title>
      <link>https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control.html</link>
      <pubDate>Tue, 16 Nov 2021 11:28:27 +0100</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control.html</guid>
      <description>&lt;p&gt;Dieser Artikel wurde von Lenz Grimmer auch &lt;a href=&#34;https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control-en.html&#34;&gt;ins Englische&lt;/a&gt;

 übersetzt.&lt;/p&gt;
&lt;p&gt;In einem
&lt;a href=&#34;https://twitter.com/ChristianBasl/status/1459851276817158151&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Twitter-Thread von Christian Basl&lt;/a&gt;


ging es um die von
&lt;a href=&#34;https://zerforschung.org/posts/learnu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;zerforschte App &amp;ldquo;Learnu&amp;rdquo;&lt;/a&gt;

.
Basl schreibt:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Die Betreiber von Learnu sagen, sie hätten keine Fachkenntnisse in IT-Sicherheit und hätten sich auf externe Berater verlassen.
So kam Learnu unbekannterweise unsicher auf den Markt.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In der sich entwickelnden Diskussion vertrat &lt;a href=&#34;https://twitter.com/ardewes/status/1460240730698493957&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Andreas Dewes&lt;/a&gt;

 den Standpunkt&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Die meisten Start-ups die ich kenne gehen durch eine Phase, in der IT-Sicherheit und Compliance eher im Hintergrund stehen.
Wenn sie größer werden fangen sie an sich darüber Gedanken zu machen u.a. weil Kunden oder Partner Zertifizierungen verlangen, z.B. SOC 2 oder ISO-27001.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das ist angesichts von &lt;a href=&#34;https://owasp.org/Top10/A01_2021-Broken_Access_Control/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP A01:2021 - Broken Access Control&lt;/a&gt;

 eine lustige Aussage.
&lt;a href=&#34;https://de.wikipedia.org/wiki/Open_Web_Application_Security_Project&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP&lt;/a&gt;

 ist eine NGO, die die Sicherheit von Anwendungen und Diensten im Internet verbessern will.
OWASP gibt dazu eine jedes Jahr aktualisierte Top-10 Liste von Sicherheitsproblemen bei Anwendungen heraus.&lt;/p&gt;
&lt;p&gt;Für 2021 hat es im Vergleich zu 2017 die folgenden Änderungen gegeben:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/owasp-mapping.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Broken Access Control war 2017 auf Platz 5 und ist jetzt Problem #1. 94 % der getesteten Anwendungen hatten irgendeine Form von defekter Zugangskontrolle. Der ehemalige #1 Dauerbrenner Injection ist nur noch auf Platz 3.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wir sehen ein klassisches Beispiel dafür in einer anderen Schul-Anwendung, die das Team von Zerforschung getestet hat:
&lt;a href=&#34;https://zerforschung.org/posts/scoolio/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoolio&lt;/a&gt;

 wurde aufgemacht, indem die Zerforschis&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ein Endpunkt der Schnittstelle (Application Programming Interface, API) ist uns dabei sofort ins Auge gefallen: &lt;code&gt;/api/v3/Profile/{ProfileID}&lt;/code&gt;.
…
Wenn wir spannnende API-Endpunkte finden, die über eine Versionskomponente verfügen (hier &lt;code&gt;/v3/&lt;/code&gt;), versuchen wir gerne mal, diese zu verändern.
Also wurde in unserem Fall aus &lt;code&gt;/api/v3/Profile/{ProfileID}&lt;/code&gt; zu &lt;code&gt;/api/v2/Profile/{ProfileID}&lt;/code&gt;.
Und tada: Noch viel mehr Daten!
Aber unsere eigenen Daten sind langweilig – die kennen wir ja schon.
Also haben wir auch probiert, eine fremde Profil-ID einzugeben.
Und zu unserer geringen Verwunderung, aber großen Genervtheit, konnten wir natürlich auf diese detaillierten Daten der fremden ID zugreifen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das ist ein klassisches &amp;ldquo;A01:2021 - Broken Access Control&amp;rdquo; Beispiel.
Die Anwendung kennt die Identität des Benutzers, denn sie ist in der App eingetragen.
Sie nutzt diese Information nicht, um die Verbindung zum Server zu authentisieren und autorisieren.
Und entsprechend kann die API genutzt werden, um auf beliebige User-Records zuzugreifen, statt nur auf den eigenen.&lt;/p&gt;
&lt;h1 id=&#34;identität-authentisierung-autorisierung-auditing-und-accounting&#34;&gt;
    &lt;a href=&#34;#identit%c3%a4t-authentisierung-autorisierung-auditing-und-accounting&#34;&gt;
	Identität, Authentisierung, Autorisierung, Auditing und Accounting
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Ein paar Begriffe:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Identität:&lt;/strong&gt; Ich bin ich.
Aber ich kann nicht auf das Web oder eine API zugreifen.
Eine Anwendung muss das an meiner statt tun.
Diese Anwendung verwendet dazu eine eindeutige Benutzerkennung, die &amp;ldquo;mich&amp;rdquo; im Kontext der Anwendung repräsentiert.
Eine Identität mit einem eindeutigem Identifier (einem &amp;ldquo;Principal&amp;rdquo;) der mich repräsentiert ist aber zunächst einmal eine Behauptung.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authentisierung:&lt;/strong&gt; Ich kann das auch beweisen.
Wenn ich die behauptete Identität beweisen kann, dann bin ich authentisch ich.
Ich bestätige meine Identität meist mit einem Passwort und oft auch mit einem 2. Faktor (etwa einer vom einem Google Authenticator abgetippten wechselnden Geheimnummer).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Die behauptete und bestätigte Identität muss für einige Zwecke auch noch &lt;strong&gt;verankert&lt;/strong&gt; werden, etwa wenn diese Identität an andere Rechte oder Verhältnisse in der realen Welt gebunden werden soll.
Wenn ich zum Beispiel in einer Schul-App eine Schulzugehörigkeit und Klassenzugehörigkeit haben soll, dann ist es unter Umständen gut, wenn ich mir nicht einfach einen Account machen kann.
Stattdessen sollte eine Lehrperson sich das ansehen, mich fragen, ob ich das war und mich dann der Schule und der Klasse zuordnen.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Einer behaupteten, bestätigten und in der realen Welt verankerten Identität werden dann Zugriffsrechte zugeordnet.
Das ist eine &lt;strong&gt;Autorisierung&lt;/strong&gt;, sie bestimmt, was diese Identität im Kontext der Anwendung sehen, schreiben, verändern und löschen darf.
Dazu werden wir unten noch ein wenig mehr reden.&lt;/li&gt;
&lt;li&gt;Was ich dann in der Anwendung tu muss unter Umständen beweiskräftig mitgeschnitten werden.
Etwa dann, wenn die Daten, auf die ich zugreife, besonders schützenswert sind, oder ihre Änderungshistorie dokumentiert werden muss.
Das kann zum Beispiel im Schulkontext meine Ansammlung von Leistungsnachweisen sein.
Ein Logbuch, bei dem Zugriffe zwingend und nicht abschaltbar mit Personenidentitäten verknüpft werden nennt man ein &lt;strong&gt;Audit-Log&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Wenn ich Dienstleistungen in Anspruch nehme, die Geld kosten, dann muss eine besondere Form von Audit-Log geführt werden.
Dieses Audit-Log ist die Grundlage der Rechnungslegung und zeigt, welche Person wann welche kostenpflichtige Dienstleistung in Anspruch genommen hat.
Dieses Logbuch ist Bestandteil des &lt;strong&gt;Accounting&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Man kann zu jedem dieser Themen viel schreiben, aber uns soll hier in erster Linie &lt;em&gt;Autorisierung&lt;/em&gt; beschäftigen, eben weil es Thema #1 bei der aktuellen OWASP Liste ist.
Und weil es nicht nur bei den Zerforschis im
&lt;a href=&#34;https://zerforschung.org/posts/scoolio/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoolio&lt;/a&gt;


Artikel auftaucht, sondern noch einmal im
&lt;a href=&#34;https://zerforschung.org/posts/meinschnelltest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mein Schnelltest&lt;/a&gt;


Artikel:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Eine der ersten Anfragen, die uns auffällt, geht an &lt;code&gt;https://corona-api.de/persons/owner/{USER_ID}&lt;/code&gt;, wobei &lt;code&gt;USER_ID&lt;/code&gt; natürlich die Nummer unseres Accounts ist – z.B. &lt;code&gt;612341213acab23425251e21&lt;/code&gt;.
… [Wir verkürzen die URL]…
Einen Versuch wagen wir noch und entfernen das / am Ende der URL. Und tada:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET https://corona-api.de/persons
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Uns fällt eine Liste mit den Personen, die auf der Plattform registriert sind, entgegen.
Insgesamt fast 400.000 mit allen Daten, die bei einem Corona-Test eben so erfasst werden.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Zerforschung demonstriert dann auch noch, daß sie in beiden Fällen lustig ihre Identität oder ihre Verankerung (die Schulzugehörigkeit) ändern können (und vermutlich ohne daß das in einem Audit-Log landet), und daß sie nach Belieben Daten schreiben können, indem sie dem 177-jahre alten Robert Koch ein Corona-Testergebnis ausstellen.&lt;/p&gt;
&lt;h1 id=&#34;autorisierung&#34;&gt;
    &lt;a href=&#34;#autorisierung&#34;&gt;
	Autorisierung
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;verben-und-subjekt-prädikat-objekt-wer-tut-was-mit-wem&#34;&gt;
    &lt;a href=&#34;#verben-und-subjekt-pr%c3%a4dikat-objekt-wer-tut-was-mit-wem&#34;&gt;
	Verben und Subjekt-Prädikat-Objekt (Wer tut was mit wem?)
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Eine Anwendung hat eine Außenseite.
Das ist eine Liste aller URLs, die aufrufbar sind.
Damit meine ich nicht nur die HTML Webseiten (von denen ja einige auch interaktiv sind und Parameter haben können), sondern auch die API, die den Server für eine App auf einem Telefon oder in einem Browser repräsentiert.
Die Liste aller dieser URLs ist wie eine Liste von Verben:
Tu-Worte, mit denen man der Anwendung Befehle erteilen kann - &amp;ldquo;zeige mir&amp;rdquo;, &amp;ldquo;finde mir&amp;rdquo;, &amp;ldquo;ändere mir&amp;rdquo;, &amp;ldquo;lösche mir&amp;rdquo;.
Wie in jedem Satz gibt es ein Subjekt - wer befiehlt? - und ein Objekt - was wird von dem Verb manipuliert?&lt;/p&gt;
&lt;p&gt;Wir können das in Deutsch aufschreiben:
&amp;ldquo;Kris will alle Schüler der Heinrich-Heine-Schule in Heikendorf finden.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Oder als Tripel:
(Kris, &amp;ldquo;finde alle&amp;rdquo;, &amp;ldquo;Heinrich-Heine-Schule (Heikendorf)&amp;rdquo;)&lt;/p&gt;
&lt;p&gt;Oder als Tabelle, mit den Subjekten als Zeilen, den Objekten als Spalten und den Verben da, wo die betreffende Aktion erlaubt ist.
Das ist dann eine Matrix von &amp;ldquo;Wer darf was tun?&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;role-based-access-control&#34;&gt;
    &lt;a href=&#34;#role-based-access-control&#34;&gt;
	Role Based Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wir sehen dann, daß die Tabelle schnell umfangreich wird, und werden anfangen, die Subjekte zu gruppieren.
Subjekte mit gleichen Rechten gruppieren wir zusammen, in einer &lt;em&gt;Role&lt;/em&gt;, und benennen diese (zum Beispiel &lt;em&gt;Schüler der HHS&lt;/em&gt;).
Objekte kann man ebenso gruppieren.
Wir bekommen &lt;em&gt;Role Based Access Control&lt;/em&gt;, &lt;em&gt;RBAC&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;Wir können so bestimmten Subjekten, oder Rollen, feste Rechte geben.
Wir müssen aber immer noch viele Relationen erlauben:
&amp;ldquo;Schüler der HHS können mit anderen Schülern der HHS Kontakte anbandeln.&amp;rdquo;
und extra, und verschieden davon
&amp;ldquo;Schüler der Max-Planck-Schule, Kiel können mit anderen Schülern der MPS Kontakte anbandeln.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Offenbar reicht das in diesem Kontext nicht - aber für viele Anwendungen ist das schon ausreichend.
Nämlich immer dann, wenn die interne Struktur innerhalb der Anwendung nicht weiter segmentiert werden muss.&lt;/p&gt;
&lt;h2 id=&#34;attribute-based-access-control&#34;&gt;
    &lt;a href=&#34;#attribute-based-access-control&#34;&gt;
	Attribute Based Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Oft will man Regeln formulieren, die Eigenschaften von Subjekten und Objekten abgleichen.
Ich kann die Zugangsregeln für Schülerkontakte zum Beispiel so vereinfachen, daß ich die Kontakte zulasse, wenn der aufrufende Schüler und der aufgerufenen Schüler dieselbe Schule besuchen.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Schüler der HHS können mit anderen Schülern der HHS Kontakte anbandeln.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Schüler der MPS können mit anderen Schülern der MPS Kontakte anbandeln.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;alle diese RBAC-Regeln werden zu&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Schüler A kann mit Schüler B Kontakt aufnehmen, wenn &lt;code&gt;A.schule_id == B.schule_id&lt;/code&gt;&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;also wenn Schüler A und B denselben Wert im Attribut &lt;code&gt;schule_id&lt;/code&gt; stehen haben.&lt;/p&gt;
&lt;p&gt;Die Zugriffsrechte werden nun also durch Attribute von Subjekten definiert und können so stark vereinfacht werden.
Das setzt natürlich voraus, daß ich die sicherheitsrelevanten Attribute identifiziere und Änderungen an denen kontrolliere, denn sonst ist der Schutz wirkungslos.&lt;/p&gt;
&lt;p&gt;Beispiel: Wenn ein Schüler seine &lt;code&gt;schule_id&lt;/code&gt; nach Belieben unkontrolliert ändern kann, dann ist ein Vergleich &lt;code&gt;A.schule_id == B.schule_id&lt;/code&gt; wirkungslos.&lt;/p&gt;
&lt;h1 id=&#34;was-heißt-das-für-anwendungsentwickler&#34;&gt;
    &lt;a href=&#34;#was-hei%c3%9ft-das-f%c3%bcr-anwendungsentwickler&#34;&gt;
	Was heißt das für Anwendungsentwickler?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Als Anwendungsentwickler verwende ich ein Toolkit, um Webanwendungen und APIs zu schreiben.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ich muss wissen, welche Außenfläche meine Anwendung hat, also welche URLs mit welchen Parametern zugelassen werden.
Das ist nicht schwer.
Mein Toolkit hat fast sicher eine Funktion, die mir das sagt (&lt;code&gt;flask routes&lt;/code&gt; oder ähnliche Funktionen sind überall vorhanden).
Dies ist die Liste meiner Verben.&lt;/li&gt;
&lt;li&gt;Die Liste der Parameter jeder dieser aufrufbaren Seiten sind die Objekte in meinem Security-Modell.&lt;/li&gt;
&lt;li&gt;Ich muss meine Anwender identifizieren (ihnen also eindeutige Identifier zuweisen) und authentisieren (sie müssen die behauptete Identität also beweisen).&lt;/li&gt;
&lt;li&gt;Die Liste dieser Anwender ist dann die Liste meiner Subjekte.&lt;/li&gt;
&lt;li&gt;Ich muss nun ACL, RBAC oder ABAC Regeln die definieren, &amp;ldquo;Wer was mit wem&amp;rdquo; machen kann und dies im Access Control Framework meiner Anwendung ausdrücken.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Das ist nicht schwer, und es ist vor allen Dingen eine notwendige Arbeit.
Nicht nur aus rechtlichen und compliance Gründen, sondern auch, weil dies zu einem Datenmodell einer Anwendung gehört:
Als Nebenergebnis fällt dabei nämlich ein Transaktionsmodell heraus, also ein Diagramm, wie sich die Datensätze meiner Anwendung durch die Aufrufe von Methoden ändern lassen.
Ich erschlage also nicht nur alle Compliance-, viele Datenschutz und alle Security-Pflichten, sondern ich habe den kompletten Data Lifecycle meiner Anwendung mit einem Zustandsübergangsdiagramm dokumentiert,
das sowohl Entwicklern als auch Business Analysts allgemeinverständlich zeigt, was zum Teufel wir hier eigentlich tun und wie wir das modellieren.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A01:2021 - Broken Access Control (en)</title>
      <link>https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control-en.html</link>
      <pubDate>Tue, 23 Nov 2021 23:34:33 +0100</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control-en.html</guid>
      <description>&lt;p&gt;Translation by Lenz Grimmer, German version &lt;a href=&#34;https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control.html&#34;&gt;here&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;A
&lt;a href=&#34;https://twitter.com/ChristianBasl/status/1459851276817158151&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;twitter thread by Christian Basl&lt;/a&gt;


discussed the
&lt;a href=&#34;https://zerforschung.org/posts/learnu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dissection of the &amp;ldquo;Learnu&amp;rdquo; app&lt;/a&gt;

.
Basl wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Learnu operators say they have no expertise in IT security and have relied on outside consultants.
As a result, Learnu came to market insecurely, unbeknownst to them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In the discussion that developed, &lt;a href=&#34;https://twitter.com/ardewes/status/1460240730698493957&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Andreas Dewes&lt;/a&gt;

 took the view that&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Most startups I know go through a phase where IT security and compliance tend to take a back seat.
As they get bigger, they start to think about it, partly because customers or partners demand certifications, e.g. SOC 2 or ISO-27001.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That&amp;rsquo;s a funny statement in light of &lt;a href=&#34;https://owasp.org/Top10/A01_2021-Broken_Access_Control/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP A01:2021 - Broken Access Control&lt;/a&gt;

.
&lt;a href=&#34;https://en.wikipedia.org/wiki/Open_Web_Application_Security_Project&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP&lt;/a&gt;

 is an NGO that aims to improve the security of applications and services on the Internet.
To this end, OWASP publishes a top 10 list of application security problems that is updated every year.&lt;/p&gt;
&lt;p&gt;For 2021, compared to 2017, there have been the following changes:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/owasp-mapping.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Broken Access Control was #5 in 2017 and is now problem #1. 94% of the applications tested had some form of broken access control. The former #1 perennial problem Injection is now only #3.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We see a classic example of this in another school application tested by the Zerforschung team:
&lt;a href=&#34;https://zerforschung.org/posts/scoolio/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoolio&lt;/a&gt;

 was opened up by the researchers as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One endpoint of the application programming interface (API) immediately caught our attention: &lt;code&gt;/api/v3/Profile/{ProfileID}&lt;/code&gt;.
…
When we find exciting API endpoints that have a version component (here &lt;code&gt;/v3/&lt;/code&gt;), we like to try to change it sometimes.
So in our case &lt;code&gt;/api/v3/Profile/{ProfileID}&lt;/code&gt; became &lt;code&gt;/api/v2/Profile/{ProfileID}&lt;/code&gt;.
And tada: much more data!
But our own data is boring - we already know it.
So we also tried to enter a foreign ProfileID.
And to our little amazement, but great annoyance, we were of course able to access the detailed data of that foreign ID.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a classic &amp;ldquo;A01:2021 - Broken Access Control&amp;rdquo; example.
The application knows the identity of the user because it is registered in the app.
It does not use this information to authenticate and authorize the connection to the server.
And accordingly, the API can be used to access arbitrary user records instead of just its own.&lt;/p&gt;
&lt;h1 id=&#34;identity-authentication-authorization-auditing-and-accounting&#34;&gt;
    &lt;a href=&#34;#identity-authentication-authorization-auditing-and-accounting&#34;&gt;
	Identity, authentication, authorization, auditing and accounting
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A few terms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Identity:&lt;/strong&gt; I am me.
But I can&amp;rsquo;t access the web or an API.
An application has to do that on my behalf.
To do this, that application uses a unique user identifier that represents &amp;ldquo;me&amp;rdquo; in the context of the application.
But an identity with a unique identifier (a &amp;ldquo;principal&amp;rdquo;) that represents me is first of all an assertion.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authentication:&lt;/strong&gt; I can also prove this.
If I can prove the claimed identity, then I am authentically me.
I usually confirm my identity with a password and often with a 2nd factor (such as a changing secret number typed from a Google Authenticator).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The asserted and confirmed identity must also be &lt;strong&gt;anchored&lt;/strong&gt; for some purposes, such as when that identity is to be tied to other rights or relationships in the real world.
For example, if I&amp;rsquo;m supposed to have a school affiliation and class affiliation in a school app, then it may be good if I can&amp;rsquo;t just make an account for myself.
Instead, a teacher should look at it, ask me if I did it, and then assign me to the school and class.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An asserted, confirmed identity anchored in the real world is then granted access rights.
This is an &lt;strong&gt;authorization&lt;/strong&gt;, it determines what this identity is allowed to see, write, modify and delete in the context of the application.
We&amp;rsquo;ll talk a little more about that below.&lt;/li&gt;
&lt;li&gt;What I then do in the application may have to be recorded for evidentiary purposes.
For example, if the data I am accessing requires special protection, or if its change history needs to be documented.
In a school context, for example, this could be my collection of performance records.
A logbook in which accesses are linked to personal identities in a mandatory way that cannot be switched off is called an &lt;strong&gt;audit log&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If I use services that cost money, then a special form of audit log must be kept.
This audit log is the basis of accounting and shows which person has used which chargeable service and when.
This log is part of &lt;strong&gt;accounting&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Much can be written on each of these topics, but we are to be primarily concerned here with &lt;em&gt;authorization&lt;/em&gt; precisely because it is Topic #1 on the current OWASP list.
And because it does not only appear in the Zerforschis&amp;rsquo;
&lt;a href=&#34;https://zerforschung.org/posts/scoolio/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoolio&lt;/a&gt;


article, but once again in the
&lt;a href=&#34;https://zerforschung.org/posts/meinschnelltest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My Quick Test&lt;/a&gt;


article:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the first requests we notice is to &lt;code&gt;https://corona-api.de/persons/owner/{USER_ID}&lt;/code&gt;, where &lt;code&gt;USER_ID&lt;/code&gt; is of course the number of our account - e.g. &lt;code&gt;612341213acab23425251e21&lt;/code&gt;.
… [We shorten the URL]…
We dare to try one more time and remove the / at the end of the URL. And tada:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET https://corona-api.de/persons
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A list of people registered on the platform drops down to us.
A total of almost 400,000 with all the data that is collected during a Corona test.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Zerforschung then goes on to demonstrate that they can merrily change their identity or anchoring (the school affiliation) in either case (and presumably without it ending up in an audit log), and that they can write data at will by issuing a Corona test result to 177-year-old Robert Koch.&lt;/p&gt;
&lt;h1 id=&#34;authorization&#34;&gt;
    &lt;a href=&#34;#authorization&#34;&gt;
	Authorization
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;verbs-and-subject-predicate-object-who-does-what-to-whom&#34;&gt;
    &lt;a href=&#34;#verbs-and-subject-predicate-object-who-does-what-to-whom&#34;&gt;
	Verbs and subject-predicate-object (Who does what to whom?)
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;An application has an outside page.
This is a list of all URLs that are callable.
By this I mean not only the HTML web pages (some of which are interactive and can have parameters), but also the API that represents the server for an app on a phone or in a browser.
The list of all these URLs is like a list of verbs:
Do words that can be used to give commands to the application - &amp;ldquo;show me&amp;rdquo;, &amp;ldquo;find me&amp;rdquo;, &amp;ldquo;change me&amp;rdquo;, &amp;ldquo;delete me&amp;rdquo;.
As in any sentence, there is a subject - who commands? - and an object - what is being manipulated by the verb?&lt;/p&gt;
&lt;p&gt;We can write this down in German:
&amp;ldquo;Kris wants to find all the students at the Heinrich Heine School in Heikendorf.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Or as a triplet:
(Kris, &amp;ldquo;find all&amp;rdquo;, &amp;ldquo;Heinrich-Heine-Schule (Heikendorf)&amp;rdquo;)&lt;/p&gt;
&lt;p&gt;Or as a table, with the subjects as rows, the objects as columns, and the verbs where the action in question is allowed.
This is then a matrix of &amp;ldquo;Who may do what?&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;role-based-access-control&#34;&gt;
    &lt;a href=&#34;#role-based-access-control&#34;&gt;
	Role Based Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We then see that the table quickly becomes large, and will start grouping the subjects.
Subjects with the same rights we group together, in a &lt;em&gt;role&lt;/em&gt;, and name them (for example &lt;em&gt;students of HHS&lt;/em&gt;).
Objects can be grouped in the same way.
We get &lt;em&gt;Role Based Access Control&lt;/em&gt;, &lt;em&gt;RBAC&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;We can thus give fixed rights to certain subjects, or roles.
However, we still need to allow many relations:
&amp;ldquo;Students of HHS can make contacts with other students of HHS.&amp;rdquo;
and extra, and different from it
&amp;ldquo;Students of the Max-Planck-Schule, Kiel can make contacts with other students of the MPS.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Obviously, this is not enough in this context - but for many applications it is already sufficient.
Namely, whenever the internal structure within the application does not need to be segmented further.&lt;/p&gt;
&lt;h2 id=&#34;attribute-based-access-control&#34;&gt;
    &lt;a href=&#34;#attribute-based-access-control&#34;&gt;
	Attribute Based Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Often one wants to formulate rules that match properties of subjects and objects.
For example, I can simplify the access rules for student contacts to allow contacts if the calling student and the called student attend the same school.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;HHS students can make contacts with other HHS students.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;MPS students can make contacts with other MPS students.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;all these RBAC-Rules become&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Student A can make contact with Student B, if &lt;code&gt;A.school_id == B.school_id&lt;/code&gt;&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;so if student A and B have the same value in the attribute &lt;code&gt;school_id&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So, access rights are now defined by attributes of subjects and can thus be greatly simplified.
Of course, this requires that I identify the security-relevant attributes and control changes to those, because otherwise the protection is ineffective.&lt;/p&gt;
&lt;p&gt;Example: If a student can change his &lt;code&gt;school_id&lt;/code&gt; at will without control, then a comparison &lt;code&gt;A.school_id == B.school_id&lt;/code&gt; is ineffective.&lt;/p&gt;
&lt;h1 id=&#34;what-does-this-mean-for-application-developers&#34;&gt;
    &lt;a href=&#34;#what-does-this-mean-for-application-developers&#34;&gt;
	What does this mean for application developers?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;As an application developer, I use a toolkit to write web applications and APIs.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I need to know what my application&amp;rsquo;s outer surface is, i.e. which URLs are allowed with which parameters.
This is not difficult.
My toolkit almost certainly has a function that tells me this (&lt;code&gt;flask routes&lt;/code&gt; or similar functions are present everywhere).
This is my list of verbs.&lt;/li&gt;
&lt;li&gt;The list of parameters of each of these callable pages are the objects in my security model.&lt;/li&gt;
&lt;li&gt;I need to identify my users (i.e., assign them unique identifiers) and authenticate them (i.e., they need to prove the claimed identity).&lt;/li&gt;
&lt;li&gt;The list of these users is then the list of my subjects.&lt;/li&gt;
&lt;li&gt;I now need ACL, RBAC or ABAC rules that define &amp;ldquo;who can do what to whom&amp;rdquo; and express this in my application&amp;rsquo;s access control framework.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is not hard, and it is, above all, necessary work.
Not only for legal and compliance reasons, but also because this is part of an application&amp;rsquo;s data model:
As a side result, this produces a transaction model, i.e. a diagram of how the records of my application can be changed by calling methods.
So not only am I slaying all compliance, many data protection, and all security obligations, but I&amp;rsquo;ve documented the entire data lifecycle of my application with a state transition diagram,
that shows both developers and business analysts in a generally understandable way what the heck we&amp;rsquo;re actually doing here and how we&amp;rsquo;re modeling it.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
