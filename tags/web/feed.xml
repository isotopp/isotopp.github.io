<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on Die wunderbare Welt von Isotopp</title>
    <link>https://blog.koehntopp.info/tags/web.html</link>
    <description>Recent content in Web on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>kris-blog@koehntopp.de (Kristian Köhntopp)</managingEditor>

    
    <webMaster>kris-blog@koehntopp.de (Kristian Köhntopp)</webMaster>

    
    <lastBuildDate>Sat, 06 Sep 2025 07:03:20 +0000</lastBuildDate><atom:link href="https://blog.koehntopp.info/tags/web/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Details in Hugo</title>
      <link>https://blog.koehntopp.info/2024/09/28/details-in-hugo.html</link>
      <pubDate>Sat, 28 Sep 2024 04:05:06 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2024/09/28/details-in-hugo.html</guid>
      <description>&lt;p&gt;Ich habe ja seit circa 2000 kein Frontend mehr gemacht.&lt;/p&gt;
&lt;h1 id=&#34;details-&#34;&gt;
    &lt;a href=&#34;#details-&#34;&gt;
	&lt;code&gt;&amp;lt;details /&amp;gt;&lt;/code&gt;
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Heute habe ich also gelernt,
dass es ein &lt;a href=&#34;https://wiki.selfhtml.org/wiki/HTML/Elemente/details&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;&lt;/a&gt;

-Element gibt.
Das ist ein Element, das zusammengeklappt gerendert wird, und das man Aufklappen kann, um den Inhalt zu enthüllen.&lt;/p&gt;
&lt;p&gt;Der Teil von &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;, der zusammengeklappt sichtbar ist, heißt &lt;a href=&#34;https://wiki.selfhtml.org/wiki/HTML/Elemente/summary&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt;&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Nach der Summary kann dann beliebig viel &amp;ldquo;flow-content&amp;rdquo; kommen, also ein oder mehr &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; zum Beispiel.&lt;/p&gt;
&lt;h1 id=&#34;shortcodes&#34;&gt;
    &lt;a href=&#34;#shortcodes&#34;&gt;
	Shortcodes
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Ich will das nun in Hugo nutzen können, ohne daß ich HTML tippen muss.
Dazu kann ich in Hugo einen Shortcode &lt;code&gt;reveal&lt;/code&gt; definieren, den ich dann als &lt;code&gt;{{&amp;lt; reveal &amp;gt;}}&lt;/code&gt; aufrufen kann.
Ein vordefinierter Shortcode, der hier im Blog laufend verwendet wird, ist zum Beispiel &lt;code&gt;{{&amp;lt; relref &amp;gt;}}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Dazu lege ich &lt;code&gt;./layouts/shortcodes/reveal.html&lt;/code&gt; mit folgendem Inhalt an:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;details&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;reveal&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;summary&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;reveal&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Get &amp;#34;question&amp;#34; }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;summary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;reveal&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Inner | markdownify }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;details&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;und verwende das in der Form&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Was ist los?&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Nix.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;mit dem Ergebnis:&lt;/p&gt;
&lt;details class=&#34;reveal&#34;&gt;
	&lt;summary class=&#34;reveal&#34;&gt;Was ist los?&lt;/summary&gt;
	&lt;div class=&#34;reveal&#34;&gt;Nix.&lt;/div&gt;
&lt;/details&gt;

&lt;p&gt;Dazu kommt noch Styling:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;margin-bottom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;em&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;err&#34;&gt;summary&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;pointer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#3d80bb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;em&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#f5f5f5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;margin-top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;em&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;em&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#fafafa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;summary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;hover&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#e0e0e0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Auf diese Weise lassen sich lange optionale Inhalte rendern ohne den Artikel zu unübersichtlich zu machen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JusProg ist nur der Anfang</title>
      <link>https://blog.koehntopp.info/2024/01/16/jusprog-ist-nur-der-anfang.html</link>
      <pubDate>Tue, 16 Jan 2024 01:02:03 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2024/01/16/jusprog-ist-nur-der-anfang.html</guid>
      <description>&lt;p&gt;Es ist also dies hier passiert:
&lt;a href=&#34;https://lilithwittmann.medium.com/wen-sch%C3%BCtzen-eigentlich-jugendschutzprogramme-7f13fb8ebc51&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wen schützen eigentlich Jugendschutzprogramme?&lt;/a&gt;


Lilith Wittmann nimmt den Filter von JusProg e.V. auseinander und es ist eine einzige Eskalation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Die Filterkriterien sind nicht nachvollziehbar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gefilterte Websites wissen nichts von ihrer Einstufung.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Die Einstufungen sind systematisch falsch, und man kann eine politische Richtung erkennen.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Das ist JusProg e.V. aber eigentlich egal, denn es sind ja auch viele Websites nicht geblockt worden.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Die Website für den Download ist ein kompromittiertes Wordpress.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Eventuell hat das Wordpress Malware verteilt, aber JusProg e.V. kann das nicht ausschließen und auch nicht nachvollziehen, weil sie die Software nicht im Griff hat.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Die Infektion mit Malware war JusProg e.V. bekannt, und sie haben versucht, daran herumzudoktern, aber erfolglos. Das besorgt sie aber nicht besonders.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Was passiert hier, und warum zerfetzt Lilith Wittmann ausgerechnet JusProg?
Dazu müssen wir ein wenig ausholen und fast 30 Jahre zurückschauen.&lt;/p&gt;
&lt;h1 id=&#34;warum-jugendschutz&#34;&gt;
    &lt;a href=&#34;#warum-jugendschutz&#34;&gt;
	Warum Jugendschutz?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Der Jugendschutz im Allgemeinen ist eine im Grundgesetz verankerte staatliche Aufgabe.
Er ist nicht einfach etwas, das der Staat nicht machen kann.&lt;/p&gt;
&lt;p&gt;Ausnahmen vom Jugendschutz sind klar geregelt und sind im Wesentlichen das &amp;ldquo;Elternprivileg&amp;rdquo;.
Erziehungsberechtigte, und nur diese, dürfen für Ihr Kind – im Rahmen bestimmter Grenzen – frei entscheiden,
was ihr Kind wann darf oder nicht darf.
Darum darf Deine Mutter Dich mit drei Jahren an ihrem Bier probieren lassen,
wenn Du interessiert wissen willst, was sie da trinkt.
Und darum darf Dein Vater Dich mit 6 Jahren Harry Potter Teil 4 und Folgende sehen lassen,
wenn Du unbedingt sehen möchtest wie es weiter geht.&lt;/p&gt;
&lt;p&gt;Lehrer an Schulen dürfen das nicht.
Das Elternprivileg gilt nicht für sie.
Sie müssen also, wenn Schüler Medien in irgendeiner Form zu sich nehmen wollen,
dies im Rahmen des grundgesetzlich vorgeschriebenen und gesetzlich ausgestalteten Jugendschutzes tun,
wenn sie sich von Klagen durch besorgte Bürger frei stellen wollen.&lt;/p&gt;
&lt;p&gt;Internet an Schulen ist für die Schule auf viele Weisen ein Risiko,
und Haftung auf der Basis von Verletzungen des Jugendschutzes ist eines davon.&lt;/p&gt;
&lt;p&gt;Schlimmer noch, auch Anbieter von Medien jeder Art unterliegen den Regelungen des Jugendschutzes.
Niemand kann Filme, Hörspiele, Bücher, aber auch keine Webseiten oder Computerspiele anbieten,
ohne dabei den Jugendschutz zu berücksichtigen.
Alle diese Dinge brauchen eine Einordnung und eine wirksame Zugriffsbeschränkung,
sonst Klage und, schlimmer, schlechte Presse.&lt;/p&gt;
&lt;h1 id=&#34;pre-internet-jugendschutz&#34;&gt;
    &lt;a href=&#34;#pre-internet-jugendschutz&#34;&gt;
	Pre-Internet Jugendschutz
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Das hat in der Vergangenheit bis in die späten 90er Jahre wunderbar funktioniert.
Hauptsächlich deswegen, weil es keine kostenlosen und damit unfinanzierten Veröffentlichungen gab.
Und weil deswegen Veröffentlichung stark ge-gateway-ed war –
man konnte kein Buch, kein Spiel und schon gar kein Hörspiel oder keinen Film machen und dann verbreiten,
ohne durch einen Mediator zu gehen.
Also einen Verlag, eine Rundfunkanstalt oder einen anderen Vertriebs- und Verbreitungspartner,
der dabei dann auch massenhaft redaktionelle Bearbeitung betrieben hat,
und natürlich dabei auch die Formalien wie Anmeldungen bei Verwertungsgesellschaften oder Bewertung durch den Jugendschutz vorgenommen hat.&lt;/p&gt;
&lt;p&gt;Weil Inhalte grundsätzlich nie kostenlos waren, hat das nicht nur die Verfügbarkeit von Inhalten eingeschränkt,
sondern auch diese Formalien mit finanziert.
Auch wichtig: Es hat die Anzahl der Stellen reduziert, mit denen die staatlichen Stellen und ihre Organe zu tun hatten,
und durch die Pflicht zur kommerziellen Viabilität wurde auch eine Vorauswahl getroffen.&lt;/p&gt;
&lt;p&gt;Seit den späten 90er Jahren haben wir mediatorfreie Kommunikation.
Jeder Mensch kann mit genau gar keinem Aufwand Medien produzieren und publizieren.
Das kann durch Editieren eines existierenden Wikis passieren – das hat Brockhaus das Genick gebrochen.&lt;/p&gt;
&lt;p&gt;Es kann auch durch das Betreiben und Veröffentlichen eines Blogs, durch das Schreiben von Posts und Threads in Social Media,
durch das Aufnehmen und Verbreiten von Podcasts über diese Blogs,
oder halt durch das Produzieren von Filmen mit massiv verbilligten Produktionsmitteln geschehen.
Das letztere hat zum Beispiel zu &amp;ldquo;In the Pirkinning&amp;rdquo; und zu &amp;ldquo;Prelude to Axanar&amp;rdquo; geführt hat,
und dann zu entsprechenden rechtlichen Reaktionen von Rechte-Inhabern.&lt;/p&gt;
&lt;h1 id=&#34;drei-gründe-für-das-zusammenbrechen-des-jugendschutzes-im-internet&#34;&gt;
    &lt;a href=&#34;#drei-gr%c3%bcnde-f%c3%bcr-das-zusammenbrechen-des-jugendschutzes-im-internet&#34;&gt;
	Drei Gründe für das Zusammenbrechen des Jugendschutzes im Internet
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Es führt auch zu einem Zusammenbruch der deutschen Idee von Jugendschutz.
Das deutsche Jugendschutz-Konstrukt ist überhaupt nicht darauf eingerichtet,
mit mediatorfreier, massenhafter und weltweiter Generierung von Content klarzukommen.
Das sind drei unabhängige Probleme, die alle auch einzeln zum Zusammenbruch führen.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mediatorfrei&lt;/strong&gt; heißt, daß kein Verlag oder Aggregator zwingend involviert ist.
Ich habe einen Inhalt, ich stelle den irgendwo hin und Du kannst den finden, herunterladen und konsumieren.
Die Idee von JusProg und anderen Filterprogrammen ist immer das Konzept eines installierbaren Zwangs-Mediators,
dem Filter, der den direkten Zugriff auf bestimmte Inhalte verhindert.
Das setzt bestimmte Dinge voraus, wir werden da gleich noch drauf eingehen.&lt;/p&gt;
&lt;p&gt;Und &lt;strong&gt;massenhaft&lt;/strong&gt; heißt, daß es keine Vorauswahl gibt.
Nicht durch einen Mediator, etwa einen Verlag mit einem Editor, der das gut finden muss, was Du publizieren willst.
Aber auch nicht finanziell – die Grundkosten sind so niedrig, daß effektiv jede Person alles publizieren kann,
was diese Person publizieren möchte.
Und auch nicht durch eine Lizenz – man muss im Internet nicht wie beim deutschen BTX der späten 80er Jahre
als Anbieter statt Nutzer registrieren lassen, damit man Dinge schreiben darf und mehr tun kann als konsumieren.&lt;/p&gt;
&lt;p&gt;Massenhaft hat zur Folge, dass die Anzahl und Menge der produzieren Medien die Bewertungskapazität der zur Verfügung stehenden qualifizierten Bewerter massiv übersteigt.
Damit ist nicht nur keine Diskussion über individuelle Bewertungen mehr möglich,
sondern Bewertungen müssen schematisch nach Syntax, nicht Semantik erfolgen.
Sie können nicht einmal mehr stichprobenhaft auf Korrektheit kontrolliert werden.&lt;/p&gt;
&lt;p&gt;Und &lt;strong&gt;weltweit&lt;/strong&gt; heißt, daß sowohl Inhalte als auch ihre Klassifizierung die Grenzen eines homogenen Kulturraumes weit überschreiten.
Eine sinnvolle Einigung über Klassifikationen ist nicht mehr möglich.
Teilweise ist nicht einmal eine Unterhaltung über Dimensionen und Skalen einer Klassifikation möglich.&lt;/p&gt;
&lt;p&gt;Schon innerhalb Deutschlands sind die Maßstäbe der Inhaltsbewertung traditionell massiv uneinheitlich.
Der bayrische Rundfunk hat zum Beispiel die Ausstrahlung bestimmter Folgen &amp;ldquo;Scheibenwischer&amp;rdquo; verweigert,
und sich aus dem Netz der ARD verabschiedet.
Auch die inzwischen eingestellte Sendung &amp;ldquo;Sesamstraße&amp;rdquo; war in Bayern nicht verfügbar.&lt;/p&gt;
&lt;p&gt;Wenn es um Inhalte im Internet geht, ist aber republikweit entlang bestimmter politischer Bruchlinien schon lange massiv keine sinnvolle Einigung möglich.
Weltweit noch viel weniger.
Man stelle sich ein Inhaltsbewertungssystem vor, das sowohl für Schweden, Spanien, Saudi-Arabien, die USA und Thailand funktioniert.&lt;/p&gt;
&lt;p&gt;Jede Form von inhaltlicher Bewertung kann sich also nur an objektiven Kriterien orientieren:
&amp;ldquo;Nippel sichtbar&amp;rdquo;, &amp;ldquo;Messer, Gewalt, Blut sichtbar&amp;rdquo;, oder halt der berühmte &amp;ldquo;körperbezogene Penisneigungswinkel&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;In einem solchen System ist das Foto eines durchschnittlichen Gummifetischisten dann halt unkritisch, weil
keine Haut sichtbar ist (keine Nacktheit), die Pose nicht sexuell suggestiv ist (kein Sex),
keine Gewalt zu sehen ist (keine Gewalt) und auch keine unangemessene Sprache verwendet wird (keine Flüche oder verbotene Worte).
Zugleich werden ein Haufen Stakeholder protestieren und dieses Bild irgendwie klassifiziert sehen wollen.&lt;/p&gt;
&lt;h1 id=&#34;jugendschutz-ist-nicht-systematisch-objektivierbar-und-automatisierbar&#34;&gt;
    &lt;a href=&#34;#jugendschutz-ist-nicht-systematisch-objektivierbar-und-automatisierbar&#34;&gt;
	Jugendschutz ist nicht systematisch objektivierbar und automatisierbar
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Es geht darum, welche Inhalte unserem Nachwuchs wie und mit welcher Bewertung präsentiert werden,
denn das ist, was Erziehung ist – die Vermittlung von Werten.
Daher ist jede Bewertung, die sich an Syntax (objektiv sichtbaren Merkmalen) orientiert zum Scheitern verurteilt.&lt;/p&gt;
&lt;p&gt;Und in dem Moment, wo Jugendschutz automatisierbar ist, haben wir eine Maschine gebaut,
die erfolgreich eine bestimmte moralische Bewertung in irgendeinem bestimmten moralischen System vornehmen kann,
also unseren Nachfolger als Menschheit geschaffen.
Wir können von der Bühne des Universums abtreten und denen die Realität überlassen.&lt;/p&gt;
&lt;p&gt;Mögen sie erfolgreicher und anpassungsfähiger sein als wir.&lt;/p&gt;
&lt;p&gt;Das ist natürlich keine Einsicht oder Position, die ein Politiker in einem öffentlichen Diskurs einnehmen kann,
also sehen wir seit wortwörtlich 30 Jahren denselben dysfunktionalen Kram ohne einen Millimeter Fortschritt in irgendeiner Richtung.&lt;/p&gt;
&lt;h1 id=&#34;der-default-ist-ab-18&#34;&gt;
    &lt;a href=&#34;#der-default-ist-ab-18&#34;&gt;
	Der Default ist &amp;ldquo;ab 18&amp;rdquo;
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Wie dem auch sei – rein rechtlich ist es so, daß jeder Inhalt in jedem Medium, das für Deutsche erreichbar ist,
eine Bewertung haben muss oder eine Ausnahmeregelung greifen muss (etwa für Nachrichten).
Das führt nicht nur zu Youtube-Kanälen, in denen Damen mit freiem Oberkörper Nachrichten verlesen,
sondern auch dazu, daß mir eine DVD mit einer Aufnahme der Zauberflöte nur gegen Vorlage des Personalausweises ausgehändigt wurde,
weil sie bei Amazon ohne Jugendschutz-Klassifikation hinterlegt war – der Default für alle Inhalte ist immer &amp;ldquo;ab 18&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Inhalte brauchen also zwingend eine Klassifikation,
damit sie für Jugendliche hinter einem echten oder hypothetisch installierten Filter überhaupt sichtbar werden.
Diese Klassifikation kann durch den Anbieter selbst erfolgen – das ist diese &amp;ldquo;age.xml&amp;rdquo;-Datei, von der Lilith Wittmann redet.
Oder halt durch Dritte, und da kaum jemand eine solche &amp;ldquo;age.xml&amp;rdquo;-Datei mit Selbstbewertung erzeugt,
generiert JusProg als Dritter diese Bewertung.&lt;/p&gt;
&lt;p&gt;Das machte vor dem Internet total Sinn:
Da alle Inhalte kommerziell waren, waren Anbieter von Inhalten und ihre Mediatoren daran interessiert, Inhalte bewertet zu sehen
und dabei die Bewertung auch so niedrig wie möglich anzusetzen, damit die Inhalte so vielen Menschen als möglich zugänglich werden.&lt;/p&gt;
&lt;p&gt;Im Internet ist das nicht so:
Ich habe gar kein Interesse daran, daß meine kostenlosen Inhalte so vielen Menschen wie möglich zugänglich werden,
sondern sie sollen &lt;em&gt;den richtigen&lt;/em&gt; Menschen zugänglich sein.
Mein Markt und meine Reichweite sind so groß, daß alles andere sogar ein Problem wäre
und für mich selbst zu Skalierbarkeitsproblemen führen würde.
Ich würde in für meine Mission nicht relevanten Interaktionen mit unwichtigen Menschen ertrinken.&lt;/p&gt;
&lt;p&gt;Damit ist die Motivationsgrundlage entfallen, die das deutsche Jugendschutzsystem vor dem Internet am Laufen gehalten hat.&lt;/p&gt;
&lt;h1 id=&#34;aber-wir-brauchen-bewertungen--für-unsere-sites&#34;&gt;
    &lt;a href=&#34;#aber-wir-brauchen-bewertungen--f%c3%bcr-unsere-sites&#34;&gt;
	Aber wir brauchen Bewertungen – für unsere Sites
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Die Mitglieder von JusProg e.V. sind traditionelle Medienanbieter.
Lilith Wittmann nennt Mitglieder und stellt die Motivation klar:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[JusProg eV] wurde mit dem Ziel gegründet, eine solche Software bereitzustellen.
Seine Mitglieder sind große deutsche Digitalunternehmen wie z.B. Vodafone oder RTL.
Die finanzieren das gerne.
Denn solange es ein anerkanntes Jugendschutzprogramm gibt, können sie eben auf viele andere Jugendschutzmaßnahmen verzichten.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Die Mission ist also, die Inhalte der Mitglieder kostengünstig aus dem Schußfeld des Jugendschutzgesetzes herauszuholen,
nicht effektiven Jugendschutz zu leisten.
Das wäre auch, wie oben gezeigt, systematisch sehr schwierig, wenn nicht unmöglich.&lt;/p&gt;
&lt;p&gt;Damit das eine glaubhafte Wirksamkeitsfiktion erzeugt, müssen nicht nur die Webseiten der Mitglieder eine Bewertung erhalten.
Sondern alle.
Das erfolgt&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;geheim&lt;/strong&gt;, die Liste der Bewertungen ist nicht öffentlich, und die Kriterien sind es auch nicht.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ohne Benachrichtigung&lt;/strong&gt; der Bewerteten.
Deine Website ist durch JusProg bewertet, aber Du weißt es nicht.
Für eine solche Benachrichtigung müßte man Ansprechpartner und Kommunikationswege identifizieren können,
das ist aber nicht einheitlich automatisierbar.
Und wäre es das, dann hat man die Benachrichtigten am Hacken, die mit einem über die Bewertung diskutieren wollen,
was Zeit und Geld kostet und nicht skalierbar ist.&lt;/li&gt;
&lt;li&gt;und damit systematisch folgefalsch mit den beobachteten Problemen,
auf der Grundlage intransparenter syntaktischer Kriterien, und eventuell auch mit einer nicht offengelegten politischen Agenda.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Das ist natürlich nicht nur kein Jugendschutz, sondern auch Demokratiegift,
weil nun auf die gesamte Bevölkerung ein Zwangsmediator ausgerollt wird,
dem man sich nicht entziehen kann (darf),
weil man ja ein Jugendlicher sein könnte.
Und weil es Inhalte gibt, die nach JSchG nicht einmal Erwachsenen zugänglich gemacht werden dürfen.&lt;/p&gt;
&lt;p&gt;Daher wäre es im Grunde ideal, die zwar grundgesetzlich vorgeschriebene Idee des Jugendschutzes im Internet als zu Recht gescheitert anzusehen.
JusProg wäre dann ein Feigenblatt,
mit dem kommerzielle Medienanbieter sich durch Generierung und Installation einer &amp;ldquo;age.xml&amp;rdquo;-Datei haftungsrechtlich freikaufen können,
und dann installiert einfach niemand JusProg.&lt;/p&gt;
&lt;p&gt;So ist es aber nicht.
Dieser Status Quo ist einmal durch Installation von JusProg in öffentlichen Netzen eingerissen worden,
wie Lilith Wittmann korrekt anmerkt.&lt;/p&gt;
&lt;p&gt;Zum anderen ist da der feuchte Traum, jeden Internetbenutzer mit einem elektronischen Ausweisdokument jederzeit identifizieren zu können,
der gerade in der EU in eIDAS, Verimi und vielen anderen Dingen wieder auflebt.
Dabei kommen die Interessen
von &amp;ldquo;Bedarfsträgern&amp;rdquo;,
die Interessen von Leuten mit politischem Filterwillen,
der &amp;ldquo;Jugendschutz&amp;rdquo; als Legitimierungsfeigenblatt,
und die kommerziellen Interessen der Werbeindustrie zusammen, die Identität als staatlich zwangsverordneten Supercookie mitnutzen will.&lt;/p&gt;
&lt;p&gt;Das darf so nicht passieren.
Daher muss nicht nur JusProg sterben.
Aber es ist nur ein Baustein in einer Entwicklung, die fraktal falsch ist.&lt;/p&gt;
&lt;p&gt;Das ist der Grund, warum Lilith da überall drauf haut.
Und darum sollten wir ihr alle auf jede denkbare Art Beistand leisten.
Gerade jetzt, wo um uns herum eine politische Ideologie auflebt, die nur darauf wartet, solche Mechanismen auf tödliche Weise zu missbrauchen.&lt;/p&gt;
&lt;h1 id=&#34;siehe-auch&#34;&gt;
    &lt;a href=&#34;#siehe-auch&#34;&gt;
	Siehe auch
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Seit 27 Jahren kein Fortschritt im Diskurs:
&lt;a href=&#34;https://blog.koehntopp.info/1997/05/14/sperrungen-im-internet.html&#34;&gt;Sperrungen im Internet&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Seit 15 Jahren kein Fortschritt im Diskurs:
&lt;a href=&#34;https://blog.koehntopp.info/2009/08/06/jugendschutzfilter-saugen-und-daf-r-gibt-es-einen-grund.html&#34;&gt;Jugendschutzfilter saugen und dafür gibt es einen Grund&lt;/a&gt;

 –
Warum wir nicht einfach alles &amp;ldquo;ab 18&amp;rdquo; machen können und warum damit ein Haufen Leuten mit unproblematischen Inhalten notlos Arbeit aufgebürdet wird.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Die Kosten von SSL</title>
      <link>https://blog.koehntopp.info/2011/02/10/die-kosten-von-ssl.html</link>
      <pubDate>Thu, 10 Feb 2011 19:08:54 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2011/02/10/die-kosten-von-ssl.html</guid>
      <description>&lt;p&gt;Bei web.de waren schon 2003 mehr als 80% des Datenverkehrs
SSL-verschlüsselt, da dort die Policy herrschte &amp;ldquo;Paßworte werden nur
verschlüsselt übertragen&amp;rdquo; und &amp;ldquo;Wenn ein Login stattgefunden hat, findet der
Rest der Session bis zum Logout verschlüsselt statt&amp;rdquo;. Ich habe in
&lt;a href=&#34;https://blog.koehntopp.info/2009/02/11/ein-paar-worte-zu-ssl.html&#34;&gt;einem Artikel&lt;/a&gt;


schon einmal dargelegt, daß das rechenleistungsmäßig keine große Belastung
ist - der ganze SSL-Aufwand macht etwa 1/250stel der Gesamtleistung des
Systems aus.&lt;/p&gt;
&lt;p&gt;Kosten entstehen bei SSL bei der laufenden (symmetrischen) Verschlüsselung
nicht in nenneswerter Höhe, sondern nur bei der Herstellung der Verbindung,
wenn asymmetrische Kryptographie verwendet wird. Dort treten sie nicht nur
in Form von CPU-Verbrauch auf, sondern auch in Form von Datenmengen und
Roundtrips, also Übertragungslatenzen. Aber das ist nicht nur überschaubar,
sondern man kann es durch geeignetes Protokolldesign auch stark optimieren
(Verbindungen halten statt neu aufbauen, Parameter cachen und so weiter),
und außerdem
&lt;a href=&#34;http://www.imperialviolet.org/2010/06/25/overclocking-ssl.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;schrauben Leute am Protokoll selbst&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Nun stellte
&lt;a href=&#34;http://www.heise.de/security/meldung/Facebook-jetzt-durchgehend-mit-SSL-Verschluesselung-1177890.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Facebook gerade auf SSL um&lt;/a&gt;

,
und schon letztes Jahr begann
&lt;a href=&#34;http://www.heise.de/newsticker/meldung/Google-verschluesselt-Suchanfragen-1005840.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google so langsam das Licht zu sehen&lt;/a&gt;

.
&lt;a href=&#34;http://codebutler.com/firesheep&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Firesheep&lt;/a&gt;

 macht Druck, und
&lt;a href=&#34;http://www.eff.org/https-everywhere&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTTPS Everywhere&lt;/a&gt;

 hilft sehr.&lt;/p&gt;
&lt;p&gt;Firmen wie F5 finden das blöd, denn natürlich geht das mit einem relativ
kleinen Stapel gewöhnlicher Rechner genau wie mit einer teuren SSL
Appliance, auch wenn
&lt;a href=&#34;http://devcentral.f5.com/weblogs/macvittie/archive/2011/01/31/dispelling-the-new-ssl-myth.aspx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;F5 das nicht wahr haben will&lt;/a&gt;

.
Und so macht man sich bei
&lt;a href=&#34;http://news.ycombinator.com/item?id=2184927&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Y-Combinators Hacker News&lt;/a&gt;

 darüber lustig.
Jedenfalls ist das Problem bei SSL
&lt;a href=&#34;http://www.imperialviolet.org/2011/02/06/stillinexpensive.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;nicht die CPU Power&lt;/a&gt;

.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jugendschutzfilter saugen und dafür gibt es einen Grund</title>
      <link>https://blog.koehntopp.info/2009/08/06/jugendschutzfilter-saugen-und-daf-r-gibt-es-einen-grund.html</link>
      <pubDate>Thu, 06 Aug 2009 09:10:00 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2009/08/06/jugendschutzfilter-saugen-und-daf-r-gibt-es-einen-grund.html</guid>
      <description>&lt;p&gt;Heise newstickert:
&lt;a href=&#34;http://www.heise.de/newsticker/Bundesregierung-sieht-grosse-Maengel-bei-Jugendschutz-Filtern--/meldung/143110&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bundesregierung sieht große Mängel bei
Jugendschutz-Filtern&lt;/a&gt;

.
Ach!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Bislang habe keines der staatlich getesteten Jugendschutzprogramme, die
Filterregeln für beispielsweise von Eltern zu installierender
Schutzsoftware vorgeben, eine &amp;ldquo;akzeptable Wirksamkeit&amp;rdquo; entfaltet, schreibt
der federführende Beauftragte für Kultur und Medien, Bernd Neumann, in
seiner jetzt verfügbaren Antwort (PDF-Datei) auf eine Anfrage der grünen
Bundestagsfraktion. Zu viele zulässige Inhalte würden blockiert, und zu
viele ungeeignete Angebote würden durchgelassen, schreibt der
CDU-Politiker unter Berufung auf Tests im Prüflabor der Kommission für
Jugendmedienschutz (KJM) bei der länderübergreifenden Stelle
jugendschutz.net. Beide Mängel seien nicht wünschenswert.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Der Bericht hebt weiter darauf ab, daß die Anzahl der zu bewertenden Sites
sehr groß sei und die Inhalte sich zum Teil recht schnell ändern würden.
Eine automatische Klassifizierung von Inhalten funktioniere nicht, und daher
wolle man eine Selbstklassifizierung der Anbieter erzwingen.&lt;/p&gt;
&lt;p&gt;Eine Reflektion über die Situation und eine Ursachenforschung nach diesem
Dilemma wird nirgendwo erwähnt. Das wäre aber nützlich:&lt;/p&gt;
&lt;p&gt;Das erklärte Ziel solcher Sperrsoftware sei es, die &amp;ldquo;von aus
jugendschützerischer Sicht ungeeigneten&amp;rdquo; Webseiten zu blockieren. Das ist
als Missionsstatement natürlich falsch, denn dieses Ziel ist einfach zu
erreichen:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Man sperrt einfach alle Internetseiten komplett.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Das korrekt formulierte Ziel ist es, die aus jugendschützerischer Sicht
&lt;strong&gt;ungeeigneten Webseiten zu sperren &lt;em&gt;und&lt;/em&gt; alle anderen zu erlauben&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Das wird auch weiter oben im Text zugegeben, denn dort wird unter anderem
beklagt, daß zu viele zulässige Inhalte blockiert würden. So formuliert ist
dieses Ziel aber weitaus schwieriger zu erreichen, weil man nun nicht mit
einer kleineren Zahl von jugendgefährdenden Webseiten zu tun hat, sondern
mit allen Webseiten, die es gibt. Insbesondere muß man nun Aussagen über
nicht bewertete Webseiten machen.&lt;/p&gt;
&lt;p&gt;Bei Filmen und Videospielen ist das einfach - ein Film oder ein Videospiel
ohne Bewertung wird behandelt wie &amp;lsquo;frei ab 18&amp;rsquo;. Damit ist der Fall dort
erledigt, denn ein Film oder ein Videospiel zu publizieren ist ein
aufwendiger Akt und der Herausgeber des Mediums hat damit ein Interesse
daran, sein Werk nicht nur bewerten zu lassen, sondern auch eine möglichst
niedrige Bewertung zu erzielen, damit die Reichweite und damit die
erzielbaren Gewinne möglichst maximal sind. Es gibt nur sehr wenige Filme
und Videospiele, die nicht eine Jugendschutzbewertung haben.&lt;/p&gt;
&lt;p&gt;Im Internet ist das anders: Im Internet kennt man sehr viel mehr Autoren und
Werke, und die Kosten für die Erzeugung einer beliebigen Website sind
minimal. Wenn Arbeitszeit kostenlos ist, das Werk also als Hobby erstellt
wird, sind die Kosten für das Werk sogar Null. Damit fällt die Motivation
für eine Reichweitenmaximierung weg:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Im Internet will ein Herausgeber nicht so viele Personen als möglich
erreichen, sondern die richtigen: Gleichgesinnte oder Fans.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Nur bei großen, kommerziellen Sites sind auch Kunden die Zielgruppe. Darum
ist die Motivation sein Werk bewerten zu lassen im Internet sehr viel
geringer - &amp;lsquo;Mir doch egal, ob Jugendliche oder Kinder auf meine Site
zugreifen können&amp;rsquo; ist keine so ungewöhnliche Formulierung.&lt;/p&gt;
&lt;p&gt;Selbst wenn jemand seine Site selbst bewertet oder bewerten läßt besteht das
Problem, welche Bewertung man denn vergibt. Denn wenn man eine Site zu hoch
bewertet - frei ab 18, obwohl sie frei ab 12 wäre - ist das folgenlos.
Bewertet man sie anders herum falsch - frei ab 12, obwohl sie frei ab 18
wäre - ist das ein Problem. Als Hobbyist oder engagierte Privatperson ist
man also nur dann auf der sicheren Seite, wenn man die Altersfreigabe für
seine Site eher zu hoch ansetzt.&lt;/p&gt;
&lt;p&gt;Die höchste Einstufung - frei ab 18 - bekommt man aber sowieso, wenn man gar
nichts tut und seine Site nicht selbst bewertet. Warum also überhaupt etwas
tun und ein rechtliches Risiko eingehen?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Die Folge ist, daß ein Klassifikationssystem für den Jugendschutz bei
Webseiten nicht greift.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Versuche hat es viele gegeben, aber im Allgemeinen sind diese nicht
erfolgreich gewesen in dem Sinne, daß sie eine Abdeckung hergestellt hätten.
Einige kommerzielle Sites haben sich selbst bewertet oder bewerten lassen,
aber die Masse der Sites eben aus den dargelegten Gründen nicht. Damit tritt
bei einer Sperrung unbewerteter Sites in einem Filter noch immer die
Situation aus dem Anfang ein - alle Sites sind gesperrt und der Jugendschutz
ist hergestellt, indem man Kinder und Jugendliche aus dem Internet fernhält.
Allenfalls ist ihnen ein Kindernet spezieller freigegebener, kommerzieller
Sites zugänglich (&amp;lsquo;Walled garden&amp;rsquo;). Das ist kaum geeignet, die von Erziehern
gewünschte Medienkompetenz zu erzeugen.&lt;/p&gt;
&lt;p&gt;Also die Experimente mit automatisierten Bewertungen nach formalen,
syntaktischen Kritieren wie Wortfilter oder Rosa-Pixel-Zähler. Dazu heißt es
in dem Artikel:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wege der Fülle unzulässiger Inhalte im Internet kämen dabei neben
redaktionellen auch automatische Klassifizierungsverfahren zum Einsatz.
Diese sollten die Jugendschutzproblematik von Webseiten &amp;ldquo;an Hand
bestimmter Muster erkennen&amp;rdquo;. Falsche Einordnungen seien beim derzeitigen
Stand der Technik aber nicht zu vermeiden.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Das ist wenig überraschend. Die Klassifizierung einer Site nach
Jugendgefährdung ist am Ende eben keine syntaktische, sondern eine
semantische und moralische - es kommt nicht auf die verwendeten Worte an,
sondern was mit ihnen gesagt wird und wie das zu bewerten ist. Würden solche
automatisierten Filter tatsächlich zuverlässig funktionieren, hätten wir
eine Maschine gebaut, die in der Lage ist, Texte zu verstehen und auf der
Grundlage ihres Wissens von der Welt moralische Urteile über diese Texte
fällen kann.&lt;/p&gt;
&lt;p&gt;Wir hätten nicht nur das Problem der Maschinenintelligenz, sondern auch das
&lt;a href=&#34;http://blog.fefe.de/?ts=b486a79a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Problem der Maschinenmoral&lt;/a&gt;

 gelöst und
könnten als schöpferische Rasse beruhigt abtreten, weil wir den Funken des
Geistes an eine uns nachfolgende Form der Existenz abgegeben haben.&lt;/p&gt;
&lt;p&gt;Die Debatte über den Jugendschutz im Internet wird jedenfalls keinen
Millimeter von der Stelle kommen, solange die kommerziellen Verhältnisse im
Netz und wie die sich von denen in anderen Medien unterscheiden nicht
einbezogen werden. Sie wird auch nicht von der Stelle kommen, solange nicht
zugegeben und akzeptiert wird, daß Automatisierung in dieser Frage ein
sinnloses Unterfangen ist.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ein paar Worte zu SSL</title>
      <link>https://blog.koehntopp.info/2009/02/11/ein-paar-worte-zu-ssl.html</link>
      <pubDate>Wed, 11 Feb 2009 19:19:44 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2009/02/11/ein-paar-worte-zu-ssl.html</guid>
      <description>&lt;p&gt;Slowtiger antwortet in einem Kommentar zu &lt;a href=&#34;https://blog.koehntopp.info/2009/02/10/mein-natives-ip-v6.html&#34;&gt;Mein natives IP V6&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wenn ich Sätze wie &amp;ldquo;Ob ich überhaupt noch unverschlüsseltes http auf V6 anbieten werde weiß ich nicht - die politische Situation legt nahe, daß dies Unsinn ist.&amp;rdquo; in einem Technikblog lese, dann gruselts mich wirklich.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Also, die ganze Erklärung ist wie immer in wenig länger.&lt;/p&gt;
&lt;h3 id=&#34;rechenleistung-ist-kein-problem&#34;&gt;
    &lt;a href=&#34;#rechenleistung-ist-kein-problem&#34;&gt;
	Rechenleistung ist kein Problem
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Es ist schon seit mindestens 5 Jahren so, daß jeder zeitgemäße Rechner leicht die Rechenleistung hat, um seinen Netzwerkverkehr zu verschlüsseln. Dazu braucht man auch keinen Krypto-Coprozessor.&lt;/p&gt;
&lt;p&gt;Um dem ganzen mal eine Relation zu geben: Das ganze alte web.de Rechenzentrum von 2003 hat so um die 2 Megawatt (ca. 2500 PS, zwei fette Schiffsdiesel) Leistungsbedarf. Die SSL-Verschüsselung allen web.de Traffics verbraucht in etwa 7 Kilowatt (etwa 10 PS, eine Ente) an Rechenleistung.&lt;/p&gt;
&lt;p&gt;Warum bietet also nicht jeder seine Website grundsätzlich SSL-Verschlüsselt an?&lt;/p&gt;
&lt;h3 id=&#34;ssl-comitted-sich-zu-früh-auf-den-sitenamen&#34;&gt;
    &lt;a href=&#34;#ssl-comitted-sich-zu-fr%c3%bch-auf-den-sitenamen&#34;&gt;
	SSL comitted sich zu früh auf den Sitenamen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Das liegt einmal am Aufbau von SSL. Der Webserver lauscht auf einem Port auf eingehende Verbindungen - hier dem https-Port 443. Das erste, was nach dem TCP-Connect passiert ist der SSL-Handshake: Server und Browser einigen sich darin auf die Gültigkeit der Zertifikate und die zu verwendende Verschlüsselung. Im Zertifikat steht auch schon der Name des Webservers - etwa &amp;lsquo;blog.koehntopp.info&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;Erst danach kommt der eigentliche HTTP GET-Request, der nun schon gesichert und verschlüsselt im SSL-Tunnel übermittelt wird. Dadurch ist eine SSL-Verbindung von Anfang an gesichert.&lt;/p&gt;
&lt;p&gt;Dieser Request muß nun aber an die im Zertifikat genannte Site sein. Es ist nicht mehr möglich, in einem für blog.koehntopp.info aufgebauten SSL-Tunnel einen Request für z.B. hubbahubba.de zu senden, denn das Zertifikat ist ja schon ausgetauscht und der Server hat das Zertfikat für blog.koehntopp.info vorgezeigt, nicht für hubbahubba.de.&lt;/p&gt;
&lt;p&gt;Daher braucht man in SSL für jede Site eine eigene IP-Nummer, während man unverschlüsselt mit &amp;rsquo;name based virtual hosts&amp;rsquo; eine IP-Nummer für beliebig viele Sites teilen kann.&lt;/p&gt;
&lt;h3 id=&#34;tls-mit-sni-kann-das-umgehen&#34;&gt;
    &lt;a href=&#34;#tls-mit-sni-kann-das-umgehen&#34;&gt;
	TLS mit SNI kann das umgehen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Auf dem Port 443 kann man nun verschiedene Geschmacksrichtungen von Verschlüsselungsmanagement fahren (die Verschlüsselung ist immer dieselbe, aber die Art und Weise, wie man sich über Namen, Schlüssel und Verfahren einigt ist subtil anders): SSL 2.0 (veraltet und defekt), SSL 3.0 (soweit bekannt sicher) und TLS (soweit bekannt auch sicher). Für TLS gibt es eine Erweiterung SNI (&lt;a href=&#34;http://de.wikipedia.org/wiki/Server_Name_Indication&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Server Name Indication&lt;/a&gt;

), die genau dieses geschilderte Problem umgehen soll.&lt;/p&gt;
&lt;h3 id=&#34;sni-ist-nicht-weit-genug-verbreitet&#34;&gt;
    &lt;a href=&#34;#sni-ist-nicht-weit-genug-verbreitet&#34;&gt;
	SNI ist nicht weit genug verbreitet
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;SNI wird nun von einigen Browsern sogar unterstützt und fehlerfrei genug implementiert, sodaß man sie nutzen könnte um mehr als einen &lt;strike&gt;SSL&lt;/strike&gt;TLS-Host pro IP zu betreiben. Leider ist der Marktanteil der Broser, die SNI beherrschen nicht groß genug. So wird SNI im MSIE nur in Vista unterstützt, behauptet jedenfalls Wikipedia.&lt;/p&gt;
&lt;h3 id=&#34;ipv6-ändert-die-regeln&#34;&gt;
    &lt;a href=&#34;#ipv6-%c3%a4ndert-die-regeln&#34;&gt;
	IPV6 ändert die Regeln
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Mit IP V6 bekommt man in der Regel keine einzelnen Adressen zugeteilt, sondern gleich ganze Blöcke von Nummern. Es gibt also keinen Grund mehr sparsam mit den Adressen zu sein, sondern man kann ganz entspannt jedem Host sowieso eine einzelne Adresse zuweisen anstatt mit Hacks wie Name Based Virtual Hosts und SNI rumzufuhrwerken. Das heißt auch, daß SSL und TLS sehr viel einfacher zu implementieren sind - im Browser wie auch im Server. Und daß so mehr Leute ihre Sites einfach so auch verschlüsselt anbieten&lt;/p&gt;
&lt;h3 id=&#34;die-sache-mit-den-zertifikaten&#34;&gt;
    &lt;a href=&#34;#die-sache-mit-den-zertifikaten&#34;&gt;
	Die Sache mit den Zertifikaten
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Dem wiederum steht in erster Linie die Handhabung von Zertifikaten entgegen, die aktuelle Browser so drin haben. Das Modell für den Umgang mit Zertifikaten ist derzeit nämlich weniger auf die Generierung von tatsächlicher Sicherheit ausgerichtet, sondern mehr auf die Generierung von Umsatz für Certification Authorities.&lt;/p&gt;
&lt;p&gt;Derzeit ist es so, daß der Browser gerne ein Zertifikat sehen möchte, wenn er auf &lt;a href=&#34;https://blog.koehntopp.info&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://blog.koehntopp.info&lt;/a&gt;

 zugreift. Der CN (common name, hier: der Sitename im Zertifikat) muß dann mit dem DNS-Namen übereinstimmen. Das heißt im Zertifikat und in der Browserleiste muß in beiden Fällen blog.koehntopp.info stehen. Im Zertifikat steht dann außerdem noch, das blog.koehntopp.info von Kristian Köhntopp betrieben wird und daß dem Aussteller des Zertifikate die ladungsfähige Anschrift von Kristian Köhntopp bekannt war, als er das Zertifikat signiert hat - das setzt voraus, daß die CA bei Ausstellung des Zertifikates so was auch überprüft. Das Zertifikat muß außerdem von einer Certificate Authority ausgestellt sein, die der Browser kennt - welche CAs der Browser kennt, ist in ihm eingebaut. Trifft ein Browser auf Zertifikate von einer CA, die er nicht kennt, mault er mehr oder weniger laut rum. Firefox 3 mault 3-4 Mausklicks lang rum, jedesmal wenn er auf ein neues solches Zertifikat trifft. Man kann die CA-Liste zwar zur Laufzeit anpassen, aber das tut niemand jemals.&lt;/p&gt;
&lt;p&gt;Nun ist es aber so, daß eine CA zu betreiben quasi eine Lizenz zum Geld drucken ist. Wenn man so mit Geld drucken beschäftigt ist, dann hat man es mitunter echt schwer, das Geld von Leuten abzulehnen. Und &lt;a href=&#34;http://blog.fefe.de/?ts=b7affdb9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;zertifiziert dann alles und jeden&lt;/a&gt;

. Damit ist ein Server-Zertifikat von dieser CA gar nix mehr wert. Als Endanwender kann man sich jetzt also seine CA-Liste im Browser angucken und sich überlegen, welche CA dort wohl wertige und welche wertlose Zertifikate ausstellt - am Zertifikat kann man das jedenfalls nicht sehen. Daher Fefes Anmerkung &amp;lsquo;Totalschaden für SSL&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;Besser wäre es, der Browser würde sich mit CAs gar nicht weiter abgeben, sondern sich an Sites erinnern und warnen, wenn sich das Zertifikat einer Site spontan ändert - etwa &lt;a href=&#34;http://blog.fefe.de/?ts=b7a3db16&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;so&lt;/a&gt;

. Dann kann sich jeder ein Zertifikat bauen und es unterschreiben wie er lustig ist. Man würde bei allen wichtigen Sites aber dennoch merken, wenn einem jemand versucht etwas unterzuschieben, weil sich das bereits bekannte Zertifikat spontan ändert.&lt;/p&gt;
&lt;h3 id=&#34;und-warum-der-ganze-schmonz&#34;&gt;
    &lt;a href=&#34;#und-warum-der-ganze-schmonz&#34;&gt;
	Und warum der ganze Schmonz?
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;IPV6 und SSL mit selbstsignierten Zertifikaten und optional einem Firefox-Plugin das auf die von Fefe beschriebene Weise funktioniert erlauben es uns, große Teile des bisher unverschlüsselten Webs zu verschlüsseln und sogar so etwas wie lokale Sicherheit zu erzeugen. Das geht deswegen, weil zwei der drei Gründe weggefallen sind, die bisher dagegen sprachen: CPU ist nicht mehr knapp und IP-Adressen sind es auch nicht (und an den knappen Zertifikaten arbeiten wir mit dem o.a. Vorschlag).&lt;/p&gt;
&lt;p&gt;Das erhöht den Anteil von verschlüsseltem Traffic im Netz und macht jede Form von Filterung, &lt;a href=&#34;http://en.wikipedia.org/wiki/Phorm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Phorm&lt;/a&gt;

 und anderen Formen von Injection sowie sonstiger Schnüffelei ab Werk schwieriger. Das schützt nicht nur einen selbst, sondern auch alle anderen, deren verschlüsselter Traffic nun viel weniger auffällig ist.&lt;/p&gt;
&lt;p&gt;Das will man, und mit V6 wird das echt einfach.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gesetz über die Deutsche Nationalbibliothek</title>
      <link>https://blog.koehntopp.info/2006/09/22/gesetz-ber-die-deutsche-nationalbibliothek.html</link>
      <pubDate>Fri, 22 Sep 2006 07:10:33 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2006/09/22/gesetz-ber-die-deutsche-nationalbibliothek.html</guid>
      <description>&lt;p&gt;Deutsche Politiker haften nicht für die Produkte ihrer Arbeit. Dadurch
unterscheidet sich ihre Tätigkeit von der so ziemlich aller anderen Leute.
Unsere Politiker haben ein
&lt;a href=&#34;http://217.160.60.235/BGBL/bgbl1f/bgbl106s1338.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gesetz über die Deutsche Nationalbibliothek&lt;/a&gt;


beschlossen, das am 22. Juni diesen Jahres verkündet worden ist. Das Gesetz
ist offensichtlich in grandiosem Unverständis über die Natur des Netzes
gemacht worden, aber wer nicht haftet, darf halt auch öffentlich dumm sein.&lt;/p&gt;
&lt;p&gt;Schauen wir also mal:&lt;/p&gt;
&lt;p&gt;In §14 definiert dieses Gesetz eines Ablieferungspflicht für Medienwerke,
die nach §14 (3) auch Webseiten (&amp;ldquo;Medienwerke in unkörperlicher Form&amp;rdquo;)
erfaßt. §14 (4) legt fest, daß die Ablieferung binnen einer Woche zu
erfolgen hat. §15 legt fest, daß der Ablieferungspflichtige derjenige ist,
der berechtigt ist, das Medienwerk zu verbreiten oder öffentlich zugänglich
zu machen, für dieses Blog also ich. §16 definiert, daß die Ablieferung
unentgeltlich und auf eigene Kosten bei der Deutschen Nationalbibliothek zu
erfolgen habe, wobei Medienwerke in unkörperlicher Form auch zur Abholung
bereitgestellt werden können. Dann hat die Bereitstellung allerdings nach
den Maßgaben der Bibliothek zu erfolgen.&lt;/p&gt;
&lt;p&gt;§19 legt fest, daß es eine Ordnungswidrigkeit ist, das Medienwerk nicht,
nicht rechtzeitig oder nicht in der vorgeschriebenen Weise abzuliefern -
bewehrt mit einer Geldbuße von bis zu €10000.&lt;/p&gt;
&lt;p&gt;Eine Mail an die DNB ist raus, ich warte auf die Antwort.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.haz.de/politik/290854.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Artikel in der HAZ&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sueddeutsche.de/panorama/artikel/82/85996/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Artikel in der SZ&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ddb.de/impressum/index.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kontaktaufnahme mit der DNB&lt;/a&gt;

 (via  &lt;a href=&#34;http://www.chris.de/archives/273-Mir-bleibt-die-Spucke-weg..html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Müsli&lt;/a&gt;

)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.heise.de/ct/06/19/186/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;c&amp;rsquo;t Artikel&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(via Jürgen aus den Kommentaren)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP Kongress Köln</title>
      <link>https://blog.koehntopp.info/2000/10/07/php-kongress-koeln.html</link>
      <pubDate>Sat, 07 Oct 2000 09:00:00 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2000/10/07/php-kongress-koeln.html</guid>
      <description>&lt;h1 id=&#34;day-1&#34;&gt;
    &lt;a href=&#34;#day-1&#34;&gt;
	Day 1
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;I attended PHP Congress Cologne (05-Oct-2000 to 06-Oct-2000)
together with Ulf Wendel and Jan Kneschke. We arrived in Cologne
the evening before without incident, hit our hotel sometime in
the evening and immediately departed for the &lt;code&gt;#php.de&lt;/code&gt; (IrcNet)
channel party organized by &lt;a href=&#34;http://www.subjective.de&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;subj&lt;/a&gt;

. As usual, there was
no proper beer to be had in Cologne (the local brew is based on
dishwater), but the Apfelpfannkuchen was nice. So were the
people, most of which I was able to meet in person for
the first time. People, you are as strange in real life as you
are on the channel!&lt;/p&gt;
&lt;p&gt;Next morning found us at the Crowne Plaza hotel, where Björn
Schotte and the Globalpark people were still fixing problems
with Internet access just before the congress was supposed to
start. This should turn out to be a recurring theme during the
entire congress, and is definitely a point to improve next
time.&lt;/p&gt;
&lt;h2 id=&#34;phpdoc&#34;&gt;
    &lt;a href=&#34;#phpdoc&#34;&gt;
	PHPdoc
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ulf&amp;rsquo;s lecture was the first one. He presented his
documentation generator &lt;a href=&#34;http://www.PHPdoc.de&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PHPdoc&lt;/a&gt;

, which is a large PHP
script largely based on concepts borrowed from JavaDoc. Phpdoc
is able to generate bare bones documentation from many PHP
scripts without any additional information, and can utilize
special comments within the script to generate full
documentation. The output is template driven HTML, with XML
being an interim format. This allows for automated
post-processing and provides unlimited customization of the
documentation.&lt;/p&gt;
&lt;p&gt;Because PHPdoc is working without any support from the PHP
interpreter in this version, its capabilities are still
somewhat limited, but it still is far better than anything else
currently available. In my opinion, PHPdoc should become the
standard format for documentation of PEAR and PHPLIB classes,
and work should concentrate on adding parser support for
documentation generation and to improve PHPdoc. PHPdoc is bound
to become a very important tool for large scale PHP
projects.&lt;/p&gt;
&lt;h2 id=&#34;opentracker&#34;&gt;
    &lt;a href=&#34;#opentracker&#34;&gt;
	OpenTracker
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ulf was followed up by Sebastian Bergmann of the PHP
OpenTracker project. He showed how PHP can be utilized to
capture and visualize click-path information and how this
information can be useful to optimize your site layout and
navigation for usability.&lt;/p&gt;
&lt;h2 id=&#34;fulltext-search&#34;&gt;
    &lt;a href=&#34;#fulltext-search&#34;&gt;
	Fulltext Search
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Alexander Aulbach continued with a report on using MySQL and
PHP to create a fast search engine. Working for a newspaper, he
was faced with the challenge to create a searchable fulltext
index for ~170.000 newspaper articles, and found the usual
solutions based on ht://dig and udm-search to limiting for his
project. Using a very unconventional approach to the problem, he
was able to create a workable and mostly efficient fulltext
search using pure MySQL and PHP - tools which are generally
considered as not suitable for such tasks. His fascinating
solution is up for sale, or can be recreated from his slides if
you can spare a man-month or two for development.&lt;/p&gt;
&lt;h2 id=&#34;web-security&#34;&gt;
    &lt;a href=&#34;#web-security&#34;&gt;
	Web Security
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;My own keynote was supposed to be scheduled for noon, but
because of the technical problems with the internet connection
before it started late. I had to cut down on content in order to
make good for the lost time. Find my slides at
&lt;a href=&#34;https://blog.koehntopp.info/2000/08/21/web-security.html&#34;&gt;Web Security&lt;/a&gt;

.
My talk went well (I had my slides available locally, and did
not need a remote connection), and I was able to make a number of
contacts&amp;hellip;&lt;/p&gt;
&lt;p&gt;Lunch drove the organization at Crowne Plaza to the limits of
their capacity: Although three different restaurants and
locations within the hotel provided lunch for the 400 people
attending, these people dispersed very unevenly, and some had to
wait for more than 30 minutes to get something to eat.
Nonetheless, the food and the service were excellent, once you
got them.&lt;/p&gt;
&lt;h2 id=&#34;php-in-startups&#34;&gt;
    &lt;a href=&#34;#php-in-startups&#34;&gt;
	PHP in Startups
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Just after lunch, Chris Cartus had a talk about the use of
PHP in startups. His talk centered around properties and
shortcomings of PHP as an implementation language and as a
platform and contained quite a bit of critique. It was received
somewhat controversial, which certainly was his intention, but
was in part based on outdated facts—PHP is currently a rapidly
moving target, and six months ago Chris would have been right on
all counts.&lt;/p&gt;
&lt;p&gt;Basically, Chris stated that the main strengths of PHP are its
superb rapid prototyping capabilities and its very
smooth learning curve: You can take any useful web designer and
start teaching PHP bit by bit. That designer will be productive
from day one, gradually moving out of the mouse mover camp and
entering the coder league, earning his money at all stages
during this transition. This is very unlike Java, which
generally requires a hard break where one sits down and learns
about programming, design techniques, UML and the like before
being completely useful.&lt;/p&gt;
&lt;p&gt;On the other hand, there is little support for high-end web
applications and development to be found in PHP—there is no
application server, load balancing is not part of PHP and can
only be obtained using crude external means such as RR DNS and
local redirects. Also, PHP is lacking in debugging
capabilities and provides little support for large scale
development (options comparable to the &amp;quot;use strict&amp;quot; and &amp;quot;-w&amp;quot;
modes of perl). Its object model is crude and needs more
sophistication and a performance tuneup to be useful on large
scale applications.&lt;/p&gt;
&lt;p&gt;To summarize: While PHP provides a road that is wide and
easily traveled at the beginning, this road is not as far-reaching as is the Java path. Chris claimed that further
extension of PHP is necessary to cover these areas.&lt;/p&gt;
&lt;p&gt;Chris also claimed that PHP has no Java integration to speak
of and mentioned some other areas where PHP is lacking, in his
opinion. Most of these areas have been worked on during the last
six months, and the situation is improving rapidly. For example,
Johann-Peter Hartmann demonstrated PHP&amp;rsquo;s Java integration
capabilities in his (later) XSLT comparison and found it to be
easily usable, but still unstable under load.&lt;/p&gt;
&lt;h2 id=&#34;hallway-track&#34;&gt;
    &lt;a href=&#34;#hallway-track&#34;&gt;
	Hallway track
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;I missed the next three talks given by Reiner Kukulies
(Communities with PHP), Mario Klaue (Using PHP generated DHTML
to build highly responsive pages) and Matthias Boese (&amp;ldquo;Using PHP
on SAT-1: Die Fahndungsakte&amp;rdquo; - a high traffic website for a TV
series). This is exactly the scenario where PHP should not be used
according to Chris Cartus, so there &lt;em&gt;are&lt;/em&gt; successful
deployments of PHP in high load environments.&lt;/p&gt;
&lt;p&gt;Instead, I had some stimulating discussions on web
security, and on possible future extensions of PHP outside the
lecture hall. Those small tables just next to the coffee bar
turned out to be very useful, indeed. Thank you, Thies, for
providing useful input and insight and thank you, Chris Cartus,
for your thought and discussion provoking talk.&lt;/p&gt;
&lt;h2 id=&#34;extending-php&#34;&gt;
    &lt;a href=&#34;#extending-php&#34;&gt;
	Extending PHP
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The day way almost finished with Sascha Schumann&amp;rsquo;s
&amp;ldquo;Extending PHP using C&amp;rdquo; express presentation
(&amp;ldquo;Hmm, it seems that I really should have some slides. I&amp;rsquo;ll create them while commiting
the latest patches to the session management module here.&amp;rdquo;).
Sascha, you really demonstrated that rapid prototyping can be a
way of life!&lt;/p&gt;
&lt;p&gt;Sascha prepared the ground for Jens Ohlig with
&amp;ldquo;C++ integration and 3 tier development&amp;rdquo;. Jens talk was about
using &lt;code&gt;phpswig&lt;/code&gt; to generate glue code to integrate C++ classes as
PHP extensions.&lt;/p&gt;
&lt;h2 id=&#34;afterglow&#34;&gt;
    &lt;a href=&#34;#afterglow&#34;&gt;
	Afterglow
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;For me personally, the talks by Chris Cartus and Jens Ohlig
were two most interesting talks of the day - Chris because of
the interesting ideas and the background he provided, and Jens
because of the extremely useful technology demonstration.&lt;/p&gt;
&lt;p&gt;Afterglow, the time between the conference talks and the
evening programme, was filled with discussion about software
patents and Sevenval - from the number and type of questions
currently easily the most hated company within the PHP or even
the German Open Source community.&lt;/p&gt;
&lt;p&gt;The Evening program was a travel by ship along the River Rhine
on board of the MS Enterprise, a theme ship modeled after a
well-known starship of the same name. The Buffet on board was
excellent, and so was the company :-) Thies and I had our fun
with Sascha, being half as old as either of us two (but twice as
cool). Ah, and the local brew does not taste much better when
you drink it on board of a ship. Memo to self: When you travel
to Cologne, bring your own beer.&lt;/p&gt;
&lt;h1 id=&#34;day-2&#34;&gt;
    &lt;a href=&#34;#day-2&#34;&gt;
	Day 2
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;php-and-pdf&#34;&gt;
    &lt;a href=&#34;#php-and-pdf&#34;&gt;
	PHP and PDF
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The second day started out slowly, with Hartmut Holzgraefe
demonstrating PDF creation using PDFTeX and PHP. He started out
showing the shortcomings and limitations of PHP&amp;rsquo;s PDF interface,
and presented PDFTeX as an alternative way to create good-looking PDF output.
TeX source creation was excruciating with
PHP 3, but using PHP 4 and the new output buffering interface
came just in time to be helpful and greatly simplify the
process. Limitations of his technique are the use of an external
process (the PDFTeX processor) not really suited for use in
batch processing, and the load this generates at the server
machine.&lt;/p&gt;
&lt;h2 id=&#34;php-on-windows&#34;&gt;
    &lt;a href=&#34;#php-on-windows&#34;&gt;
	PHP on Windows
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Next in line was Andreas Otto, who introduced the PHP4 build
process under Windows. As I don&amp;rsquo;t do Windows, I missed most of
this talk and had a session concerning the past and future of
&lt;code&gt;de.comp.lang.php&lt;/code&gt; at
the coffee table on the outside. It seems that a transition of the
FAQ to XML format will be well received and should be done on
short notice. Also, Sascha suggested the day before that an
english translation of the FAQ would be useful, as it is, in his
opinion, far better and more comprehensive that the english
original. Sascha suggested that the english version of the FAQ
should be channeled through the PHP documentation translation
team, producing multinational versions. Both he and I still see
problems resolving the update process, as the FAQ is produced in
german language, and updates and comments may come in english
as well as in german. We probably need a collection and
integration mechanism for that. TODO: Talk to the doc team and
see what they think.&lt;/p&gt;
&lt;h2 id=&#34;php-and-ipc&#34;&gt;
    &lt;a href=&#34;#php-and-ipc&#34;&gt;
	PHP and IPC
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;I rejoined the main lecture hall just in time to see Till
Gerken finish his talk about &amp;ldquo;Interprocess communication in
PHP&amp;rdquo;. Till presented the mechanisms used to create PHPChat,
and showed how shared memory and semaphores can be used to
improve performance in such applications.&lt;/p&gt;
&lt;h2 id=&#34;php-does-xslt&#34;&gt;
    &lt;a href=&#34;#php-does-xslt&#34;&gt;
	PHP does XSLT
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Johann-Peter Hartmann (What a name, what a hairstyle! :-)
followed up with &amp;ldquo;A comparison of PHP XSLT
processors&amp;rdquo;. His talk was met with great interest, as XSLT
seems to be a hot technology. Johann showed that XSLT still is
bleeding edge, and so is PHP-Java integration. Sablotron came
out as an overall winner in speed and stability with Xalan C++
being a close second and a somewhat more complete implementation
of the standard. Me, I am using Sablotron - Go, Ginger Alliance,
Go!&lt;/p&gt;
&lt;h2 id=&#34;zend&#34;&gt;
    &lt;a href=&#34;#zend&#34;&gt;
	Zend
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Tobias Ratschiller gave most of his time to Doron Gerstel of
Zend technologies, who was stunned by the support PHP has in
Germany and who presented the future marketing and product
strategy of Zend. It seems that Zend will be rolling out a profiler
and debugger this year, and follow up with the encoder shortly.
Also, a PHP IDE is planned and scheduled for next year.&lt;/p&gt;
&lt;p&gt;The presentation was quite interesting, especially in light
of Chris Cartus talk about startup companies and venture
capitalists the day before. It was obvious that Zend, being a
startup on venture capital, needs to show some revenue fast
before entering the next round of funding. Still, Zend seems to
be lacking vision and a roadmap for the future, and the
presentation left me a bit disappointed—perhaps it was the
presentation, which was marketing driven and focusing on
benefits, instead of technology driven, as almost all other talks
on the Congress were.&lt;/p&gt;
&lt;p&gt;I would have expected Zend to have learned from their polls
and their experience that people tend to use PHP for
projects larger than it was intended to be used. It would have
been smart for them to provide a strategic roadmap which shows
their intention to meet this demand with the appropriate moves
and improvements (application server, load balancing, stronger
Java integration, revised object model, optional strong typing,
optimizer and compiler making use of this typing for faster
code). Perhaps CC and Zend talking to each would be a good
match?&lt;/p&gt;
&lt;p&gt;Also, while there is a strong community of PHP developers, at
least in Germany, it seems that Zend is only very losely tied
into these channels, at least in Germany. There clearly is an
impedance mismatch between the community and the company, and
currently Zend cannot convince the community that it fulfills an
important role for the community, at least not in Germany.&lt;/p&gt;
&lt;p&gt;This is very dangerous for both parties involved: PHP cannot
survive without a focused and directed development team,
especially not in the upper area of the market. It is
specifically this market that is of very great importance for
the acceptance of PHP as a mainstream web development tool.&lt;/p&gt;
&lt;p&gt;Also, Zend cannot survive without being able to communicate
their role to the community, and in Germany that means
presenting - technology driven - a long term strategy,
scalability, flexibility and extensibility of the product at
management level as well as at developer level.&lt;/p&gt;
&lt;p&gt;On the other hand Zend must take care not to catapult itself
out of the PHP community, which is very tightly integrated in
Germany, having a few key websites, soon to be
complemented by a new MySQL newsgroup. While these locations
cover mostly low-end PHP usage, these are the pools where PHP
know-how is being created and the regulars at these locations are the
key drivers of the German PHP scene. Zend marketing currently
does not tap these reservoirs at all—send them to the clue
train, this is a large scale loss of communication
potential.&lt;/p&gt;
&lt;h2 id=&#34;world-domination-plans&#34;&gt;
    &lt;a href=&#34;#world-domination-plans&#34;&gt;
	World Domination Plans
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Tobias followed up with a short note on PHP &amp;ldquo;world
domination&amp;rdquo;, but time was too short for him to say
much.&lt;/p&gt;
&lt;h2 id=&#34;doing-forms&#34;&gt;
    &lt;a href=&#34;#doing-forms&#34;&gt;
	Doing Forms
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Next in line was Andre Christ presenting the Abstract
Presentation Layer, a high-level C++ extension of PHP, allowing
easy form creation and validation automation. From the questions
after the presentation and the afterglow talk, this was easily
the most heavily underrated presentation on the congress, as
Andre was presenting an unfinished, but very clean library
design, which has a few, but obvious and easily corrected
shortcomings and much potential. The APL is a LGPL library, and
is a project you should watch, unless you decide to get
involved. Also, keep an eye on twisd AG; these people are
good.&lt;/p&gt;
&lt;h2 id=&#34;more-world-domination&#34;&gt;
    &lt;a href=&#34;#more-world-domination&#34;&gt;
	More World Domination
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Unfortunately for the followup speakers, Andre&amp;rsquo;s talk created
the need for me to talk, again at the coffee tables, and so I
missed most of the finish - except for Björn Schotte&amp;rsquo;s legendary
&amp;ldquo;Björn Schotte World Domination&amp;rdquo; talk, which
transported hints at his site, &lt;a href=&#34;http://www.php-center.de/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PHP Center&lt;/a&gt;


as well as his
QuickCMS product with the subtle gentleness of a Ferenghi
sensing the opportunity to make some bars of gold pressed
Latinum. :-)&lt;/p&gt;
&lt;p&gt;All in all two days well spent. The congress served its
purpose very well, being an opportunity to bind some faces to
recurring names, to learn about the state of the art in the PHP
community, and to find out about the future direction PHP and
Zend development must take.&lt;/p&gt;
&lt;p&gt;Thank you, Björn, and thank you people at Globalpark, for
organizing the congress and see you next year.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Webserver verstehen und tunen</title>
      <link>https://blog.koehntopp.info/1999/10/15/webserver-verstehen-und-tunen.html</link>
      <pubDate>Fri, 15 Oct 1999 09:00:00 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/1999/10/15/webserver-verstehen-und-tunen.html</guid>
      <description>&lt;p&gt;&lt;em&gt;Diesen Artikel habe ich als Schulungsunterlage für
eine PHP-Fortgeschrittenenschulung bei
Netcologne geschrieben&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;PHP-Programme laufen auf dem Webserver. Sie können - angestoßen
durch einen externen Benutzer mit einem Browser - Dateien auf
dem Server lesen, schreiben oder löschen. Für einen
PHP-Programmierer ist es wichtig zu wissen, mit welchen Rechten
seine Programme ausgeführt werden und welche Einflüsse die
Ausführung seines Programms bestimmen. Nur so ist es ihm
möglich, sein System gegen böswillige Manipulation
abzusichern und seine Leistung zu optimieren.&lt;/p&gt;
&lt;h2 id=&#34;der-aufbau-des-apache-webservers&#34;&gt;
    &lt;a href=&#34;#der-aufbau-des-apache-webservers&#34;&gt;
	Der Aufbau des Apache-Webservers
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Der Apache-Webserver ist auf eine Weise konstruiert, die
es leicht macht, den Serverprozeß zu erweitern, und die ihn
besonders wenig anfällig gegen Betriebsstörungen gleich welcher
Art macht.&lt;/p&gt;
&lt;p&gt;Der Server besteht aus einem Managerprozeß, der eine Reihe von
Bearbeiterprozessen startet. Diese Prozesse führen die eigentliche
Request-Abarbeitung durch. Eingehende Requests werden vom
Manager registriert und an einen freien Bearbeiter
weitergereicht. Wenn der Bearbeiter mit der Ausführung des
Requests fertig ist, beendet er sich nicht, sondern meldet
sich beim Manager zurück, und dieser teilt dem Bearbeiter den
nächsten Request zu.&lt;/p&gt;
&lt;p&gt;Ein Bearbeitungsprozeß ist oftmals nicht in der Lage, einen
Prozessor voll auszulasten: Er muss auf das Eintreffen von Daten
von der Festplatte warten, oder er muss auf den Client auf der
anderen Seite des Netzes warten und sich mit der Abarbeitung des
Requests nach der Übertragungsgeschwindigkeit des Netzes
richten. Damit während dieser Zeit andere Requests bearbeitet
werden können, ist es sinnvoll, mehrere Bearbeiterprozesse zu
haben.&lt;/p&gt;
&lt;p&gt;Wie viele Bearbeiterprozesse sinnvoll sind, hängt von einer
ganzen Reihe von Parametern ab. Zunächst einmal wäre es
sicherlich schön, wenn immer genau so viele Bearbeiter vorhanden
sind, wie gleichzeitige Requests bei der Maschine ankommen. Nun
kann ein Rechner aber nicht beliebig viele Prozesse starten, und
speziell im Fall von Apache ist es so, daß der Webserver in
genau dem Moment sehr viel langsamer wird, in dem die Maschine
anfangen muss, Webserverprozesse mangels RAM in den Swapbereich
auszulagern. Das ist ein sehr unangenehmer Moment, denn bei
gleichbleibender Anzahl von Requests pro Sekunde (&amp;ldquo;Last bleibt
gleich&amp;rdquo;) dauert die Abarbeitung eines einzelnen Requests nun
viel länger (&amp;ldquo;Durchsatz sinkt&amp;rdquo;), und damit steigt die Anzahl der
ausstehenden Requests (&amp;ldquo;Ressourcenverbrauch steigt&amp;rdquo;). Das
Gesamtsystem versucht darauf mit einer weiteren Erhöhung der
Serverprozeßzahl zu antworten und treibt die Maschine nur noch
weiter in den Swap - die Requests werden noch langsamer
bearbeitet und als Antwort werden nur um so mehr
Serverprozesse erzeugt.&lt;/p&gt;
&lt;p&gt;In dieser Situation bricht die Systemleistung zusammen, oder das
System kommt im Extremfall vollständig zum Halt. Mithilfe des
Parameters &amp;ldquo;MaxClients&amp;rdquo; kann man in der &lt;code&gt;httpd.conf&lt;/code&gt; die Anzahl
der Serverprozesse nach oben begrenzen und so verhindern, daß
die Maschine in diesen fatalen Zustand gerät - die Zahl muss so
gewählt werden, daß die Maschine sicher nicht ins Swappen gerät.
Als hilfreich hat sich hier die Analyse der Zahlen in
&lt;code&gt;/proc/&amp;lt;pid&amp;gt;/statm&lt;/code&gt; erwiesen, wobei als &lt;pid&gt;&amp;gt; die Prozeßnummern
der httpd-Prozesse einzusetzen sind:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nv&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;grep -l httpd /proc/*/cmdline&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;nv&#34;&gt;$server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; cat &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;dirname &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;/statm&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1331&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;674&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;654&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;119&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;555&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;306&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;96&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;96&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;91&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1247&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;401&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;369&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;321&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;101&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1368&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;711&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;678&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;134&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;577&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;306&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1364&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;707&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;677&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;133&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;574&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;305&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1364&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;707&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;677&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;133&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;574&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;305&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1365&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;708&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;677&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;133&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;575&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;306&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;86&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;86&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;71&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;82&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die ausgegebenen Zahlen sind in
&lt;code&gt;/usr/src/linux/Documentation/proc.txt&lt;/code&gt; genauer erläutert. Sie
bedeuten von links nach rechts:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;size       total program size
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;resident   size of in memory portions
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;shared     number of the pages that are shared
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;trs        number of pages that are &amp;#39;code&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;drs        number of pages of data/stack
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;lrs        number of pages of library
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;dt         number of dirty pages
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Der Gesamtspeicherverbrauch eines weiteren Serverprozesses
ergibt sich aus seinen Resident (im RAM befindlichen) Unshared
Pages, die Page zu 4 KB in Intel-Rechnern. Also ist die
Differenz zwischen der zweiten und der dritten Zahl einer jeden
Zeile zu bilden und mit vier zu multiplizieren, um den
zusätzlichen RAM-Verbrauch eines einzelnen httpd in KB zu
ermitteln. Überschlagsmäßig können in der hier gezeigten
Konfiguration etwa 100-150 KB angesetzt werden, aber diese Zahl
kann je nach Webserver und Art der Last stark variieren und
bedarf in jedem Fall eines Tunings im Wirkbetrieb.&lt;/p&gt;
&lt;p&gt;Bei einem geeigneten Wert für &lt;code&gt;MaxClients&lt;/code&gt; erzielt der
Apache-Webserver bei zunehmender Last (&amp;ldquo;ramp-up&amp;rdquo;) linear mehr
Durchsatz, bis der Sättigungspunkt erreicht ist. Danach bleibt
die Leistung auf einem stabilen Plateau, wenn nicht ein anderer
leistungsbegrenzender Faktor wirksam wird (Netzbandbreite,
DNS-Lookups, Plattenbandbreite, CPU-Leistung).&lt;/p&gt;
&lt;p&gt;Bei nachlassender Last ist es natürlich nicht notwendig, die
ganzen Serverprozesse im Speicher herumstehen zu haben. Der
Managerprozeß kontrolliert laufend, wie viele unbeschäftigte
Bearbeiter er zur Verfügung hat und wenn dies mehr als
&lt;code&gt;MaxSpareServers&lt;/code&gt; viele sind, wird er beginnen, die Anzahl der
Serverprozesse zu verringern. Bei steigender Last wird der
Manager diese Zahl dann wieder steigern. Aber das Starten von
neuen Serverprozessen dauert einige Zeit, und daher ist es gut,
eine gewisse Anzahl von unbeschäftigten Bearbeiterprozessen &amp;ldquo;auf
Vorrat&amp;rdquo; zur Hand zu haben, damit man Lastspitzen ausreiten kann.
Der Parameter &lt;code&gt;MinSpareServers&lt;/code&gt; legt fest, wie groß der Vorrat
ist, den der Manager anlegt. Es ist nicht sinnvoll,
&lt;code&gt;MinSpareServers&lt;/code&gt; größer als &lt;code&gt;MaxSpareServers&lt;/code&gt; zu setzen: Beide
Werte können im Extremfall gleich groß sein, aber in einer
sinnvollen Konfiguration wird &lt;code&gt;MaxSpareServers&lt;/code&gt; immer größer als
&lt;code&gt;MinSpareServers&lt;/code&gt; sein.&lt;/p&gt;
&lt;p&gt;Je stärker und je schneller die Last auf einem Webserver
springt, umso größer sollte man den Abstand zwischen beiden
Werten wählen. Je langsamer die Maschine beim Starten von neuen
Serverprozessen ist und je ruckartiger die Last auf dem Server
ansteigen kann, umso höher muss man &lt;code&gt;MinSpareServers&lt;/code&gt; wählen,
damit im Falle einer Spitzenlast schon ausreichend viele Server
vorhanden sind. Mit dem Parameter &lt;code&gt;StartServers&lt;/code&gt; legt man fest,
wie viele Serverprozesse schon beim Hochfahren des Managers mit
erzeugt werden.&lt;/p&gt;
&lt;p&gt;Für eine dedizierte Maschine mit einem Speicherverbrauch von 200
KB pro Serverprozeß und einem freien RAM von 100 MB nach dem
Start aller anderen Systemdienste kann man einen &lt;code&gt;MaxClients&lt;/code&gt;-Wert
von weniger als 500 ansetzen, wenn nur httpd-Prozesse laufen
(bei Ausführung von CGI-Programmen ist dies nicht der Fall -
hier muss man Speicher für die CGI-Programme reservieren!). Wenn
es sich um eine dedizierte Maschine handelt, die nur diesen
einen Webserver ausführen soll und auf der keine andere
Anwendung läuft, gibt es keinen Grund, die Anzahl der Clients zu
begrenzen: Man kann gleich beim Start alle Webserverprozesse auf
Vorrat erzeugen und hat dann unter Last die benötigte Leistung
parat. Dies ist ideal für Webserver, die bei zeitlich
abgestimmten Medienevents (&amp;ldquo;TED-Server&amp;rdquo;, &amp;ldquo;Wahl-Server&amp;rdquo;)
plötzliche Spitzenlasten wegstecken können müssen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MaxClients      450
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;StartServers    450
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MaxSpareServers 450
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MinSpareServers 450
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ein solcher Server wird etwa 400-450 parallele Requests
bearbeiten können. Ist eine Seite im Schnitt 100 KB groß und
wird eine solche Seite im Mittel mit 5 KB/sec ausgeliefert,
dauert das Ausliefern einer Seite im Mittel also 20 Sekunden.
Mithin hat man mit der gezeigten Konfiguration so Leistung für
etwa 20 Requests/sec (1200 rpm, requests per minute) -
vorausgesetzt, man begrenzt die Leistung der Maschine nicht
durch andere Faktoren (20 Requests pro Sekunde, 5 KB pro Sekunde =&amp;gt; 100 KB/sec oder knapp eine halbe S2M).&lt;/p&gt;
&lt;p&gt;Ein anderes Szenario wäre derselbe Rechner bei einem ISP, der
auf unterschiedlichen virtuellen Interfaces mit
unterschiedlichen IP-Nummern unterschiedliche Apache-Server
betreibt, die sich die Maschine teilen müssen. Alle Server
sollen möglichst wenig Ressourcen verbrauchen, wenn die Last
gering ist:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MaxClients      200 # drei Kunden teilen sich diesen Rechner
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;StartServers      5 # wenige Prozesse vorab starten
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MinSpareServers   5 # immer 5 in Reserve halten
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MaxSpareServers  10 # maximal 10 in Reserve halten
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hier können bei drei unterschiedlichen Apache-Instanzen im
Extremfall 600 Serverprozesse auftreten (damit würde man die
Maschine also leicht im Überlastbereich betreiben), aber jede
Apache-Konfiguration versucht ihren Serverpool immer nur so groß
wie unbedingt nötig zu halten. Solange alle drei immer mit ca.
100-150 Servern rumdröhnen, herrscht eine friedliche Koexistenz.&lt;/p&gt;
&lt;h2 id=&#34;lebensdauer-von-serverprozessen&#34;&gt;
    &lt;a href=&#34;#lebensdauer-von-serverprozessen&#34;&gt;
	Lebensdauer von Serverprozessen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Apache ist ein sehr gutmütiger Webserver: Da er nicht
multithreaded ist, ist er sehr leicht durch selbstgeschriebene
Module zu erweitern, ohne daß diese Module aufwendig reentrant
gemacht werden müßten oder anders aufwendig anzupassen sind. Die
Server-API unterstützt die Integration von Modulen durch die
Bereitstellung von Schnittstellen zu Speicherverwaltung, zur
Request-Verarbeitung und zur Response-Generierung. Leider sind
nicht alle Module sauber programmiert: Manche von ihnen erzeugen
Core Dumps, andere stürzen zwar nicht ab, aber sie belegen mehr
und mehr Speicher und lassen den Serverprozeß so ins Grenzenlose
wachsen.&lt;/p&gt;
&lt;p&gt;Apache ist so konstruiert, daß er mit dieser Situation fertig
werden kann, ohne den Betrieb des gesamten Serversystems zu
gefährden: Ein abstürzender Bearbeiterprozeß wird durch den
Manager registriert, und der Manager erzeugt ggf. einen neuen
Bearbeiterprozeß, wenn die Lastsituation es erfordert.
Ein Bearbeiter kann durch das Setzen des Parameters
&lt;code&gt;MaxRequestsPerChild&lt;/code&gt; auf einen von 0 verschiedenen Wert so
konfiguriert werden, daß er maximal so viele Requests wie
angegeben bearbeitet und sich dann beendet. Durch Speicherlecks
verlorengegangener Speicher wird dann wieder freigegeben - der
Manager wird den beendeten Bearbeiterprozeß wie bei einem
Absturz ersetzen, falls notwendig.&lt;/p&gt;
&lt;p&gt;Das Regenerieren von verlorengegangenen Serverprozessen kostet
zwar Systemleistung, weil der Kernel &lt;code&gt;fork()&lt;/code&gt;-Systemaufrufe
durchführen muss, aber der Webserver bleibt immerhin verfügbar.
Bei einem Single-Process-Server mit Multithreading wäre eine
solche Fehlerresistenz nicht machbar.&lt;/p&gt;
&lt;p&gt;Der Managerprozeß und alle seine Bearbeiterprozesse laufen unter
der in der Hauptkonfiguration mit den Direktiven &amp;ldquo;User&amp;rdquo; und
&amp;ldquo;Group&amp;rdquo; angegebenen UID- und GID-Werten. Man kann dies auch in
der Prozeßliste sehen, indem man sich den Eigentümer der
httpd-Prozesse ansieht:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;valiant:/proc/2544 &lt;span class=&#34;c1&#34;&gt;# ls -ld .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dr-xr-xr-x   &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; wwwrun   nogroup         &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; Jun  &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; 21:55 .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;valiant:/proc/2544 &lt;span class=&#34;c1&#34;&gt;# cat cmdline | xargs -0 echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/usr/local/apache/bin/httpd -f /usr/local/apache/conf/httpd.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Es ist wichtig zu verstehen, daß diese Werte für den gesamten
Server, also für alle von ihm verwalteten virtuellen Server,
gelten. Das heißt: Alle Zugriffe durch den Webserver auf Dateien
werden unter dieser UID und GID durchgeführt, auch dann, wenn in
den einzelnen &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt;-Abschnitten andere User- und
Group-Werte angegeben sind. Diese anderen Identitäten werden
ausschließlich für die Ausführung von CGI-Programmen durch das
suexec-Utility angenommen.&lt;/p&gt;
&lt;p&gt;Hat man seinen Webserver mit &lt;code&gt;mod_php&lt;/code&gt; oder &lt;code&gt;mod_perl&lt;/code&gt; konfiguriert,
dann werden auch alle Dateizugriffe dieser beiden Module unter
der einen zentralen Identität des Servers ausgeführt werden, da
die Module im Kontext des Serverprozesses ablaufen. Das ist eine
Tatsache, die man unbedingt im Hinterkopf behalten sollte, wenn man
Webserver aufsetzt, auf denen mehrere unterschiedliche Kunden
eigene Scripte ausführen können. Da alle diese Scripte immer
unter derselben UID/GID ausgeführt werden, gibt es nichts, das
verhindern könnte, daß ein Kunde auf die Dateien eines anderen
Kunden zugreift. Ein solches Konzept ist für das Webhosting
untauglich.&lt;/p&gt;
&lt;p&gt;CGI-Programme werden durch den Apache nicht direkt, sondern
immer über das &lt;code&gt;suexec&lt;/code&gt;-Utility gestartet. Der Apache erzeugt dazu
mittels &lt;code&gt;fork()&lt;/code&gt; eine Kopie von sich selbst, die sich selbst dann
durch das suexec-Programm ersetzt. Dieses Programm ist mit
Systemverwalterrechten ausgestattet (ein SUID-root-Programm) und
stellt danach die UID/GID des neuen Prozesses auf die User- und
Group-Angaben des zuständigen virtuellen Hosts um. Außerdem
setzt es noch eine Reihe von Ressourcelimits, bereinigt das
Prozeßenvironment und führt eine Reihe von anderen
Aufräumarbeiten durch. Erst dann ersetzt es sich selbst durch
das auszuführende CGI-Script. Dieses Script läuft dann mit der
eingestellten Identität, die von der Identität des Webservers
selbst verschieden sein kann, und beendet sich anschließend.&lt;/p&gt;
&lt;p&gt;Da die Ausführung von CGI-Programmen die Erzeugung eines neuen
Prozesses und das Laden von mindestens zwei Programmen (suexec
und den Scriptinterpreter) bedingt, werden CGI-Programme sehr
viel langsamer ausgeführt als Modulprogramme. Zu den genannten
Kosten kommen noch Aufwände für ein rundes Dutzend Systemaufrufe
innerhalb von suexec hinzu, die aber gegenüber den
fork()/exec()-Kosten verschwindend gering sein dürften.&lt;/p&gt;
&lt;p&gt;Man hat als ISP mit einem VirtualHost-Setup also die Wahl
zwischen einem schnellen, unsicheren Setup und einer deutlich
langsameren, aber sichereren Variante.&lt;/p&gt;
&lt;p&gt;Es existiert übrigens eine Variante des suexec-Programmes für
den Apache, die wesentlich weniger restriktiv bei der Prüfung
der User- und Gruppenrechte an der auszuführenden Datei und
dem enthaltenden Verzeichnis ist, die dafür aber eine
&lt;code&gt;chroot()&lt;/code&gt;-Umgebung aufsetzt, in der dieses Programm ablaufen
kann. Dadurch, daß das Programm in der &lt;code&gt;chroot()&lt;/code&gt;-Umgebung
eingesperrt ist, wird ein zusätzlicher Grad an Sicherheit
erreicht.&lt;/p&gt;
&lt;h2 id=&#34;aufbau-des-mysql-datenbankservers-und-interaktion-mit-php&#34;&gt;
    &lt;a href=&#34;#aufbau-des-mysql-datenbankservers-und-interaktion-mit-php&#34;&gt;
	Aufbau des MySQL-Datenbankservers und Interaktion mit PHP
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Viele PHP-Programme verwenden einen MySQL-Datenbankserver als
Backend zur Speicherung und Auswertung von Daten. Als Datenbank
für Webserver ist MySQL besonders geeignet, da MySQL Connections
vom PHP-Interpreter zum Datenbankserver sehr schnell errichten
und wieder trennen kann und da MySQL im Gegensatz zu &amp;ldquo;echten&amp;rdquo;
Datenbanken auf saubere Verwaltung von Transaktionen verzichtet
und daher verschiedene Operationen sehr viel schneller abwickeln
kann als vollständige SQL-Datenbanken. Für Webanwendungen ist
dies ideal, da diese in ihrer Mehrzahl eher geringe Ansprüche an
die Transaktionsfähigkeit der Datenbank stellen, dafür aber sehr
viele parallele Sessions erzeugen können.&lt;/p&gt;
&lt;p&gt;Um abschätzen zu können, in welche Situation man die Datenbank
bringt, wenn man sie als Backend an einem Webserver betreibt,
muss man wieder die beiden Fälle CGI PHP und mod_php
unterscheiden.&lt;/p&gt;
&lt;p&gt;In CGI PHP wird auf einer Webseite irgendwann einmal ein
&lt;code&gt;mysql_connect()&lt;/code&gt; oder &lt;code&gt;mysql_pconnect()&lt;/code&gt; ausgeführt. PHP stellt in
diesem Moment eine Verbindung zu Datenbank her und arbeitet dann
mit dieser Verbindung. Spätestens am Ende der Seite endet das
PHP-Programm und mit ihm auch der PHP-Interpreterprozeß selbst.&lt;/p&gt;
&lt;p&gt;Dadurch werden alle Filehandles dieses Prozesses geschlossen,
also auch die Datenbankverbindung. CGI PHP wird also in
schneller Folge Datenbankverbindungen öffnen und schließen, und
es wird maximal so viele Datenbankverbindungen geben, wie es
parallele PHP-Interpreter geben kann, nämlich &lt;code&gt;MaxClients&lt;/code&gt; viele.
Man muss den Datenbankserver vom RAM und vom Serverprozeß
her so konfigurieren, daß er mit einer solchen Anzahl von
parallelen Sessions fertig werden kann!&lt;/p&gt;
&lt;p&gt;Wenn in mod_php mit &lt;code&gt;mysql_connect()&lt;/code&gt; gearbeitet wird, verhält es
sich exakt so wie CGI PHP: Am Ende der Webseite wird die
Datenbankverbindung geschlossen. Anders bei &lt;code&gt;mysql_pconnect()&lt;/code&gt;: Da
der Interpreter als Modul Bestandteil des Bearbeiterprozesses
des Webservers ist, kann dieser die Verbindung auch nach dem
Ende der Webseite offen halten. Fordert später eine andere
Webseite eine Verbindung mit denselben Host/User/Paßwort-Daten
an, kann der Bearbeiterprozeß diese existierende Verbindung
anbieten, anstatt erneut eine solche Verbindung eröffnen zu
müssen. Bei &lt;code&gt;mysql_pconnect()&lt;/code&gt; hat dies wegen der Geschwindigkeit
von MySQL nur vergleichsweise geringe Auswirkungen; verwendet
man hingegen Oracle, sind mod_php und &lt;code&gt;ora_plogon()&lt;/code&gt; absolut
essenziell, wenn man Performance braucht.&lt;/p&gt;
&lt;p&gt;Jeder Bearbeiterprozeß muss für sich alleine einen Connect zum
Datenbankserver offen halten, da solche Connects nicht zwischen
unterschiedlichen Prozessen austauschbar sind. Ein einzelner
Bearbeiterprozeß hält jedoch unter Umständen mehrere
Datenbankconnects mit unterschiedlichen
User/Paßwort-Kombinationen offen, wenn dies in der Konfiguration
so vorkommt. Man muss daher im Extremfall auf dem Datenbankserver
mit &lt;code&gt;MaxClients&lt;/code&gt; mal &amp;ldquo;Anzahl der vorkommenden
User/Paßwort-Kombinationen&amp;rdquo; vielen parallelen Connects
klarkommen. Es ist klar, daß sich dies schlecht skaliert.&lt;/p&gt;
&lt;p&gt;PHP geht bei der Verwaltung von MySQL-Datenbankverbindungen
übrigens von der falschen Annahme aus, daß eine
Datenbankverbindung zustandslos ist und daher gefahrlos
wiederverwendet werden könne, wenn ein zweiter Connect mit
derselben Username/Paßwort/Hostname-Kombination gemacht wird.
Man kann dies beobachten, indem man das folgende Stück Code
ausführen läßt:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;kk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;land&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:~/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Source&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;./&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$link&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mysql_connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kk&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$link&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$link2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mysql_connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kk&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$link2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Obwohl hier zwei verschiedene MySQL-Datenbankverbindungen
geöffnet werden sollen, wird in beiden Fällen dieselbe Link-ID
zurückgeliefert. Es handelt sich also in beiden Fällen um
dieselbe Datenbankverbindung. Dies wird in dem Moment zum
Problem, wo der Zustand der Datenbank, der per Link-ID verwaltet
wird, sich ändert. In MySQL gehört zu diesem Zustand der Name
der aktuellen logischen Database, mit der gearbeitet wird. Wird
diese Database mittels &amp;ldquo;use &lt;databasename&gt;&amp;rdquo; oder mit Hilfe von
&lt;code&gt;mysq_select_db()&lt;/code&gt; verändert, wirkt sich die Änderung auf die
beiden vermeintlich unabhängigen Datenbankverbindungen aus.
Abhilfe schafft hier nur, entweder nur mit einer einzigen
Datenbank zu arbeiten oder mit Hilfe von mehreren
unterschiedlichen Benutzernamen unterschiedliche
Datenbankverbindungen zu erzwingen.&lt;/p&gt;
&lt;p&gt;Ein ähnliches, noch viel gefährlicheres Problem erleidet man mit
Oracle, denn dort gehört die derzeit aktive Transaktion zum
Zustand der Datenbankverbindung - ein &lt;code&gt;COMMIT&lt;/code&gt; oder &lt;code&gt;ROLLBACK&lt;/code&gt; wirkt
sich hier auf beide vermeintlich unabhängigen Verbindungen aus.&lt;/p&gt;
&lt;p&gt;Der Datenbankserver erlaubt mit einer Ausnahme keine Interaktion
eines Anwenders mit dem Dateisystem. Alle Änderungen sind also
ausschließlich auf Datensätze innerhalb der Datenbank
beschränkt. Die Ausnahme ist das Laden von Daten in die
Datenbank mit &lt;code&gt;LOAD DATA INFILE&lt;/code&gt;, das die Übernahme von
beliebigen Daten mit zeilenweiser Satzstruktur in
Datenbanktabellen erlaubt. Um diese Operation durchführen zu
können, benötigt der aktuelle Benutzer in MySQL &lt;code&gt;file_priv = &#39;y&#39;&lt;/code&gt; für seinen Benutzereintrag in der Tabelle &lt;code&gt;mysql.user&lt;/code&gt;. Das
Recht kann nicht datenbankbezogen, sondern nur benutzerbezogen
vergeben werden.&lt;/p&gt;
&lt;p&gt;Neuere Versionen von MySQL erlauben statt dessen &lt;code&gt;LOAD DATA INFILE LOCAL&lt;/code&gt;, bei denen der Lesezugriff nicht durch den
Datenbankserver und mit den Rechten des Datenbankservers
erfolgt, sondern stattdessen durch den Client (PHP) und mit den
Rechten des Clients. Dies ist zwar langsamer, aber sicherer und
benötigt keine besonderen Privilegien. Es ist empfehlenswert,
immer &lt;code&gt;LOAD DATA INFILE LOCAL&lt;/code&gt; zu verwenden. Beim Load sehr großer
Tabellen kann es jedoch notwendig werden, die CPU-Zeitbegrenzung
des PHP-Interpreters hochzusetzen.&lt;/p&gt;
&lt;p&gt;Im Übrigen ist zu beachten, daß es der PHP-Interpreter ist, der
sich an den Datenbankserver connected, und nicht der Browser des
Anwenders. Die MySQL-Ports können daher an der Firewall
problemlos abgedichtet werden, um direkte Zugriffe eines
Anwenders an PHP vorbei auf den Datenbankserver zu verhindern:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                    ||
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                    ||&amp;lt;--- connect --- mysql-Client
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                    ||     Port 2042
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                    ||
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   MySQL  &amp;lt;--- connect --- PHP &amp;lt;--- || --- connect --- Browser
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;               Port 2042    &amp;amp;       ||     Port 80
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                          httpd     ||
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                 Firewall
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                 läßt nur
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                 Port 80
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                 durch
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;grenzen-von-vertrauen&#34;&gt;
    &lt;a href=&#34;#grenzen-von-vertrauen&#34;&gt;
	Grenzen von Vertrauen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Firewall definiert in diesem System eine Grenze (&amp;ldquo;Trust
Boundary&amp;rdquo;) zwischen dem Internet mit potenziell gefährlichen
Daten und dem Intranet, in dem vertrauenswürdige Anwendungen
vertrauenswürdige Informationen halten. Daten kreuzen diese
Grenze in beide Richtungen, und es ist dringend erforderlich,
diesen Übergängen besondere Aufmerksamkeit zu widmen.&lt;/p&gt;
&lt;h3 id=&#34;übergänge-von-innen-nach-außen&#34;&gt;
    &lt;a href=&#34;#%c3%bcberg%c3%a4nge-von-innen-nach-au%c3%9fen&#34;&gt;
	Übergänge von innen nach außen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Übergänge von drinnen nach draußen sind vergleichsweise einfach
abzuhandeln, da es sich um Übergänge aus einem Bereich mit hohem
Vertrauen in einen Bereich mit weniger hohem Vertrauen handelt.
Besondere Maßnahmen muss man hier genau dann ergreifen, wenn man
für die herausgegebenen Daten etwas garantieren möchte: Etwa daß
sie beim Empfänger unverfälscht oder gar nicht ankommen oder daß
außer dem Empfänger niemand Kenntnis von den Daten bekommen kann
oder daß der Empfänger sicher sein kann, daß er tatsächlich mit
dem Webserver und nicht mit einem Angreifer redet, der sich als
der Webserver ausgibt.&lt;/p&gt;
&lt;p&gt;In allen diesen Fällen ist der Einsatz von SSL auf dem Server
empfehlenswert. Eine SSL-Verbindung ist wie ein gepanzerter
Tunnel zwischen dem Webserverprozeß auf dem Server und dem
Browserprozeß beim Abrufer. Er kann durch Dritte nicht
eingesehen werden, und die Daten, die darin fließen, können durch
Dritte nicht verfälscht werden. Durch ein Server-Zertifikat kann
der Abrufer außerdem sicher sein, daß das andere Ende des
Tunnels wirklich beim Webserver liegt und nicht bei jemand anderen.&lt;/p&gt;
&lt;p&gt;Zwar ist eine Anwendung leicht auf SSL umzustellen (es muss
nämlich bis auf die verwendeten URLs nichts angepasst werden),
aber die Kosten für den Einsatz von SSL sind dennoch recht hoch.
SSL setzt auf der TCP/IP-Ebene an; es schiebt sich quasi als
Schutzschicht zwischen die Schichten 4 und 5 des
OSI-Protokollstacks.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+- Anwendungsprogramm----+   +- Anwendungsprogramm----+---+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Anwendungsschicht      |   | Anwendungsschicht      |SSL|
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+API|
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Präsentationsschicht   |   | Präsentationsschicht   |   |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+   |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Sitzungschicht         |   | Sitzungschicht         |   |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+   |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                             | SSL-Verschlüsselung        |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                             +----------------------------+  Userland
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;=====================================================================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                                             Kernel
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+- Betriebssystem -------+   +- Betriebssystem -------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Transportschicht (TCP) |   | Transportschicht (TCP) |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Netzwerkschicht (IP)   |   | Netzwerkschicht (IP)   |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;+- Gerätetreiber --------+   +- Gerätetreiber --------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Verbindungsschicht     |   | Verbindungsschicht     |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Physikalische Schicht  |   | Physikalische Schicht  |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dies bedeutet, daß bei dem Abruf einer Webseite per SSL zuerst
die TCP/IP-Netzwerkverbindung, dann die SSL-Zertifikate
ausgetauscht werden und danach erst die HTTP-Requests übertragen
werden. Da beim HTTP-Request mit dem Host-Header festgelegt
wird, welchen virtuellen Webserver die Anwendung sprechen will,
aber zuvor schon die SSL-Zertifikate ausgetauscht werden, ist es
nicht möglich, verschiedene SSL-Server mit derselben IP-Nummer
zu betreiben. Stattdessen müssen SSL-Server auf IP-basierte
virtuelle Hosts aufgesetzt werden, und jeder SSL-Server
verbraucht eine IP-Nummer.&lt;/p&gt;
&lt;p&gt;Dazu kommt, daß anders als bei unverschlüsseltem HTTP eine
SSL-Verbindung nicht mit HTTP/1.1 Keepalive offen gehalten
werden kann. Anderenfalls könnte man nämlich recht leicht einen
Angriff mit bekannten Klartexten gegen den Server fahren: Würde
ein SSL-Server eine Verbindung mit Keepalive offen halten,
würden nach Austausch der Zertifikate Session-Keys ausgetauscht
werden. Mit diesen Session-Keys verschlüsselte Daten würden dann
über die SSL-Verbindung ausgetauscht werden. Wird die Verbindung
für mehr als einen Request benutzt, sind die Chancen gut, daß
geheime Daten (etwa die Kreditkartennummer) und bekannte Daten
(etwa ein Logo-GIF) über dieselbe Verbindung mit demselben
Session-Key verschlüsselt übertragen werden. Ist dies der Fall,
kann man mit Hilfe der bekannten Daten nach dem verwendeten
Session-Key suchen und dann die unbekannten Daten entschlüsseln.&lt;/p&gt;
&lt;p&gt;Dadurch, daß SSL-Verbindungen die Vorteile von HTTP/1.1
Keepalives nicht nutzen können, müssen sie für jede einzelne
Komponente einer Webseite eine neue Verbindung aufbauen. Diese
einzelnen Verbindungen sind nicht nur ständig durch den
TCP-Slow-Start gebremst, sondern müssen ebenfalls ständig neu
Verschlüsselungsverfahren und Session-Keys aushandeln, was
zusätzliche Datenaustausche zwischen den beiden Partnern
notwendig macht - jeder dieser Datenaustausche dauert jedoch
eine Umlaufzeit (die Zeit, die von Ping als RTT ausgegeben
wird). Es ist also sehr viel damit geholfen, SSL-Seiten so
aufzubauen, daß sie aus möglichst wenigen Komponenten
zusammengesetzt sind, also wenige Bilder und Plugins enthalten,
die getrennt nachgeladen werden müssen. Über diesen
Verzögerungswerten kann man die zusätzliche Belastung der CPU
durch Verschlüsselung und Kompression beinahe vernachlässigen.&lt;/p&gt;
&lt;p&gt;Weil SSL-Verbindungen gleich oberhalb der TCP-Ebene
verschlüsseln, sind nicht nur die übertragenen Daten
verschlüsselt, sondern auch alle HTTP-Header. Ein Angreifer kann
also ebenfalls nicht erkennen, welche Seiten abgerufen werden
und welcher Art die zurückgelieferten Daten sind. Dies hat
Auswirkungen auf Proxy-Server, auf den Jugendschutz, falls
dieser auf filternde Proxy-Server zurückgreift, und auf den
Virenschutz, falls dieser auf einen zentralen Scanner auf einem
Proxy zurückgreift: Selbst wenn man mit jedem Request dieselben
Daten abriefe und nicht über Zertifikate nachdächte, würden
wegen des wechselnden Session-Keys die abgerufenen Daten bei
jedem Request anders aussehen, und der Proxy hätte, falls er
Filterfunktionen wahrnehmen sollte, keine Informationen über die
tatsächliche Natur der abgerufenen Daten. SSL-Verbindungen
machen also zentrale Scanmechanismen unbrauchbar.
Sie sind mit Absicht so designed worden.&lt;/p&gt;
&lt;h2 id=&#34;übergänge-von-außen-nach-innen-und-die-notwendigkeit-von-sessions&#34;&gt;
    &lt;a href=&#34;#%c3%bcberg%c3%a4nge-von-au%c3%9fen-nach-innen-und-die-notwendigkeit-von-sessions&#34;&gt;
	Übergänge von außen nach innen und die Notwendigkeit von Sessions
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Werden Daten von außen nach innen in die Zone höheren Vertrauens
importiert, muss mit noch mehr Aufmerksamkeit gearbeitet werden,
denn die importierten Daten können prinzipiell bösartig sein und
müssen so schnell und so gründlich wie möglich dekontaminiert
werden.&lt;/p&gt;
&lt;p&gt;Die Anwendung läuft bei Webprogrammen zum Teil auf dem Browser
des Anwenders, und dieser liegt außerhalb der Vertrauensgrenze
unseres Systems. Man kann nicht davon ausgehen, daß der Browser
des Anwenders bestimmten Anforderungen genügt, und man kann
daher nicht voraussetzen, daß die gelieferten Daten bestimmten
Anforderungen genügen, bevor diese Anforderungen nicht alle
einzeln abgetestet worden sind.&lt;/p&gt;
&lt;p&gt;Man kann beispielweise ein Formular an den Browser des Anwenders
schicken, und dieses Formular kann in Javascript geschriebene
Validatoren enthalten, die sicherstellen, daß in numerischen
Feldern auch nur Ziffern enthalten sind und so weiter. Man kann
nicht voraussetzen, daß der Browser des Anwenders Javascript
interpretiert, da diese Funktionalität ggf. ausgeschaltet oder
gar nicht vorhanden ist. Es ist auch denkbar, daß eine Firewall
auf dem Weg zum Abrufer jeden aktiven Content aus Seiten
herausfiltert und daß daher Javascript gar nicht beim Browser
ankommen kann. Es wäre weiterhin denkbar, daß die Anwendung zwar
ein Formular mit Javascript zum Anwender gesendet hat, dort aber
gar kein Browser läuft, sondern der Anwender stattdessen seine
Requests und die Replies manuell mit &amp;ldquo;telnet&amp;rdquo; bearbeitet. Dann
wäre der Anwender prinzipiell in der Lage, beliebig defekte
Daten einzuliefern.&lt;/p&gt;
&lt;p&gt;Man kann ebenfalls nicht davon ausgehen, daß die Daten, die der
Anwender abgesendet hat, und die Daten, die der Webserver
erhält, identisch sind. Eine Instanz auf dem Weg - ein Proxy
oder ein Angreifer - könnten diese Daten verändern oder
veraltete Daten zurücksenden.&lt;/p&gt;
&lt;p&gt;Es bleibt also nicht anderes übrig, als alle Daten beim Erhalt
und beim Eintritt in die Zone hohen Vertrauens genauestens zu
prüfen. Danach müssen diese Daten in der Zone hohen Vertrauens
verbleiben und dürfen diese nicht mehr verlassen - täten sie es,
müßten sie beim Wiedereintritt in die Zone hohen Vertrauens
erneut geprüft werden. Es ist daher keine gute Idee, Daten in
Form von &lt;INPUT TYPE=&#34;hidden&#34;&gt; über mehrere Formulare hinweg
mitzuschleppen - in einem solchen Fall würden die Daten nämlich
ständig zwischen der Zone hohen Vertrauens auf unserer Seite des
Netzes und der entfernten Anwendung hin- und herwechseln und bei
jedem neuen Request erneut aus der einen und die andere Zone
wechseln. Solch eine Anwendung ist konstruktionsbedingt nicht
sicher zu bekommen.&lt;/p&gt;
&lt;p&gt;Besser und sicherer ist es, mit einer Session-Verwaltung zu
arbeiten. In einem solchen Modell wird der Browser-Client durch
eine eindeutige Kennziffer identifiziert, und über diese
Kennziffer wird ein Datensatz innerhalb der Trust Boundary an
den Browser gebunden.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                 || Trust Boundary
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                 ||
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  +-------------+                ||    +--------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  | Server      |&amp;lt;----- Request ------ | Client |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  +-------------+       mit ID   ||    +--------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       | referenziert Datensatz mit ID
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     +-|--------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    +--|-------+|
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   +---v------+||
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   | Client-  ||+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   | Daten    |+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   +----------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Daten, die die Trust Boundary einmal passiert haben, verbleiben
nun auf der Serverseite und können durch den Client nicht mehr
direkt manipuliert werden. Der Client kann nur noch mittelbar
durch Veränderung der Session-ID versuchen, einen anderen
Datensatz mit anderen Daten zu referenzieren. Daraus folgt, daß
die Session-ID selbst keine fortlaufende Nummer oder eine andere
vorhersagbare und ratbare Zahl sein darf.&lt;/p&gt;
&lt;p&gt;In der Praxis hat es
sich bei PHP bewährt, das Konstrukt &lt;code&gt;md5(uniqid(&amp;quot;geheim&amp;quot;))&lt;/code&gt; zu
verwenden. Die Funktion &lt;code&gt;uniqid(&amp;quot;somestring&amp;quot;)&lt;/code&gt; liefert einen auf
der aktuellen Uhrzeit basierenden String, der mit dem Prefix
&amp;ldquo;somestring&amp;rdquo; anfängt. Durch die Anwendung der Hashfunktion &lt;code&gt;md5()&lt;/code&gt;
wird daraus eine 128 Bit lange (32 Hexziffern lange) Zahl, aus
der nicht auf den Ausgangsstring geschlossen werden kann. Wenn
die ungefähre Uhrzeit des Servers bekannt ist, zu dem eine
bestimmte Session gestartet ist, kann man jedoch versuchen, die
Session-ID zu erraten. Daher ist es wichtig, daß jede Anwendung
einen anderen, geheimgehaltenen Prefix-String &amp;ldquo;geheim&amp;rdquo; als Salt
für ihre Session-IDs verwendet.&lt;/p&gt;
&lt;p&gt;Um die Sessiondaten an einen Browser zu binden, muss bei jedem
Request die Session-ID vom Browser mitgeschickt werden. Am
einfachsten erreicht man dies mit Hilfes eines Session-Cookies,
der im Browser gesetzt wird. Dies hat außerdem den Vorteil, daß
die ID nicht Bestandteil der URL wird und daher auch nicht mit
gebookmarked werden kann oder gar als Bestandteil einer URL mit
abgedruckt wird.&lt;/p&gt;
&lt;p&gt;Nimmt der Browser des Anwenders jedoch keine
Cookies an, muss man sich auf eine andere Methode der Übergabe
der ID zurückziehen, bei der die Session-ID mit in die URL
eingebaut wird. Denkbar sind hier prinzipiell zwei Verfahren:
Die ID kann entweder als GET-Parameter an die URL angehängt
(&lt;code&gt;http://www.kunde.de/index.php3?Example_Session=0d0a...&lt;/code&gt;)
werden oder sie kann als Pfadkomponente mit in die URL eingebaut
werden (&lt;code&gt;http://www.kunde.de/Example_Session=0d0a../index.php3&lt;/code&gt;).
Erstere Methode hat den Vorteil, direkt einsetzbar zu sein,
letztere macht es notwendig, Name der Session und ID mit Hilfe
von mod_rewrite aus der URL herauszuholen, um den Zugriff auf
die Daten zu erlauben.&lt;/p&gt;
&lt;p&gt;Die Daten, die zu der Session gehören, müssen auf der
Servermaschine auf irgendeine Weise gespeichert werden. PHP4
verwendet zu diesem Zweck ein Verzeichnis mit einer Datei pro
Session, PHPLIB verwendet stattdessen traditionell eine
Datenbank, kann aber seit Version 7 auch mit anderen Speichermethoden
arbeiten, etwa mit einfachen Dateien, mit DBM-Datenbanken, mit
einem LDAP-Server, oder mit Shared Memory. In jedem Fall sollten
diese Speicher unter derselben administrativen Kontrolle stehen
wie der Webserver, damit keine Trust Boundary überschritten
wird.&lt;/p&gt;
&lt;h3 id=&#34;datenquellen-von-außerhalb&#34;&gt;
    &lt;a href=&#34;#datenquellen-von-au%c3%9ferhalb&#34;&gt;
	Datenquellen von außerhalb
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Nun kann eine Anwendung nur noch entweder die vorgegebene
Session-ID verwenden oder die Session-ID verwerfen. Im ersten
Fall funktioniert die Anwendung wie beabsichtigt, im zweiten
Fall wird einfach eine neue Session gestartet und initialisiert.
Beides sind definierte Zustände, die die Sicherheit des Systems
nicht gefährden können und bei denen keinesfalls Daten aus einer
Session in eine andere Session hinüberdiffundieren können.&lt;/p&gt;
&lt;p&gt;Einige Systeme zur Verwaltung von Sessions und Session-IDs
merken sich zu jeder Session auch die IP-Nummer, aus der die
Session kommt. Auf diese Weise soll verhindert werden, daß ein
Angreifer eine Session-ID ausschnüffelt und mit dieser ID dann
die Session übernimmt. In der Praxis ist dies jedoch keine gute
Idee, weil sich die IP-Nummer, mit der eine Session an einem
Browser erscheint, ändern kann. Dies ist zum Beispiel dann der
Fall, wenn der Abrufer auf den Server über ein Netz von
Proxyservern zugreift: Hier kann die vom Webserver gesehene
IP-Nummer mit jedem Zugriff wechseln, je nach der Lastverteilung
auf den Proxyservern. In dieser Situation befinden sich viele
Benutzer im WiN, bei AOL und bei T-Online. Ebenfalls wechseln
kann die IP-Nummer bei Benutzern, die per Dialup-PPP eine
IP-Nummer dynamisch zugewiesen bekommen und bei denen sich die
PPP-Verbindung kurzzeitig abgebaut hat.&lt;/p&gt;
&lt;p&gt;Sobald sichergestellt ist, daß Daten nicht zwischen Sessions
überspringen können, kann man daran gehen, die Wege zu sichern,
auf denen Daten in eine Session übernommen werden können. In PHP
gibt es prinzipiell die folgenden Wege, auf denen eine Anwendung
Daten von jenseits der Trust Boundary übernehmen kann:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;als GET-Parameter&lt;/li&gt;
&lt;li&gt;als POST-Parameter&lt;/li&gt;
&lt;li&gt;als Cookie-Data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GET- und POST-Parameter müssen bzw. können der Anwendung in
codierter Form übergeben werden. Wenn die Daten von der
Anwendung nicht ausschließlich in einer Standardform (nämlich
decodiert) verarbeitet werden, kann es dazu kommen, daß es
mehrere äquivalente Darstellungen derselben Werte gibt. Zum
Beispiel sind &amp;ldquo;hello+world&amp;rdquo;, &amp;ldquo;hello%20world&amp;rdquo; und &amp;ldquo;hello world&amp;rdquo;
drei äquivalente Darstellungen desselben Strings. Arbeitet man
mit Stringoperationen auf solchen Daten, kann es zu Anomalien
kommen, bei denen ein Suchmuster oder Substring in einem Fall
auf die Daten paßt, in einem anderen Fall jedoch nicht. Es ist
also wichtig, die Daten ggf. erst vollständig zu decodieren und
dann erst Suchmuster und Stringerkennungen auf sie anzuwenden.&lt;/p&gt;
&lt;p&gt;GET-Parameter sind Bestandteil der URL und unterliegen daher denselben
Beschränkungen wie URLs. Sie können keine Leerzeichen sowie gewisse
Sonderzeichen nicht enthalten, und ihre Länge ist begrenzt - daher überhaupt
die Notwendigkeit einer URL-Codierung und alternativer Darstellungen.&lt;/p&gt;
&lt;p&gt;POST-Parameter werden wie unten gezeigt anders übermittelt, als Bestandteil
des Body eines Requests, doch auch sie kommen codiert über die Leitung.
Cookies werden als Cookie-Headerzeilen übermittelt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kris@valiant:/usr/doc/packages/netcat &amp;gt; netcat -l -p &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt; -v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;listening on &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;any&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;connect to &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;193.102.57.3&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; from valiant.koehntopp.de &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;193.102.57.3&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1433&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;POST / HTTP/1.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Referer: http://valiant:8080/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Connection: Keep-Alive
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-Agent: Mozilla/4.61 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;en&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;X11&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; U&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; Linux 2.2.10 i586&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: valiant:8080
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;image/png, */*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Encoding: gzip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Language: German, de, en
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Charset: iso-8859-1,*,utf-8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-type: application/x-www-form-urlencoded
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-length: &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;probe&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;lala&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;amp&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;doit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;los
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;PHP importiert alle diese Eingaben defaultmäßig als globale
Variablen in das Programm. Benötigte Decodierungen werden dabei
automatisch vorgenommen, ggf. werden die Eingabewerte auch
automatisch wieder für den Transfer in eine SQL-Datenbank
codiert, falls &lt;code&gt;magic_quotes_gpc&lt;/code&gt; konfiguriert ist (dies ist
gelegentlich praktisch, aber meist unerwünscht). Zusätzlich
werden alle Eingabedaten je nach Herkunft noch in die drei
Hashes &lt;code&gt;HTTP_GET_VARS[]&lt;/code&gt;, &lt;code&gt;HTTP_POST_VARS[]&lt;/code&gt; und &lt;code&gt;HTTP_COOKIE_VARS[]&lt;/code&gt;
einsortiert.&lt;/p&gt;
&lt;p&gt;Prinzipiell ist es möglich, daß ein GET-Parameter, ein
POST-Parameter und ein Cookie dieselben Namen verwenden. Hier
steht derjenige Wert in einer globalen Variablen zur Verfügung,
der als letzter importiert wird. Die Reihenfolge des Imports
kann man mit der Konfigurationsvariablen &lt;code&gt;gpc_order&lt;/code&gt; bestimmen
(Default ist &amp;ldquo;gpc&amp;rdquo;). In PHP4 und in PHPLIB überschreiben
Sessionvariablen aus vertrauenswürdigen Quellen Werte, die per
gpc aus einer nicht vertrauenswürdigen Quelle geholt wurden.
Dadurch werden eine ganze Menge potentielle Sicherheitsprobleme
vermieden.&lt;/p&gt;
&lt;h3 id=&#34;dateien-und-upload&#34;&gt;
    &lt;a href=&#34;#dateien-und-upload&#34;&gt;
	Dateien und Upload
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Indem man ein Formular erzeugt, das mit der Methode &amp;ldquo;POST&amp;rdquo;
submitted wird und das einen besonderen Encoding-Type hat, kann
man auch Webformulare bauen, die den Upload von Dateien
ermöglichen. Ein solches Formular sieht minimal so aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kk@land:~ &amp;gt; netcat -l -p &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt; -v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;listening on &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;any&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;connect to &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;192.168.254.57&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; from lenz.intern.netuse.de &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;192.168.254.43&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2190&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GET / HTTP/1.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-Agent: Mozilla/4.6 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;en&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Linux&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; Alpha&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: land:8080
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Encoding: gzip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Language: de-DE,de,en
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Charset: iso-8859-1,*,utf-8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;h1&amp;gt;Hallo&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;form &lt;span class=&#34;nv&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://land:8080/&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;post &lt;span class=&#34;nv&#34;&gt;enctype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;multipart/form-data&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;input &lt;span class=&#34;nv&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;probe&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;input &lt;span class=&#34;nv&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;los&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; punt!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In diesem Formular eingetragene Daten werden in Form eines
MIME-Multipart-Dokumentes an den Server zurückübermittelt. Der
Aufbau der Daten ist vergleichsweise kompliziert, aber zum Glück
kümmert sich PHP um die Decodierung aller Daten:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kk@land:~ &amp;gt; netcat -l -p &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt; -v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;listening on &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;any&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;connect to &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;192.168.254.57&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; from lenz.intern.netuse.de &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;192.168.254.43&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2193&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;POST / HTTP/1.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Referer: http://land:8080/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-Agent: Mozilla/4.6 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;en&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Linux&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; Alpha&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: land:8080
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Encoding: gzip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Language: de-DE,de,en
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Charset: iso-8859-1,*,utf-8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-type: multipart/form-data&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;boundary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;---------------------------247491297412345
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Length: &lt;span class=&#34;m&#34;&gt;225&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-----------------------------247491297412345
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Disposition: form-data&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;probe&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;K:\Kunden\Netcologne\probe.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Type: text/plain
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Dateiinhalt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-----------------------------247491297412345--
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;h1&amp;gt;Danke.&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; punt!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;PHP verarbeitet diese Eingaben wie alle anderen Eingabedaten
automatisch. Es legt die Datei in einem temporären Verzeichnis
ab und stellen den Namen und die Größe der Datei in einigen
Variablen zur Verfügung, deren Namen von dem Namen des &lt;code&gt;&amp;lt;input type=&amp;quot;file&amp;quot;&amp;gt;&lt;/code&gt;-Tags abgeleitet werden: Für den Tagnamen &lt;code&gt;probe&lt;/code&gt;
werden diese Variablen erzeugt:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;$probe&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Name der Datei im temporären Verzeichnis auf dem Server.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;$probe_name&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Name der Datei auf dem System des Anwenders.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;$probe_size&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Größe der Datei in Bytes.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;$probe_type&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Typ der Datei als MIME-Type.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Mithilfe der beiden PHP3-Konfigurationseinstellungen
&lt;code&gt;upload_tmp_dir&lt;/code&gt; und &lt;code&gt;upload_max_filesize&lt;/code&gt; kann man serverseitig
kontrollieren, wie groß die hoch geschickten Dateien maximal
werden können und in welchem Verzeichnis sie abgelegt werden.
Wenn man die Datei nach dem Ende der Seite behalten möchte, muss
man sie kopieren oder umbenennen: PHP löscht die Upload-Datei am
Ende der Seite. Ein Einstellen der Größenbegrenzung begrenzt
jedoch nicht wirklich den Plattenplatz, der auf dem Server von
PHP durch Fileupload verbraucht wird: Aus technischen Gründen
muss PHP die Datei zunächst empfangen und kann sie erst dann
verwerfen, wenn sie zu groß ist. Seit PHP 3.0.10 kann mehr als
eine Datei pro Formular hochgeladen werden.&lt;/p&gt;
&lt;h3 id=&#34;eingabedaten-dekontaminieren&#34;&gt;
    &lt;a href=&#34;#eingabedaten-dekontaminieren&#34;&gt;
	Eingabedaten dekontaminieren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Eingabedaten, die aus einem Bereich mit niedrigem Vertrauen in
einen Bereich mit höheren Vertrauen überwechseln, müssen auf
Unbedenklichkeit geprüft werden. Es ist sonst möglich, die
Eingabedaten zu verwenden, um auf der Webservermaschine Schaden
anzurichten, der letztendlich bis zur Übernahme der Maschine
(und weiterer Maschinen im selben Netz) durch Angreifer reichen
kann.&lt;/p&gt;
&lt;p&gt;Ein typisches Beispiel für Vertrauen in Daten aus einem nicht
vertrauenswürdigen Bereich ist das folgende Script: Gegeben sei
eine Funktion, die einen Datensatz des gerade angemeldeten
Benutzers in einer Tabelle anzeigt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;select * from sometable where key = &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$PHP_AUTH_USER&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;next_record&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;form action=&amp;#34;doit.php3&amp;#34;&amp;gt;&amp;lt;table&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;input type=&amp;#34;hidden&amp;#34; name=&amp;#34;f_key&amp;#34; value=&amp;#34;&amp;lt;? $db-&amp;gt;p(&amp;#34;key&amp;#34;) ?&amp;gt;&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;f_name&amp;#34; value=&amp;#34;&amp;lt;? $db-&amp;gt;p(&amp;#34;name&amp;#34;) ?&amp;gt;&amp;#34;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;f_vorname&amp;#34; value=&amp;#34;&amp;lt;? $db-&amp;gt;p(&amp;#34;vorname&amp;#34;) ?&amp;gt;&amp;#34;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;f_credits&amp;#34; value=&amp;#34;&amp;lt;? $db-&amp;gt;p(&amp;#34;credits&amp;#34;) ?&amp;gt;&amp;#34;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;tr&amp;gt;&amp;lt;td align=&amp;#34;right&amp;#34;&amp;gt;&amp;lt;input type=&amp;#34;submit&amp;#34; name=&amp;#34;doit&amp;#34; value=&amp;#34;Absenden&amp;#34;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;/table&amp;gt;&amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In diesem Script wird eine Tabelle mit drei bearbeitbaren
Eingabefeldern &lt;code&gt;f_vorname&lt;/code&gt;, &lt;code&gt;f_name&lt;/code&gt; und &lt;code&gt;f_credits&lt;/code&gt; generiert. Die
Selektionsbedingung im SQL sorgt dafür, daß nur der Datensatz
des angemeldeten Benutzers angezeigt wird. Es wird jedoch auch
ein Eingabefeld erzeugt, das den Namen des aktuellen Benutzers
enthält. Übernimmt das Zielscript &lt;code&gt;doit.php3&lt;/code&gt; diese Daten
ungeprüft, kann der bearbeitende Anwender einfach eine URL wie&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;http://www.server.de/doit.php3?f_key=someuser&amp;amp;amp;f_name=some+name&amp;amp;amp;f_vorname=some+other+name&amp;amp;amp;f_credits=10000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;abrufen und damit beliebige Datensätze bearbeiten. Das Script
&lt;code&gt;doit.php3&lt;/code&gt; darf sich nicht darauf verlassen, daß der Inhalt von
&lt;code&gt;f_key&lt;/code&gt;, der zurückgesendet wird, derselbe Inhalt ist, der
ursprünglich erzeugt wurde. Besser wäre es, den Wert von &lt;code&gt;f_key&lt;/code&gt;
auf der Serverseite zu halten (etwa als eine zu einer Session
gehörende Variable) und nur die Werte &lt;code&gt;f_vorname&lt;/code&gt; und &lt;code&gt;f_name&lt;/code&gt; zu
akzeptieren.&lt;/p&gt;
&lt;p&gt;Eingabedaten, die aus einem Bereich niedrigen Vertrauens
stammen, haben in einem Programm als giftig, als kontaminiert,
zu gelten. Auch alle anderen Variablen, in denen aus
kontaminierten Werten abgeleitete Werte abgelegt werden, sind
automatisch als kontaminiert anzusehen. Am günstigsten ist es,
alle nicht vertrauenswürdigen Daten durch eine
Dekontaminierungsfunktion, einen Validator, zu schleusen und
dann mit den sauberen Werten weiter zu arbeiten.&lt;/p&gt;
&lt;p&gt;Dies kann zum Beispiel mit Code wie dem folgenden geschehen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// $key kommt aus der Session und ist automatisch gesetzt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$vorname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;check_alnumspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$f_vorname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;check_alnumspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$f_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$credits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;check_numeric&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$f_credits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Funktionen &lt;code&gt;check_alnumspace()&lt;/code&gt; und &lt;code&gt;check_numeric()&lt;/code&gt; sind hier
im Beispiel dann einfache Funktionen, die die Eingabedaten auf
erlaubte Zeichen abprüfen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;check_alnumspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;eregi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[^a-zäöüß0-9 ]+&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;check_numeric&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ereg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[^0-9]&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$in&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Diese Beispielfunktionen liefern entweder den Eingabestring
zurück, wenn dieser nur erlaubte Zeichen enthält oder den Wert
false, falls der Eingabestring verdächtigt aussieht. Die
Anwendung muss nun damit rechnen, daß die Felder &lt;code&gt;$vorname&lt;/code&gt;, &lt;code&gt;$name&lt;/code&gt;
und &lt;code&gt;$credits&lt;/code&gt; leer (false) sein können, kann sich aber darauf
verlassen, daß die Strings das erwartete Aussehen haben, wenn
sie nicht leer sind.&lt;/p&gt;
&lt;p&gt;Einer der größten Fehler, den man machen kann, ist es, die
Eingabedaten nicht zu dekontaminieren und sie dann in eine
Datenbank, eine Datei oder eine andere vertrauenswürdige
Datenquelle zu schreiben. Nun werden nämlich alle
Folgeanwendungen die nicht vertrauenswürdigen und ungeprüften
Daten aus einer vertrauenswürdigen Datenquelle laden und ihnen
ohne weitere Prüfung vertrauen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CGI Programmierung</title>
      <link>https://blog.koehntopp.info/1996/11/27/cgi-programmierung.html</link>
      <pubDate>Wed, 27 Nov 1996 01:02:03 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/1996/11/27/cgi-programmierung.html</guid>
      <description>&lt;h1 id=&#34;der-apache-www-server&#34;&gt;
    &lt;a href=&#34;#der-apache-www-server&#34;&gt;
	Der Apache WWW-Server
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Der Apache WWW-Server ist ein Server der zweiten Generation.
Das bedeutet, er entstand auf der Grundlage der Erfahrungen, die beim Betrieb von WWW-Servern unter sehr hoher Last gemacht wurden,
und er bietet erweiterte Möglichkeiten zur dynamischen Erzeugung von Seiten über CGI (&lt;em&gt;Common Gateway Interface&lt;/em&gt;) und
über eine servereigene Programmierschnittstelle (&lt;em&gt;Server API&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Der Server selbst ist auf praktisch jeder modernen UNIX-Plattform einsetzbar,
und Portierungen auf Windows NT und OS/2 sind ebenfalls verfügbar.&lt;/p&gt;
&lt;h2 id=&#34;apache-übersetzen&#34;&gt;
    &lt;a href=&#34;#apache-%c3%bcbersetzen&#34;&gt;
	Apache übersetzen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wie es sich für ein frei verfügbares UNIX-Programm gehört, ist der Server in Quelltextform erhältlich.
Zusätzlich werden auf &lt;a href=&#34;http://www.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.apache.org/&lt;/a&gt;

 auch Binärversionen
für die verbreitesten UNIX-Versionen bereitgestellt.
Ist die eigene UNIX-Version nicht unter diesen zu finden oder möchte man den Server mit experimentellen Optionen  betreiben,
muss man ihn sich selbst übersetzen.
Zum Glück ist das nicht sehr schwierig.&lt;/p&gt;
&lt;p&gt;Apache kommt, wie üblich, als mit &lt;code&gt;gzip&lt;/code&gt; gepacktes
&lt;code&gt;tar&lt;/code&gt;-Archiv. Nach dem Auspacken mit&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/tmp$ gzip -dc apache*tar.gz | tar xvf -
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;entsteht ein Verzeichnis mit dem Namen &lt;code&gt;apache_x.y.z&lt;/code&gt;, wobei &lt;code&gt;x.y.z&lt;/code&gt; die Versionsnummer des Servers angibt.
Es enthält die folgenden Unterverzeichnisse:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;cgi-bin&lt;/dt&gt;
&lt;dd&gt;Dieses Verzeichnis enthält einen Satz Beispielprogramme zur CGI-Programmierung in Form von Scriptdateien.&lt;/dd&gt;
&lt;dt&gt;cgi-src&lt;/dt&gt;
&lt;dd&gt;Dieses Verzeichnis enthält weitere Beispielprogramme zur CGI-Programmierung, die in C geschrieben wurden.
Diese Programme müssen zunächst compiliert werden, bevor sie im Verzeichnis &lt;code&gt;cgi-bin&lt;/code&gt; installiert werden können.&lt;/dd&gt;
&lt;dt&gt;conf&lt;/dt&gt;
&lt;dd&gt;Dieses Verzeichnis enthält Beispiel-Konfigurationsdateien.
Die Namen dieser Konfigurationsdateien enden auf &lt;code&gt;-dist&lt;/code&gt;.
Zum Gebrauch muss die jeweilige Konfigurationsdatei kopiert und unbedingt für den lokalen Bedarf angepasst werden.&lt;/dd&gt;
&lt;dt&gt;icons&lt;/dt&gt;
&lt;dd&gt;Die eingebaute Apache-Funktion zur Anzeige von Verzeichnissen kann Dateien mit dateitypspezifischen Icons anzeigen.
Dieses Verzeichnis enthält einen Satz Beispiel-Icons, die vom Server dazu verwendet werden.&lt;/dd&gt;
&lt;dt&gt;logs&lt;/dt&gt;
&lt;dd&gt;Dieses Verzeichnis ist zunächst leer.
Der Server wird später im Betrieb seine Logbücher hier ablegen.
Diese Logbücher können je nach Serverauslastung sehr umfangreich werden.&lt;/dd&gt;
&lt;dt&gt;src&lt;/dt&gt;
&lt;dd&gt;Dieses Verzeichnis enthält den C-Quelltext des Servers.
Es wird für den Betrieb nicht benötigt.&lt;/dd&gt;
&lt;dt&gt;support&lt;/dt&gt;
&lt;dd&gt;Dieses Verzeichnis enthält weitere C-Quelltexte zu Hilfsprogrammen für den Serverbetrieb.
Sie müssen compiliert werden, wenn man Eigenschaften des Servers für Fortgeschrittene nutzen möchte:
Benutzeridentifikation mit Paßworten,
DBM-Benutzerdatenbanken für sehr große Benutzerzahlen und verschiedene andere.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;konfigurationsdatei-anpassen&#34;&gt;
    &lt;a href=&#34;#konfigurationsdatei-anpassen&#34;&gt;
	Konfigurationsdatei anpassen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Im &lt;code&gt;src&lt;/code&gt;-Verzeichnis befindet sich die Datei &lt;code&gt;Configuration&lt;/code&gt;.
Dies ist die einzige Datei, die angepasst werden muss,
um den Apache-Server für eine unterstützte Plattform zu übersetzen.
In dieser Datei ist auch einzustellen, welche Module in den Server eingebunden werden
sollen.&lt;/p&gt;
&lt;p&gt;Folgende Einstellungen sind mit einem Texteditor an dieser Datei
vorzunehmen:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;CC=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Wahl des C-Compilers.
Der Server kann entweder mit dem normalen Systemcompiler &lt;code&gt;cc&lt;/code&gt; oder mit dem GNU-C-Compiler &lt;code&gt;gcc&lt;/code&gt; übersetzt werden,
wenn dieser auf dem System vorhanden ist.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CFLAGS=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Optionen für den Aufruf des C-Compilers.
Mit dieser Variable können die Optionen für den Lauf des Compilers festgelegt werden.
&lt;p&gt;Normalerweise wird man hier den Optimierungslevel des Compilers angeben, also beispielsweise &lt;code&gt;-O2&lt;/code&gt;.
Für den späteren Betrieb des Servers mit &lt;em&gt;Server Side Includes&lt;/em&gt; kann hier die Option &lt;code&gt;-DXBITHACK&lt;/code&gt; mit  angegeben werden.
Für schnelleren Betrieb auf Kosten der Lesbarkeit von Logfiles kann hier die Option &lt;code&gt;-DMINIMAL_DNS&lt;/code&gt; mit angegeben werden.
Die Option &lt;code&gt;-DMAXIMAL_DNS&lt;/code&gt; führt dagegen für alle Clients eine doppelte Abfrage des Nameservers durch,
was Fälschungen von Hostnamen erschwert, aber sehr langsam ist.&lt;/p&gt;
&lt;p&gt;Für den normalen Betrieb sollten diese Optionen zunächst einmal weggelassen werden.
Sie sind nicht unmittelbar notwendig und haben Nebeneffekte, die verstanden sein müssen, bevor die Optionen sinnvoll einsetzbar sind.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;LFLAGS=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Optionen für den Aufruf des Linkers.
Mit dieser Variable können die Optionen für den Lauf des Linkers festgelegt werden.
Normalerweise ist diese Variable leer.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;EXTRA_LIBS=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Optionen für das Linken zusätzlicher Bibliotheken.
Mit dieser Variable können zusätzliche Bibliotheken zum Linken des Programmes angegeben werden.
Normalerweise ist diese Variable leer.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;AUX_*=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Betriebssystemspezifische Optionen und Bibliotheken.
Diese Variablen stehen in Blöcken nach Betriebssystemen sortiert beisammen.
Sie legen fest, für welche Betriebssystemversion der Server übersetzt werden soll.
Im Auslieferungszustand ist der Server für SunOS 4 konfiguriert.
Diese Einstellung &lt;strong&gt;muss&lt;/strong&gt; für das Zielbetriebssystem angepaßt werden.
Dazu ist die Zeile für SunOS 4 zu deaktivieren und die Zeile für das gewünschte Betriebssystem zu aktivieren.
Um den Apache-Quelltext zum Beispiel für die Übersetzung auf Solaris 2 zu konfigurieren,
muss der Block&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-make&#34; data-lang=&#34;make&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# For SunOS 4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;AUX_CFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -DSUNOS4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# For Solaris 2.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;#AUX_CFLAGS= -DSOLARIS2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;#AUX_LIBS= -lsocket -lnsl
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;folgendermaßen geändert werden:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-make&#34; data-lang=&#34;make&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# For SunOS 4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;#AUX_CFLAGS= -DSUNOS4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# For Solaris 2.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;AUX_CFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -DSOLARIS2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;AUX_LIBS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -lsocket -lnsl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Weiter unten in der Konfigurationsdatei befindet sich der Abschnitt zur Konfiguration der Module,
aus denen der Server zusammengesetzt wird.
Die Einstellungen in diesem Bereich sind in der Regel für den Normalbetrieb korrekt und brauchen nicht  verändert zu werden.
Die Kommentare in diesem Abschnitt der Konfigurationsdatei geben weitere Hinweise.&lt;/p&gt;
&lt;h2 id=&#34;den-server-übersetzen&#34;&gt;
    &lt;a href=&#34;#den-server-%c3%bcbersetzen&#34;&gt;
	Den Server übersetzen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Nachdem die Konfigurationdatei angepasst ist, müssen die Informationen aus dieser Datei in den C-Quelltext des Programmes eingearbeitet werden.
Dies geschieht automatisch durch den Aufruf des Scriptes &lt;code&gt;Configure&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/src$ ./Configure
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Using &amp;#39;Configuration&amp;#39; as config file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Danach kann der Server übersetzt werden.
Der Übersetzungsprozeß wird durch das UNIX-Werkzeug &lt;code&gt;make&lt;/code&gt; automatisch gesteuert.
Es genügt, im &lt;code&gt;src&lt;/code&gt;-Verzeichnis &lt;code&gt;make&lt;/code&gt; aufzurufen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/src$ make
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;gcc -c -O2 -DLINUX alloc.c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nach erfolgreichem Abschluss des Übersetzungsvorgangs wird im &lt;code&gt;src&lt;/code&gt;-Verzeichnis eine Datei &lt;code&gt;httpd&lt;/code&gt; hinterlassen,
die ausführbar ist und mit dem &lt;code&gt;file&lt;/code&gt;-Kommando als Programm identifiziert wird.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/src$ ls -l ./httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-rwxr-xr-x   1 root     root        82260 Nov  4 10:42 ./httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/src$ file ./httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;./httpd: ELF 32-bit LSB executable i386 (386 and up) Version 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;die-hilfsprogramme-übersetzen&#34;&gt;
    &lt;a href=&#34;#die-hilfsprogramme-%c3%bcbersetzen&#34;&gt;
	Die Hilfsprogramme übersetzen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Für den einfachen Serverbetrieb genügt es, das Serverprogramm &lt;code&gt;httpd&lt;/code&gt; zur Verfügung zu haben.
Für den fortgeschrittenen Betrieb ist es jedoch nützlich,
auch die optionalen Hilfsprogramme in den Verzeichnissen &lt;code&gt;cgi-src&lt;/code&gt; und &lt;code&gt;support&lt;/code&gt; zu übersetzen und zu installieren.
Zum Glück sind diese Programme kaum systemspezifisch und können mit einem einfachen Aufruf von &lt;code&gt;make&lt;/code&gt; in den betreffenden Verzeichnissen übersetzt werden:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/cgi-src$ make
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;gcc -c -g query.c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/cgi-src$ cd ../support/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/support$ make
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;gcc -g htpasswd.c -o htpasswd 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Eventuell bei der Übersetzung auftretende Warnungen sind normal und können ignoriert werden.&lt;/p&gt;
&lt;h2 id=&#34;den-server-installieren&#34;&gt;
    &lt;a href=&#34;#den-server-installieren&#34;&gt;
	Den Server installieren
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Neben dem eigentlichen Serverprogramm &lt;code&gt;httpd&lt;/code&gt; werden zum Betrieb des Servers noch verschiedene zusätzliche
Verzeichnisse benötigt.
Alle diese Dateien und Verzeichnisse sollen in einem gemeinsamen Sammelverzeichnis installiert werden,
das in der Terminologie von Apache als &lt;code&gt;ServerRoot&lt;/code&gt; bezeichnet wird.
Viele Serverbetreiber wählen als &lt;code&gt;ServerRoot&lt;/code&gt; das Verzeichnis &lt;code&gt;/var/httpd&lt;/code&gt;.
Dieser Text geht ebenfalls davon aus, daß mit dieser &lt;code&gt;ServerRoot&lt;/code&gt; installiert wird.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;var
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;`-- httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    |-- cgi-bin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    |-- conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    |-- icons
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    `-- logs            
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Verzeichnisstruktur ServerRoot: &lt;code&gt;/var/httpd&lt;/code&gt; und die Unterverzeichnisse&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;home
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;`-- www
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    |-- icons
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    |-- pd-software
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    `-- texte
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Verzeichnisstruktur DocumentRoot: &lt;code&gt;/home/www&lt;/code&gt; und die Unterverzeichnisse&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Außerdem wird der Server in Zukunft auf einen weiteren Verzeichnisbaum zugreifen, der die HTML-Dokumente enthält,
die geservt werden sollen.
Diese zweite Verzeichnishierarchie wird als &lt;em&gt;DocumentRoot&lt;/em&gt; bezeichnet.
Im Gegensatz zur ServerRoot ist die Verzeichnisstruktur der DocumentRoot selbst vollkommen frei  wählbar.
Die in der Abbildung gegebene Aufteilung ist nur ein Beispiel.&lt;/p&gt;
&lt;p&gt;Beide Verzeichnishierarchien sind unterschiedlich und sollen sich nicht überlappen.
Auf gar keinen Fall sollte die &lt;code&gt;ServerRoot&lt;/code&gt; unterhalb der &lt;code&gt;DocumentRoot&lt;/code&gt; liegen,
denn sonst könnte man über den WWW-Server auf seine Konfigurationsdateien und Passworte zugreifen,
und das ist eine ausgesprochen schlechte Idee.
Auch andersherum sollte die &lt;code&gt;DocumentRoot&lt;/code&gt; nicht unterhalb der &lt;code&gt;ServerRoot&lt;/code&gt; liegen, obwohl das nicht unmittelbar schädlich ist.
Viele Serverbetreiber wählen als DocumentRoot das Verzeichnis &lt;code&gt;/home/www&lt;/code&gt;, und das ist auch das Verzeichnis, das in diesem Text verwendet wird.&lt;/p&gt;
&lt;p&gt;Zur Installation ist es notwendig, die Verzeichnisse für die ServerRoot und die DocumentRoot anzulegen und ihnen die  notwendigen Rechte zu geben.
Zunächst wird das ServerRoot-Verzeichnis angelegt und der Server selber in ihm installiert:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var# mkdir httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var# chown root.root httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var# chmod 755 httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var# cp /tmp/apache_1.0.3/src/httpd httpd/httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var# chown root.root httpd/httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var# chmod 111 httpd/httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Danach müssen die vorgefertigten Dateien aus den Verzeichnissen &lt;code&gt;cgi-bin&lt;/code&gt;, &lt;code&gt;conf&lt;/code&gt; und &lt;code&gt;icons&lt;/code&gt; übernommen werden.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-comsole&#34; data-lang=&#34;comsole&#34;&gt;/var# cd httpd
/var/httpd# mkdir cgi-bin conf icons logs support
/var/httpd# chown root.root cgi-bin conf icons logs support
/var/httpd# chmod 755 cgi-bin conf icons logs support
/var/httpd# cp /tmp/apache_1.0.3/cgi-bin/* cgi-bin/
/var/httpd# cp /tmp/apache_1.0.3/icons/* icons/
/var/httpd# cp /tmp/apache_1.0.3/conf/* conf/
/var/httpd# cp /tmp/apache_1.0.3/support/htpasswd support/
/var/httpd# cp /tmp/apache_1.0.3/support/httpd_monitor support/
/var/httpd# cp /tmp/apache_1.0.3/support/unescape support/&amp;lt;/small&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Schließlich muss auch die &lt;code&gt;DocumentRoot&lt;/code&gt; noch angelegt werden.
Dokumente auf dem WWW-Server sollen unter Umständen auch durch normale Benutzer erzeugt werden dürfen.
Es ist also sinnvoll, eine Benutzergruppe &lt;code&gt;webmaster&lt;/code&gt; anzulegen und dieser Benutzergruppe Schreibrechte an der DocumentRoot zu geben.
Dies ist recht einfach auf die folgende Weise möglich:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/home# echo &amp;#34;webmaster::60001:&amp;#34; &amp;gt;&amp;gt; /etc/group
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/home# mkdir www
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/home# chown kris.webmaster www
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/home# chmod 775 www
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Unterhalb dieses Verzeichnisses kann dann die benötigte Dokumentenstruktur nach Bedarf durch beliebige Benutzer der Gruppe &lt;code&gt;webmaster&lt;/code&gt; angelegt werden.
Benutzer werden der Benutzergruppe &lt;code&gt;webmaster&lt;/code&gt; zugefügt, indem ihre Benutzernamen im vierten (letzten) Feld der entsprechenden Zeile in der Datei &lt;code&gt;/etc/group&lt;/code&gt; eingetragen werden.
Die betreffenden Benutzer müssen sich neu einloggen, damit die Änderung wirksam wird.&lt;/p&gt;
&lt;h1 id=&#34;apache-konfigurieren&#34;&gt;
    &lt;a href=&#34;#apache-konfigurieren&#34;&gt;
	Apache konfigurieren
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Dieser Abschnitt beschreibt die Konfiguration des WWW-Servers gerade weit genug, um den Server in Betrieb nehmen zu können.
Eine vollständige Beschreibung der Apache-Konfiguration befindet sich im Apache Referenzhandbuch (&lt;code&gt;manual.ps&lt;/code&gt;), das Bestandteil der Serverdistribution ist.&lt;/p&gt;
&lt;h2 id=&#34;aufrufoptionen&#34;&gt;
    &lt;a href=&#34;#aufrufoptionen&#34;&gt;
	Aufrufoptionen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Der Apache WWW-Server versteht nur wenige Aufrufoptionen.
Die eigentliche Konfiguration des Servers erfolgt über Konfigurationsdateien,
und die Aufrufoptionen des Servers beschränken sich darauf, dem Server mitzuteilen, wo sich diese  Konfigurationsdateien befinden.
Die Optionen sind im Einzelnen:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;-d documentroot&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Setzt den ursprünglichen Wert der Variablen &lt;code&gt;DocumentRoot&lt;/code&gt; auf &lt;code&gt;documentroot&lt;/code&gt;.
Dies kann in der Konfigurationsdatei mit dem Kommando &lt;code&gt;DocumentRoot&lt;/code&gt; überschrieben werden.
Der Defaultwert ist &lt;code&gt;/usr/local/etc/httpd&lt;/code&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;-f config&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Führt die Kommandos in der Datei &lt;em&gt;config&lt;/em&gt; beim Start des Servers aus.
Wenn &lt;em&gt;config&lt;/em&gt; nicht mit einem &lt;code&gt;/&lt;/code&gt; beginnt, wird der Pfadname relativ zur ServerRoot interpretiert.
Der Defaultwert ist &lt;code&gt;conf/httpd.conf&lt;/code&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Server wird im Debugmodus gestartet.
Er erzeugt keine Kindprozesse und löst sich auch nicht von der Console, um in den Hintergrundmodus zu gehen.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Druckt die Versionsnummer des &lt;code&gt;httpd&lt;/code&gt; und beendet sich dann.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;-?&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Druckt eine Liste der Optionen des Servers und beendet sich dann.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Um den Server zu starten, ist es also notwendig, die benötigten Konfigurationdateien zu erzeugen.
Der Server kann dann entweder mit dem Kommando&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;~# /var/httpd/httpd -f /var/httpd/conf/httpd.conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;oder mit dem Kommando&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;~# /var/httpd/httpd -d /var/httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;aktiviert werden.&lt;/p&gt;
&lt;h2 id=&#34;minimale-konfigurationsdateien&#34;&gt;
    &lt;a href=&#34;#minimale-konfigurationsdateien&#34;&gt;
	Minimale Konfigurationsdateien
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Der Server liest beim Start drei Konfigurationsdateien ein.
Jede dieser Dateien kann Schlüsselworte enthalten, die die Werte bestimmter Variablen festlegen und so den Betrieb des Servers steuern.
Die Pfadnamen dieser Dateien werden wie üblich relativ zur &lt;code&gt;ServerRoot&lt;/code&gt; interpretiert, wenn sie nicht mit einem &lt;code&gt;/&lt;/code&gt; beginnen.
Standardmäßig sind dies die folgenden Dateien:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;conf/httpd.conf&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Diese Datei enthält globale Steuerparameter für den
WWW-Server.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;conf/srm.conf&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Diese Datei steuert das &amp;ldquo;Server Ressource Managment&amp;rdquo;.
Das heisst, sie legt fest, welche URLs auf welche Pfade im Dateisystem abgebildet werden,
und ob es sich bei den durch URLs referenzierten Dokumenten um statische Dateien oder um dynamisch erzeugte Dokumente handelt.
Diese Variable kann mit dem Schlüsselwort &lt;code&gt;RessourceConfig&lt;/code&gt; überschrieben werden.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;conf/access.conf&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Mit Hilfe dieser Datei können global Zugriffsrechte für bestimmte Verzeichnisse vergeben werden.
Mit dem Schlüsselwort &lt;code&gt;AccessConfig&lt;/code&gt; kann eine alternative Konfigurationsdatei bestimmt werden.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Weiterhin legt der Server drei Dateien im Verzeichnis &lt;code&gt;logs/&lt;/code&gt; an.
Einige dieser Dateien sind Logbücher, die je nach Serverlast sehr schnell sehr groß werden können.
Es ist notwendig, diese Dateien regelmäßig zu sichern und den Server danach mit einem Signal zu wecken,
damit er neue Logdateien aufsetzt. Die Dateien sind:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;logs/httpd.pid&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Diese Datei wächst nicht und braucht auch nicht gesichert zu werden.
Sie enthält in ASCII die PID des Serverprozesses.
Dadurch ist es leicht möglich, den Server mit dem Kommando&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;~# kill -HUP `cat /var/httpd/logs/httpd.pid`
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;zu wecken.
Der Hauptprozeß des Servers wird alle seine Kindprozesse von der Änderung informieren,
so daß ein einziges Signal zur Steuerung des Servers ausreichend ist.&lt;/p&gt;
&lt;p&gt;Mit dem Schlüsselwort &lt;code&gt;PidFile&lt;/code&gt; ist es möglich, diesen Pfadnamen zu ändern.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;logs/error_log&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;In dieser ständig wachsenden Datei werden alle Fehler beim Zugriff auf Komponenten des Servers mitgeloggt.
Insbesondere finden sich hier auch die Fehlerausgaben von CGI-Scripten.
Sollten solche Scripte also einmal nicht funktionieren, kann man dieser Datei die dabei entstehenden Meldungen entnehmen.
&lt;p&gt;Mit dem Schlüsselwort &lt;code&gt;ErrorLog&lt;/code&gt; kann eine andere Logdatei festgelegt werden.
Für virtuelle Hosts können unterschiedliche Logdateien bestimmt werden.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;logs/access_log&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;In dieser sehr schnell wachsenden Datei wird jeder Zugriff auf den Server geloggt.
Es ist möglich, diese Datei zur Erzeugung von Zugriffstatistiken auszuwerten.
&lt;p&gt;Mit dem Schlüsselwort &lt;code&gt;TransferLog&lt;/code&gt; kann ein anderer Dateiname festgelegt werden.
Für virtuelle Hosts können unterschiedliche Logdateien bestimmt werden.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Um den Server zu konfigurieren, kopiert man sich zweckmäßigerweise die mitgelieferten Beispiel-Konfigurationsdateien
und paßt sie für die eigene Konfiguration an:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var/httpd/conf# cp access.conf-dist access.conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var/httpd/conf# cp httpd.conf-dist httpd.conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var/httpd/conf# cp srm.conf-dist srm.conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;confhttpdconf&#34;&gt;
    &lt;a href=&#34;#confhttpdconf&#34;&gt;
	conf/httpd.conf
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die mit dem Server ausgelieferte beispielhafte Konfigurationsdatei &lt;code&gt;conf/httpd.conf&lt;/code&gt; enthält eine Reihe von Schlüsselworten zur Konfiguration des WWW-Servers.
Im Einzelnen:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Schlüsselwort legt fest, auf welchem TCP-Port der Server seine Dienste anbieten soll.
In UNIX sind die Ports mit Portnummern kleiner 1024 geschützt und nur Programmen mit Systemverwaltungsrechten zugänglich.
Der Server muss also vom Systemverwalter gestartet werden, wenn er auf dem HTTP-Standardport 80 serven soll.
&lt;p&gt;Für Server, die mit Benutzerrechten gestartet werden, hat es sich eingebürgert, den frei verfügbaren Port 8080 zu verwenden.
Die Konfigurationsdatei enthält dann eine Anweisung der Art &lt;code&gt;Port 8080&lt;/code&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;User&lt;/code&gt; und &lt;code&gt;Group&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Wenn der Server durch einen Systemverwalter gestartet wird, verwendet er die Systemverwalterrechte nur,
um sich an den angegebenen Port zu binden.
Alle anderen Dinge, insbesondere den Zugriff auf Dateien und das Starten von externen Programmen,
erledigt der Server nicht unter dieser Benutzerkennung, um böse Überraschungen zu vermeiden.
&lt;p&gt;Mit den Anweisungen &lt;code&gt;User&lt;/code&gt; und &lt;code&gt;Group&lt;/code&gt; wird der Server stattdessen auf eine Benutzer- und Gruppennummer konfiguriert,
die ungefährlicher ist.
Die Angabe dieser Werte kann numerisch in der Form &lt;code&gt;#zahl&lt;/code&gt; erfolgen, oder der Name eines Benutzers oder einer Benutzergruppe kann direkt gegeben werden.
Beispiel:&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;User nobody
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Group #60001
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;ServerAdmin&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Schlüsselwort teilt dem Server die Mailadresse der
für die Serververwaltung zuständigen Person mit. Der
Server nennt diese Adresse in Fehlermeldungen als Adresse eines
Ansprechpartners. Zukünftige Versionen des Servers werden
selbstständig Problemreports an diese Adresse senden.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;ServerRoot&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Legt das ServerRoot-Verzeichnis fest. In unserer
Beispielkonfiguration geschähe dies mit der Anweisung
&lt;code&gt;ServerRoot /var/httpd&lt;/code&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;PidFile&lt;/code&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;code&gt;ErrorLog&lt;/code&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;code&gt;TransferLog&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Diese drei Schlüsselworte bestimmen, wie bereits im
Abschnitt oben beschrieben, die Lage der verschiedenen Logdateien.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;ServerName&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Ein Webserver muss gelegentlich wissen, unter welchem kanonischen Namen er selbst anzusprechen ist.
Apache versucht, dieses Namen automatisch zu ermitteln, aber wenn dies nicht gelingt
oder wenn man sicher gehen will, ist es notwendig, dem Server
seinen eigenen Namen in der Konfigurationsdatei mitzuteilen. Das
erfolgt dann mit diesem Schlüsselwort. Der Parameter ist ein
voll qualifizierter Domainname, zum Beispiel in &lt;code&gt;ServerName white.koehntopp.de&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;confsrmconf&#34;&gt;
    &lt;a href=&#34;#confsrmconf&#34;&gt;
	conf/srm.conf
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Mit dieser Konfiguration legt der Serverbetreiber fest, wie der
Server die verschiedenen Dokumententypen behandeln soll, die auf
seinem Server verfügbar sind. Diese Datei definiert also die
Zuordnung von Dateiendungen zu MIME-Typen, die Namen von
Indexdateien für Verzeichnisse und den Umgang mit
Landessprachen und dergleichen.&lt;/p&gt;
&lt;p&gt;Minimal sollte die Datei die folgenden Anweisungen
enthalten:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;DocumentRoot&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Schlüsselwort legt die &lt;code&gt;DocumentRoot&lt;/code&gt; des Servers
fest. In unserer Beispielkonfiguration ist das: &lt;code&gt;DocumentRoot /home/www&lt;/code&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;ScriptAlias&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Schlüsselwort ist nur dann notwendig, wenn der Server in der Lage sein soll, CGI-Scripte zur dynamischen Erzeugung
von Seiten auszuführen.
Die Anweisung hat die Form&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;ScriptAlias &amp;lt;url-pfad&amp;gt; &amp;lt;realer Pfad&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;und sie verbindet den Pfad &lt;code&gt;url-pfad&lt;/code&gt; mit dem
wirklichen Pfad &lt;code&gt;realer Pfad&lt;/code&gt;, d.h. immer dann, wenn ein
Request für eine Seite unterhalb von &lt;code&gt;url-pfad&lt;/code&gt; auf dem
Server eingeht, wird das zugehörige Programm in &lt;code&gt;realer Pfad&lt;/code&gt; gestartet und muss die angeforderte Seite
berechnen.&lt;/p&gt;
&lt;p&gt;Um das CGI-Verzeichnis &lt;code&gt;/var/httpd/cgi-bin&lt;/code&gt; mit dem URL-Pfad &lt;code&gt;/cgi-bin&lt;/code&gt; zu verbinden, muss also die Anweisung&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;ScriptAlias /cgi-bin/ /var/httpd/cgi-bin/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;gegeben werden. Ein Request für die URL &lt;code&gt;/cgi-bin/dummy.pl&lt;/code&gt; startet dann das Programm
&lt;code&gt;/var/httpd/cgi-bin/dummy.pl&lt;/code&gt;, das eine Seite erzeugen muss.&lt;/p&gt;
&lt;p&gt;Es ist wichtig, daß das Verzeichnis mit den CGI-Programmen &lt;strong&gt;nicht&lt;/strong&gt; unterhalb der &lt;code&gt;DocumentRoot&lt;/code&gt; liegt.
Überlappen sich die Verzeichnisse, kann es zu seltsamen Effekten kommen,
weil der Server sich entscheiden muss, ob er das Script als Text ausliefert,
oder ob er es startet und die Ausgabe des Scriptes ausliefert.&lt;/p&gt;
&lt;p&gt;Die beispielhafte &lt;code&gt;srm.conf&lt;/code&gt; enthält weitere Anweisungen, die hier zunächst nicht behandelt werden sollen.&lt;/p&gt;
&lt;h3 id=&#34;confaccessconf&#34;&gt;
    &lt;a href=&#34;#confaccessconf&#34;&gt;
	conf/access.conf
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die Konfigurationsdatei &lt;code&gt;conf/access.conf&lt;/code&gt; regelt, wer
auf welche Dateien des Servers zugreifen darf. Es ist möglich,
einzelne Dateien oder ganze Teilbäume in der Verbreitung zu
beschränken, so daß man nur von bestimmten Rechnern aus
auf die Dateien zugreifen darf oder daß man sich als Benutzer
zunächst mit einem Passwort gegenüber dem Server
identifizieren muss, bevor man auf Seiten zugreifen kann. Auch
Kombinationen von Schutzmechanismen sind möglich.&lt;/p&gt;
&lt;p&gt;Da sich die Konfigurationsanweisungen in dieser Datei immer auf
Verzeichnisse beziehen, ist ihr Inhalt konsequent in&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;directory /pfad/*/name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/directory&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;gegliedert. Dabei ist zu beachten, daß die &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt;-Anweisungen vielleicht wie HTML-Tags
aussehen, aber keine sind. Sie müssen auf jeden Fall einzeln
in einer Zeile stehen und dürfen auch keine optionalen
Parameter wie HTML-Attribute haben. Die Pfade, die in &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt;-Anweisungen genannt werden, sind immer
physikalische Pfade des Dateisystems und keine URL-Pfade.&lt;/p&gt;
&lt;p&gt;Innerhalb eines &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt;-Abschnittes
können dann mit verschiedenen Anweisungen Optionen und
Zugriffsrechte für die in diesem Abschnitt spezifizierten
Verzeichnisse festgelegt werden.&lt;/p&gt;
&lt;p&gt;Unsere Beispielkonfiguration soll ohne weitere Erklärungen
zunächst einmal die folgenden Anweisungen enthalten:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;Directory /var/httpd/cgi-bin&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Options Indexes FollowSymLinks
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/Directory&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;Directory /home/www&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Options Indexes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  AllowOverride None
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/Directory&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;cgi-programmierung&#34;&gt;
    &lt;a href=&#34;#cgi-programmierung&#34;&gt;
	CGI-Programmierung
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Oftmals möchte man HTML-Seiten mit dynamisch erzeugtem
Inhalt haben. Solche Seiten sind nicht fest in Verzeichnissen des
Servers abgelegt, sondern werden beim Abruf durch ein Programm
erzeugt. Das erzeugende Programm muss vom Server auf eine
bestimmte Weise aufgerufen werden, damit es weiß, welche Art
von Seite es erzeugen soll und es muss seine Ausgabe auf eine
bestimmte Weise erzeugen, damit der Server diese Ausgabe als eine
WWW-Seite interpretieren kann. Die Norm, nach der das externe
Programm und der WWW-Server zusammenspielen, wird als das
&lt;em&gt;Common Gateway Interface&lt;/em&gt; (&lt;em&gt;CGI&lt;/em&gt;) bezeichnet.&lt;/p&gt;
&lt;h2 id=&#34;aktivierung-von-cgi-programmen-durch-apache&#34;&gt;
    &lt;a href=&#34;#aktivierung-von-cgi-programmen-durch-apache&#34;&gt;
	Aktivierung von CGI-Programmen durch Apache
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Grundsätzlich kennt der Apache WWW-Server vier verschiedene
Möglichkeiten, externe Programme zur Erzeugung von WWW-Seiten
einzusetzen:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;CGI-Pfade mit &lt;code&gt;ScriptAlias&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Apache sieht wie alle ernstzunehmenden WWW-Server
Möglichkeiten vor, mit denen man URL-Pfade mit
Scriptverzeichnissen verbinden kann. In Apache geschieht dies, wie
weiter oben
beschrieben, mit der Anweisung &lt;code&gt;ScriptAlias&lt;/code&gt;.
&lt;p&gt;Zugriffe auf Seiten unterhalb der durch den &lt;code&gt;ScriptAlias&lt;/code&gt;
spezifizierten URL bewirken, daß das angegebene Programm
gestartet wird und die Seite berechnet.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Programme mit der Endung &lt;code&gt;.cgi&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Anstatt CGI-Scripte in bestimmten Verzeichnissen
unterzubringen, kann Apache solche Scripte auch an einer bestimmten
Endung erkennen, unabhängig davon, in welchem Verzeichnis sie
sich befinden. Standardmäßig verwendet man für
solche Scripte die Endung &lt;code&gt;.cgi&lt;/code&gt;, aber es kann auch jede
beliebige andere noch nicht vergebene Dateiendung konfiguriert
werden.
&lt;p&gt;Verantwortlich für den Start von Scripten mit der Endung
&lt;code&gt;.cgi&lt;/code&gt; ist das Apache-Modul &lt;code&gt;mod_cgi&lt;/code&gt;. Es bewirkt,
daß alle Dateien, die über die Erkennung von
Dateiendungen mit dem MIME-Type &lt;code&gt;application/x-httpd-cgi&lt;/code&gt;
gekennzeichnet werden, nicht als statische Texte ausgeliefert
werden. Der Server versucht stattdessen die Datei als Programm zu
starten und liefert die Ausgabe des Programms an den Abrufer
zurück. Mit der Anweisung&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;AddType application/x-httpd-cgi .cgi
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;in der &lt;code&gt;conf/srm.conf&lt;/code&gt;-Konfigurationsdatei wird dem
Server mitgeteilt, welche Dateiendungen diesen MIME-Type haben. Im
Beispiel wird die Standardzuordnung definiert, die
&lt;code&gt;.cgi&lt;/code&gt;-Dateien als ausführbar markiert, aber es ist
prinzipiell möglich, andere und auch mehrere Dateiendungen zu
CGI-Endungen zu erklären. Bis auf die bequemere Installation
(kein besonderes Verzeichnis notwendig) unterscheidet sich dieses
Verfahren nicht vom Programmstart mit &lt;code&gt;ScriptAlias&lt;/code&gt;.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Server Side Includes (SSI)&lt;/dt&gt;
&lt;dd&gt;Manchmal möchte man nicht eine ganze WWW-Seite durch ein
Script berechnen lassen, sondern nur einfache Textersetzungen auf
einer Seite vornehmen oder nur Teile einer Seite von einem Script
erzeugen lassen. Solche Seiten sind ein typischer Anwendungsfall
für SSI. SSI-Dateien werden vom Server nicht unmittelbar
ausgeliefert, sondern der Server erwartet in der Datei
HTML-Kommentare. Einige, spezielle Kommentare werden vom Server als
Steueranweisungen interpretiert. Der Server ersetzt in diesem Fall
den gesamten betroffenen Kommentar durch das Ergebnis der
Steueranweisung.
&lt;p&gt;SSI wird durch das Apache-Module &lt;code&gt;mod_include&lt;/code&gt; verwaltet.
Es wird vom Server auf alle Dateien mit dem MIME-Type
&lt;code&gt;text/x-server-parsed-html&lt;/code&gt; angewendet. Wieder kann man mit der
&lt;code&gt;AddType&lt;/code&gt;-Anweisung in der Ressourcenkonfiguration
bestimmten Dateiendungen diesen MIME-Type zuordnen:&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;AddType text/x-server-parsed-html .shtml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Wie im Beispiel gezeigt, wird standardmäßig die
Dateiendung &lt;code&gt;.shtml&lt;/code&gt; verwendet, um Seiten mit SSI zu
markieren. Wenn die Servererweiterung &lt;code&gt;XBITHACK&lt;/code&gt; bei der
Übersetzung des Servers aktiviert war und in der
Ressourcenkonfiguration durch die Anweisung&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;XBitHack on
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;aktiviert ist, dann werden auch normale &lt;code&gt;.html&lt;/code&gt;-Dateien
als SSI-Dateien erkannt, sobald das &lt;code&gt;x&lt;/code&gt;-Recht für User
an der betreffenden Datei gesetzt ist.&lt;/p&gt;
&lt;p&gt;Falls die Variable auf den Wert &lt;code&gt;full&lt;/code&gt; statt auf &lt;code&gt;on&lt;/code&gt; gesetzt wird, testet Apache außerdem noch das
&lt;code&gt;x&lt;/code&gt;-Recht für Gruppen an der Datei. Ist es gesetzt, wird
ein &lt;code&gt;Last-Modified&lt;/code&gt;-Header mit dem Dateidatum erzeugt. Ist
es nicht gesetzt, wird auch kein &lt;code&gt;Last-Modified&lt;/code&gt;-Header
erzeugt. Auf diese Weise kann man das Verhalten von Caches und
Proxies auf dem Weg zum Client beeinflussen.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Server Module (AAPI)&lt;/dt&gt;
&lt;dd&gt;In besonderes komplizierten Anwendungsfällen oder wenn es
ganz besonders auf Geschwindigkeit ankommt, ist es nicht mehr
ausreichend, den Server durch externe Programme zu erweitern. In
diesem Fall muss die Erweiterung des Servers um weitere
Eigenschaften stattdessen Bestandteil des Servers selbst werden.
&lt;p&gt;Apache ist ein modularer Server, und da er im Quelltext
vorliegt, ist sehr leicht möglich, den Server durch weitere
Module zu erweitern. Module lassen sich besonders leicht
einfügen, wenn sie sich an die vom Server bereitgestellte
Programmierschnittstelle halten, das &lt;em&gt;Apache API&lt;/em&gt;. Solche
Module lassen sich außerdem auch mit dem experimentellen
Modul &lt;code&gt;mod_dld&lt;/code&gt; zur Laufzeit nachladen und ohne erneute
Übersetzung des Servers einbinden.&lt;/p&gt;
&lt;p&gt;Auch andere Server haben Modulschnittstellen, die leider
meistens zueinander inkompatibel sind. Bekannt ist vor allen Dingen
die &lt;em&gt;Netscape Server API&lt;/em&gt; zur Programmierung von Modulen
(&lt;em&gt;Plugins&lt;/em&gt;) für die Netscape Serverfamilie.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;einfache-cgi-programme&#34;&gt;
    &lt;a href=&#34;#einfache-cgi-programme&#34;&gt;
	Einfache CGI-Programme
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Einfache CGI-Programme werden über einen normalen Link
aktiviert und übernehmen keine Eingabeparameter. Sie
können aber Informationen aus anderen Datenquellen beziehen,
etwa aus den Logbuchdateien des Servers oder aus anderen Dateien
auf dem Serverrechner.&lt;/p&gt;
&lt;p&gt;Das folgende Beispiel zeigt
das einfachste CGI-Programm überhaupt. Dieses Programm tut
nichts weiter, als ein Dokument mit dem MIME-Type
&lt;code&gt;text/plain&lt;/code&gt; zu erzeugen und dann seine Ablaufumgebung
auszudrucken. Es eignet sich damit ausgezeichnet als
&lt;em&gt;Hello, World!&lt;/em&gt;-Programm und dient gleichzeitig zum Erkunden der
Ablaufumgebung für CGI-Programme:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#! /bin/sh --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Content-Type: text/plain&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Pfad:&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Aktuelles Verzeichnis:&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;UID/GID:&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;id
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Umgebungsvariablen:&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;env &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Prozessliste:&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ps alxwww
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Dieses einfache CGI-Programm ist das CGI-Äquivalent von &amp;ldquo;Hello, World&amp;rdquo;.
Zusätzlich druckt es noch Informationen über die Ablaufumgebung des Scriptes aus.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Das CGI-Programm ist in der Scriptsprache der UNIX-Shell
&lt;code&gt;/bin/sh&lt;/code&gt; geschrieben, aber jede andere Programmiersprache ist
ebenso geeignet. CGI-Programme müssen ihre Ausgabe auf der
Standardausgabe liefern und sie müssen der eigentlich
nutzbaren Ausgabe einen Absatz voranstellen, der zwingend den MIME-Typen der Ausgabe festlegt und weitere optionale Angaben
über das erzeugte Dokument enthalten darf. Dieser Absatz
muss durch eine Leerzeile vom nutzbaren Teil der Ausgabe
getrennt sein.&lt;/p&gt;
&lt;p&gt;Um das Programm ausprobieren zu können, muss es als
CGI-Programm auf dem Server installiert werden. Das bedeutet:&lt;/p&gt;
&lt;p&gt;Entweder muss es als Datei mit einem beliebigen Namen im
&lt;code&gt;cgi-bin&lt;/code&gt;-Verzeichnis des Servers installiert werden, oder es
muss als Datei mit der Endung &lt;code&gt;.cgi&lt;/code&gt; in einem
Verzeichnis der &lt;code&gt;DocumentRoot&lt;/code&gt; installiert werden. In beiden
Fällen muss die Datei als für das Betriebssystem
ausführbar installiert werden, damit der Server das Programm
starten kann.&lt;/p&gt;
&lt;p&gt;In unserer Beispielkonfiguration kann das Programm wie folgt
installiert werden:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var/httpd# cp /tmp/hello cgi-bin/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var/httpd# chmod 755 cgi-bin/hello
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Mit einem Browser kann nun die URL
&lt;code&gt;http://server/cgi-bin/hello&lt;/code&gt; abgerufen werden, um das Script zu
starten. Seine Ausgabe ist etwas länglich, aber sehr
informativ: Wir erfahren den Pfadnamen, der vom Server und von
unseren eigenen CGI-Programmen durchsucht wird, um externe
Programme zu starten, und das Script nennt uns das aktuelle
Verzeichnis, in dem unsere CGI-Programme ablaufen. Außerdem
bekommen wir mitgeteilt, mit welchen Benutzerrechten das Script
abläuft und welche Umgebungsvariablen ihm zur Verfügung
stehen. Letztere Information ist besonders aufschlussreich,
denn offenbar definiert das Common Gateway Interface eine ganze
Liste von Umgebungsvariablen, die dem externen Programm vom
WWW-Server zur Verfügung gestellt werden.&lt;/p&gt;
&lt;p&gt;Weiter unten sehen wir eine leicht
gekürzte, beispielhafte Ausgabe des Scriptes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Pfad:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/bin:/usr/bin:/usr/local/bin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Aktuelles Verzeichnis:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var/httpd/cgi-bin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;UID/GID:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;uid=65534(nobody) gid=65535(nogroup) groups=65535(nogroup)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Umgebungsvariablen:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;DOCUMENT_ROOT=/home/www
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;GATEWAY_INTERFACE=CGI/1.1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HOSTTYPE=i386
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HTTP_ACCEPT=image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    image/png, image/tiff, multipart/x-mixed-replace, */*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HTTP_ACCEPT_LANGUAGE=de, en, fr, es, it
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HTTP_HOST=white
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HTTP_PRAGMA=no-cache
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HTTP_USER_AGENT=OmniWeb/2.0.1 OWF/1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;OSTYPE=Linux
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;PATH=/bin:/usr/bin:/usr/local/bin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;QUERY_STRING=
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;REMOTE_ADDR=193.102.57.1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;REMOTE_HOST=black
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;REQUEST_METHOD=GET
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SCRIPT_FILENAME=/var/httpd/cgi-bin/hello
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SCRIPT_NAME=/cgi-bin/hello
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SERVER_ADMIN=kris@koehntopp.de
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SERVER_NAME=white.koehntopp.de
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SERVER_PORT=80
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SERVER_PROTOCOL=HTTP/1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SERVER_SOFTWARE=Apache/1.0.3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SHELL=/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SHLVL=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;TERM=dumb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;_=/usr/bin/env
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Prozessliste:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;In der Ausgabe des &amp;ldquo;Hello, World&amp;rdquo;-Programmes ist die umfangreiche Liste der durch den Server bereitgestellten CGI-Variablen erkennbar.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Bedeutung der verschiedenen Umgebungsvariablen eines
CGI-Programmes wird folgenden Abschnitt erklärt. Die meisten Programme werten jedoch nur die
Variable &lt;code&gt;QUERY_STRING&lt;/code&gt; oder eine der (im Beispiel nicht
erzeugten) Variablen &lt;code&gt;PATH_INFO&lt;/code&gt; und
&lt;code&gt;PATH_TRANSLATED&lt;/code&gt; aus.&lt;/p&gt;
&lt;h2 id=&#34;umgebung-von-cgi-programmen&#34;&gt;
    &lt;a href=&#34;#umgebung-von-cgi-programmen&#34;&gt;
	Umgebung von CGI-Programmen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Webserver unter UNIX versorgen ihre CGI-Programme mittels
Umgebungsvariablen mit den verschiedensten Fakten über den
Aufrufer. Unter anderen Betriebssystemen werden andere Mechanismen
zur Übermittlung der Information verwendet, aber die Art und
die Namen der übermittelten Funktionen bleibt gleich.&lt;/p&gt;
&lt;h3 id=&#34;standard-variablen&#34;&gt;
    &lt;a href=&#34;#standard-variablen&#34;&gt;
	Standard-Variablen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Der Client, den der Anwender benutzt, um das CGI-Programm auf
dem Server zu aktivieren, liefert dem Server eine ganze Reihe von
Informationen, die dieser auch dem CGI-Programm selbst zur
Verfügung stellt. Das CGI-Programm kann diese Informationen
auswerten und eventuell für die Gestaltung der Seite
verwenden.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;SERVER_SOFTWARE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Name und die Versionsnummer des Servers, der das
CGI-Programm gestartet hat.  Beispiel: Apache/1.0.3&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SERVER_NAME&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Hostname des Servers, der das CGI-Programm gestartet hat.
Ist dieser Name nicht verfügbar, wird hier eine IP-Nummer
übergeben.  Beispiel: white.koehntopp.de&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SERVER_PORT&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Portnummer des Servers, der das CGI-Programm gestartet hat.
Beispiel: 80&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SERVER_ADMIN&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Mailadresse des Serveradministrators. Das CGI-Programm kann
in Notfällen Fehlermeldungen an diese Adresse mailen.
Beispiel: &lt;a href=&#34;mailto:user@example.com&#34;&gt;user@example.com&lt;/a&gt;

&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;GATEWAY_INTERFACE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Version der CGI-Spezifikation, nach diese
Umgebungsvariablen erzeugt wurden.
Beispiel: CGI/1.1&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SERVER_PROTOCOL&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Name und die Versionsnummer des Protokolls, mit dem der
Request empfangen wurde, der das CGI-Programm aktiviert hat.
Beispiel: HTTP/1.0&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;REQUEST_METHOD&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Request-Methode, die für das Starten des CGI-Programms
verantwortlich war. Diese Methode legt fest, auf welche Weise das
CGI-Programm an seine Eingabeparameter kommt.
Beispiel: &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt; oder &lt;code&gt;POST&lt;/code&gt;.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Bei jedem Datentausch zwischen einem WWW-Browser und Server
werden fast immer auch optionale Informationen in Form von
zusätzlichen Request-Headerzeilen ausgetauscht. Anstatt
für alle Eventualitäten vorauszuplanen und Header zu
definieren, hat man in der CGI-Spezifikation festgelegt, daß
solche zusätzlichen Headerzeilen in Uppercase mit dem Prefix
&lt;code&gt;HTTP_&lt;/code&gt; versehen werden sollen und an das CGI-Programm
weitergegeben werden. Wenn der Browser also die optionale
HTTP-Informationszeile &lt;code&gt;Bla: Fasel&lt;/code&gt; einliefert, dann wird dem
CGI-Programm die Umgebungsvariable &lt;code&gt;HTTP_BLA&lt;/code&gt; mit dem Wert
&lt;code&gt;Fasel&lt;/code&gt; vorbelegt übergeben.&lt;/p&gt;
&lt;p&gt;Die folgenden Variablen findet man in nahezu jeder
CGI-Anfrage:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;HTTP_REFERER&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die URL des Dokumentes, das auf das CGI-Programm verwiesen hat.
Auf dieser Seite hat der Benutzer also ein Link angeklickt, der auf
das Programm verwiesen hat, oder ein Formular abgesendet, das das
CGI-Programm aktiviert hat.
Beispiel: &lt;a href=&#34;http://www.example.com/cgistarter.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.example.com/cgistarter.html&lt;/a&gt;

&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;HTTP_HOST&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Viele Serverrechner betreiben nicht nur einen einzigen
Webserver, sondern eine ganze Palette von Servern für
unterschiedliche Anbieter unter verschiedenen Namen. Diese Variable
enthält, wenn sie vorhanden ist, den Namen, unter dem der
Server angesprochen wurde.
Beispiel: &lt;a href=&#34;https://www.example.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.example.com&lt;/a&gt;

&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;HTTP_USER_AGENT&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Typbezeichnung und Versionsnummer der Browser-Software.
Einige CGI-Programme werten diese Variable aus, um die
Fähigkeiten des Browsers zu bestimmen und je nach Bedarf die
Ausgabe anzupassen (Tabellen, Frames, Javascript, ActiveX, Java).
Beispiel: OmniWeb/2.0.1 OWF/1.0&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;HTTP_ACCEPT&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Eine Liste aller MIME-Types, die der Client als Antworttyp akzeptiert.
Beispiel: text/plain, text/html, image/*&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Und schließlich gibt es noch eine ganze Gruppe von
Variablen, die direkt Informationen über den Request
enthalten, der das CGI-Programm gestartet hat:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;PATH_INFO&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;CGI-Programme können nach dem Pfadnamen zum Aufruf des
Scriptes noch weitere Pfadkomponenten enthalten. Zum Beispiel
könnte das Beispielprogramm aus dem Beispiel oben mit der URL
&lt;code&gt;http://server/cgi-bin/hello/more/info&lt;/code&gt; aufgerufen werden.
Die Variable hält in diesem Fall dann die &amp;ldquo;überstehenden&amp;rdquo;
Komponenten des Pfades zur Auswertung durch das Script bereit.
Beispiel: &lt;code&gt;/more/info&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;PATH_TRANSLATED&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Falls das CGI-Programm mit einem verlängerten CGI-Pfad
aufgerufen wurde, kann dieser Pfad vom WWW-Server auf die
übliche Weise in einen wirklichen Dateinamen übersetzt
werden. Das Ergebnis dieser Übersetzung ist dann in dieser
Variable zu finden.
Beispiel: &lt;code&gt;/home/www/more/info&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SCRIPT_NAME&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Teil der URL, der zum Aufruf des CGI-Programmes
geführt hat, ist in dieser Variablen in URL-Form zu finden.
Beispiel: &lt;code&gt;/cgi-bin/hello&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SCRIPT_FILENAME&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Information aus &lt;code&gt;SCRIPT_NAME&lt;/code&gt; wird für das
CGI-Programm ebenfalls in wirkliche Dateinamen übersetzt
bereitgehalten.
Beispiel: &lt;code&gt;/var/httpd/cgi-bin/hello&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;QUERY_STRING&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Diese Variable enthält eine Liste von Parametern, die dem
CGI-Programm mitgegeben worden sind. Die Parameter liegen in
codierter Form vor (Siehe den folgenden Abschnitt) und müssen durch das
CGI-Programm decodiert werden, bevor sie verwendet werden
können.
Beispiel: &lt;code&gt;name=Otto+Normaluser&amp;amp;phone=441777&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;REMOTE_HOST&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Name des Rechners, der den Request gemacht hat, soweit er verfügbar ist.
Beispiel: &lt;code&gt;mahaki.koehntopp.de&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;REMOTE_ADDRESS&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die IP-Nummer des Rechners, der den Request eingeliefert hat.
Beispiel: &lt;code&gt;192.103.57.2&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;AUTH_TYPE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Methode, mit der die Useridentität in der Variablen
&lt;code&gt;REMOTE_USER&lt;/code&gt; verifiziert worden ist, falls eine
Verifikation überhaupt stattgefunden hat.
Beispiel: Basic&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;REMOTE_USER&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die verifizierte Identität des Benutzers, der den Request
eingeliefert hat, wenn eine Verifikation überhaupt
stattgefunden hat.
Beispiel: &lt;code&gt;marit&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CONTENT_TYPE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der MIME-Type der Daten, die mit einem PUT- oder POST-Request
eingeliefert worden sind.
Beispiel: &lt;code&gt;text/plain&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CONTENT_LENGTH&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Länge der Daten in Bytes, die mit einem PUT- oder
POST-Request eingeliefert worden sind.
Beispiel: 17321&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;apache-spezialvariablen&#34;&gt;
    &lt;a href=&#34;#apache-spezialvariablen&#34;&gt;
	Apache-Spezialvariablen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Apache stellt zusätzlich zu den im CGI-Standard definierten
Variablen noch einige zusätzliche Informationen bereit.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;DOCUMENT_ROOT&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Diese Variable enthält den Pfad zur &lt;code&gt;DocumentRoot&lt;/code&gt;
aus der Serverkonfiguration.
Beispiel: &lt;code&gt;/home/www&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;REDIRECT_...&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Apache ist in der Lage, nach Maß zugeschnittene
Fehlermeldungen zu erzeugen. Geschickterweise erzeugt man diese
Fehlermeldungen durch ein CGI-Script. Damit das richtig
funktioniert, muss Information über den alten Request
vorhanden sein, der den Fehler hervorgerufen hat. Apache stellt
also alle Variablen des alten Requests mit dem zusätzlichen
Prefix &lt;code&gt;REDIRECT_&lt;/code&gt; in der Fehlerbehandlung zur
Verfügung.
&lt;p&gt;Außerdem tauchen zwei zusätzliche neue Variablen auf,
nämlich &lt;code&gt;REDIRECT_URL&lt;/code&gt;, die URL, die den Fehler
hervorgerufen hat, und &lt;code&gt;REDIRECT_STATUS&lt;/code&gt;, der
HTTP-Statuscode, der Auskunft über die Art des Fehlers
gibt.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;zusätzliche-variablen&#34;&gt;
    &lt;a href=&#34;#zus%c3%a4tzliche-variablen&#34;&gt;
	Zusätzliche Variablen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Mit dem Schlüsselwort &lt;code&gt;PassEnv&lt;/code&gt; ist es möglich,
weitere Variablen aus der Umgebung des Serverprozesses in die
Umgebung des CGI-Scriptes weiterzugeben. Die Anweisung&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;PassEnv HOSTNAME
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;würde zum Beispiel bewirken, daß die
Umgebungsvariable &lt;code&gt;HOSTNAME&lt;/code&gt; aus der Serverumgebung auch in
CGI-Programmen sichtbar wäre, wenn sie überhaupt
definiert ist.&lt;/p&gt;
&lt;p&gt;Mit dem Schlüsselwort &lt;code&gt;SetEnv&lt;/code&gt; ist es außerdem
möglich, gezielt Variablen in der Umgebung des CGI-Programmes
zu erzeugen. Die Anweisung&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SetEnv DEBUG_ZONE parser
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;würde für alle CGI-Programme die Umgebungsvariable
&lt;code&gt;DEBUG_ZONE&lt;/code&gt; mit dem Wert &lt;code&gt;parser&lt;/code&gt; belegen. Dies ist,
wie der Name der Variablen schon andeuten soll, ausgesprochen
nützlich, um Debugging in CGI-Scripten zu aktivieren.&lt;/p&gt;
&lt;h2 id=&#34;parameterübergabe-an-cgi-programme&#34;&gt;
    &lt;a href=&#34;#parameter%c3%bcbergabe-an-cgi-programme&#34;&gt;
	Parameterübergabe an CGI-Programme
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;CGI-Programme können durch direkte Links oder durch
Formulare (siehe folgendes Kapitel)
aktiviert werden. In beiden Fällen ist es möglich, dem
gestarteten CGI-Programm Parameter mitzugeben. Für den
Programmierer des CGI-Programmes sind dabei zwei Dinge interessant:
die HTTP-&lt;em&gt;Methode&lt;/em&gt;, mit der die Daten übergeben werden,
und die &lt;em&gt;Codierung&lt;/em&gt; der übergebenen Daten.&lt;/p&gt;
&lt;h3 id=&#34;http-methoden&#34;&gt;
    &lt;a href=&#34;#http-methoden&#34;&gt;
	HTTP-Methoden
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wie die meisten Protokolle, die im Internet eingesetzt werden,
ist auch HTTP ein Protokoll, das Daten in ASCII und
zeilenorientiert übermittelt. Auf diese Weise ist ein Client
oder Server für das Protokoll schnell mit Hilfe der
C-Bibliothek programmiert, und das Programm lässt sich
auch ohne Gegenstelle schnell mit &lt;code&gt;telnet&lt;/code&gt; testen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;GET /cgi-bin/hello/more/info HTTP/1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Accept: text/html, image/gif, image/jpeg
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;User-Agent: Mozilla/2.02 (Windows; I; 32bit)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;Leerzeile&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Ein Beispiel für einen HTTP-Request: Ein Netscape-Client fordert den URL-Pfad
&lt;code&gt;/cgi-bin/hello/more/info&lt;/code&gt; an.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ein Request, den ein HTTP-Client, etwa ein WWW-Browser, an den
Server sendet, sieht beispielweise so wie oben aus. Das Schlüsselwort
&lt;code&gt;GET&lt;/code&gt; signalisiert, daß eine Seite vom WWW-Server
abgeholt werden soll, daß also in der Terminologie von HTTP
die &lt;code&gt;GET&lt;/code&gt;-Methode verwendet werden soll. Dahinter werden der
URL-Pfad und die benutzte Protokollversion angegeben.&lt;/p&gt;
&lt;p&gt;Die folgenden Zeilen des Requests bis zur ersten Leerzeile
können aus beliebig vielen Parametern bestehen, die dem
&lt;code&gt;GET&lt;/code&gt;-Request noch mitgegeben werden. Der Browser teilt dem
Server so mit, welche Datentypen er in der Antwort unterstützt
und um welche Programmversion welchen Herstellers es sich bei dem
Browser handelt. Prinzipiell ist der Request durch die
Einführung neuer Zeilen beliebig erweiterbar.&lt;/p&gt;
&lt;p&gt;Der Server beantwortet einen solchen Request wie unten gezeigt auf eine ganz
ähnliche Weise: Auch er erzeugt zunächst eine
formalisierte Antwortzeile, in der er die verwendete
Protokollversion, einen Statuscode und einen Freitext, der den
Statuscode erläutert, zurückgibt. Danach folgt wieder ein
relativ frei formatierte Headerblock, der Informationen über
das gelieferte Dokument enthält, und dann, nach einer
Leerzeile, das eigentliche Dokument.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HTTP/1.0 200 OK
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Date: Mon, 04-Nov-1996 19:54:32 GMT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Server: Apache 1.0.3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Mime-Version: 1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Last-Modified: Mon, 04-Nov-1996 19:54:32 GMT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Content-Type: text/plain
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;Leerzeile&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Ein Beispiel für eine
HTTP-Response. Der Server beantwortet den Request zunächst mit
einem Headerblock mit Metainformationen über die
gewünschten Daten. Nach einer Leerzeile kommen dann die
angeforderten Informationen.&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&#34;die-get-methode&#34;&gt;
    &lt;a href=&#34;#die-get-methode&#34;&gt;
	Die &lt;code&gt;GET&lt;/code&gt;-Methode
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Die &lt;code&gt;GET&lt;/code&gt;-Methode kann nicht nur verwendet, um
Informationen von einem Server anzufordern, sondern sie kann
zugleich auch Informationen zum Server übertragen, falls die
angeforderte URL ein CGI-Programm bezeichnet.&lt;/p&gt;
&lt;p&gt;Eine solche URL hat die Form&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;protokoll://server/path/file/extra_daten?query_string
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Informationen aus &lt;code&gt;extra_daten&lt;/code&gt; werden dem
CGI-Programm in den Variablen &lt;code&gt;PATH_INFO&lt;/code&gt; und
&lt;code&gt;PATH_TRANSLATED&lt;/code&gt; zur Verfügung gestellt, wie weiter oben
beschrieben. Die Informationen aus dem &lt;code&gt;query_string&lt;/code&gt;
tauchen im CGI-Programm dagegen in der gleichnamigen Variablen auf.
Sie liegen in einer codierten Form vor, die als &lt;em&gt;urlencoded&lt;/em&gt;
bezeichnet wird und die im folgenden Abschnitt beschrieben wird.&lt;/p&gt;
&lt;p&gt;Daten, die in &lt;code&gt;GET&lt;/code&gt;-Methoden codiert werden, sind in der
URL sichtbar. Solche Anfragen an CGI-Programme lassen sich also in
Bookmarks oder Hotlists mit Parametern abspeichern. Das ist sehr
nützlich, wenn man Benutzern vorgefertigte Anfragen an
Suchmaschinen oder andere Roboter präsentieren möchte.
Solche URLs können aber sehr lang und sehr hässlich
werden, wenn viele Parameter zu übergeben sind. Für diese
Zwecke ist die im Folgenden beschriebene &lt;code&gt;POST&lt;/code&gt;-Methode
besser geeignet.&lt;/p&gt;
&lt;h4 id=&#34;die-post-methode&#34;&gt;
    &lt;a href=&#34;#die-post-methode&#34;&gt;
	Die &lt;code&gt;POST&lt;/code&gt;-Methode
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Die &lt;code&gt;POST&lt;/code&gt;-Methode sendet die Parameter für das
CGI-Programm in einer gesonderten Übertragung an den Server.
Die Daten werden für das Programm zur Standardeingabe. Da die
Daten nicht Bestandteil der URL sind, besteht das Problem der zu
langen Eingaben hier nicht. Auf der anderen Seite ist es nicht
möglich, &lt;code&gt;POST&lt;/code&gt;-Anfragen mit Parametern in Hotlists zu
speichern. Die übertragenen Daten sind auch hier wieder &lt;em&gt;urlencoded&lt;/em&gt;,
obwohl es prinzipiell nicht unbedingt notwendig
wäre.&lt;/p&gt;
&lt;h3 id=&#34;url-encoding&#34;&gt;
    &lt;a href=&#34;#url-encoding&#34;&gt;
	URL-Encoding
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die Daten, die einem CGI-Programm übergeben werden, sind
unabhängig von der verwendeten Transfermethode in jedem Fall
urlencoded gesendet. Die Codierung wurde notwendig, weil man vor
der Erfindung der &lt;code&gt;POST&lt;/code&gt;-Methode mehrere Variablen mit
Zeichen aller Art an den Server senden wollte und die Daten dazu in
die mittels eines &lt;code&gt;GET&lt;/code&gt; angeforderte URL eincodiert werden
mussten. Eine solche URL darf bestimmte Zeichen nicht
enthalten: Unter anderem kann eine URL keine Leerzeichen
enthalten.&lt;/p&gt;
&lt;p&gt;Die Trennung zwischen eigentlicher URL und zusätzlichen
Daten für einen &lt;code&gt;QUERY_STRING&lt;/code&gt; erfolgt wie oben schon
angedeutet mit einem Fragezeichen (&lt;code&gt;?&lt;/code&gt;). Die Daten im
&lt;code&gt;QUERY_STRING&lt;/code&gt; können aus mehreren Feldern der Form
&lt;code&gt;name=wert&lt;/code&gt; bestehen. Die einzelnen Felder werden durch
Und-Zeichen (&lt;code&gt;&amp;amp;&lt;/code&gt;) voneinander getrennt. Ein &lt;code&gt;QUERY_STRING&lt;/code&gt;
kann also so aussehen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;name1=wert1&amp;amp;name2=wert2&amp;amp;name3=wert3...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Um jetzt innerhalb eines Strings in urlencoding trotzdem
Fragezeichen, Undzeichen und andere Sonderzeichen verwenden zu
können, bedient man sich folgender Ersetzungsregeln:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Leerzeichen werden durch Pluszeichen (&lt;code&gt;+&lt;/code&gt;) dargestellt.
Der String &amp;ldquo;Dies ist ein Test&amp;rdquo; wird also zu &amp;ldquo;Dies+ist+ein+Test&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Andere Zeichen, die in einer URL nicht mehr vorkommen
dürfen, werden durch das Zeichen Prozent (%) gefolgt vom
zweistelligen hexadezimalen Zeichencode des Zeichens dargestellt.
Der String &amp;ldquo;#$%&amp;rdquo; wird also zu &amp;ldquo;%23%24%25&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jedes CGI-Programm muss in irgendeiner Form Funktionen zum
Decodieren von Daten enthalten, die urlencoded vorliegen.&lt;/p&gt;
&lt;h1 id=&#34;formulare-mit-html&#34;&gt;
    &lt;a href=&#34;#formulare-mit-html&#34;&gt;
	Formulare mit HTML
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Natürlich ist es möglich, Eingaben für
CGI-Programme zusammenzustellen, indem man von Hand einen
&lt;code&gt;GET&lt;/code&gt;-Request zusammenbaut. Schöner und bunter erzeugt man
solche Requests jedoch mit HTML-Formularen, den &lt;code&gt;FORMS&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;der-form-tag&#34;&gt;
    &lt;a href=&#34;#der-form-tag&#34;&gt;
	Der &lt;code&gt;&amp;lt;FORM&amp;gt;&lt;/code&gt;-Tag
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Man kann Teile einer HTML-Seite zu Formularen erklären,
indem man sie in die speziellen Tags &lt;code&gt;&amp;lt;FORM&amp;gt;&lt;/code&gt; und
&lt;code&gt;&amp;lt;/FORM&amp;gt;&lt;/code&gt; einschließt. Innerhalb dieses Bereiches
dürfen dann zusätzliche Tags verwendet werden, um
Bedienelemente und Eingabefelder zu definieren. Eine einzige
HTML-Seite kann mehrere Forms enthalten, und diese verschiedenen
Forms können unterschiedliche CGI-Programme starten, wenn dies
notwendig sein sollte.&lt;/p&gt;
&lt;p&gt;Der &lt;code&gt;&amp;lt;FORM&amp;gt;&lt;/code&gt;-Tag muss in jedem Fall ein
&lt;code&gt;ACTION=&lt;/code&gt;-Attribut haben. Dieses Attribut gibt die URL eines
CGI-Programmes an, das aktiviert werden soll, wenn das Formular
abgeschickt wird. Optional kann der &lt;code&gt;&amp;lt;FORM&amp;gt;&lt;/code&gt;-Tag noch
mit einem Attribut &lt;code&gt;METHOD=&lt;/code&gt; ausgezeichnet werden, das die
Methode der Parameterübergabe spezifiziert. Mögliche
Werte für diese Methode sind &lt;code&gt;GET&lt;/code&gt; oder &lt;code&gt;POST&lt;/code&gt;.
Fehlt die Angabe einer Methode, wird &lt;code&gt;GET&lt;/code&gt; angenommen.
Das folgende Beispiel zeigt ein
leeres Formular, das unser Beispielprogramm &lt;code&gt;hello&lt;/code&gt; aufrufen
soll.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Testformular&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;h1&amp;gt;Testformular&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;form action=&amp;#34;http://server/cgi-bin/hello&amp;#34; method=&amp;#34;get&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Hier Formulardaten einfügen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Dieses leere Formular ist der
Ausgangspunkt für die Gestaltung von HTML-Seiten mit
Formularen.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;der-input-tag&#34;&gt;
    &lt;a href=&#34;#der-input-tag&#34;&gt;
	Der &lt;code&gt;&amp;lt;INPUT&amp;gt;&lt;/code&gt;-Tag
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Innerhalb des Formularteils einer HTML-Seite kann normaler
HTML-Code stehen. Außerdem ist eine Reihe von
zusätzlichen Tags erlaubt, die die Bedienelemente des
Formulars definieren. Der vielseitigste Tag zur Definition dieser
Bedienelemente ist &lt;code&gt;&amp;lt;INPUT&amp;gt;&lt;/code&gt;. Mit ihm lassen sich
außer Feldern zur Eingabe von Texten und Paßworten auch
Check- und Radiobuttons erzeugen. Außerdem kann er versteckte
Eingabefelder definieren und Dateiauswahlboxen zum Upload von
Dateien auf den Server starten.&lt;/p&gt;
&lt;h3 id=&#34;text--und-paßwortfelder&#34;&gt;
    &lt;a href=&#34;#text--und-pa%c3%9fwortfelder&#34;&gt;
	Text- und Paßwortfelder
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die Formen des &lt;code&gt;&amp;lt;INPUT&amp;gt;&lt;/code&gt;-Tags zur Erzeugung von
Text- und Paßwortfeldern sind identisch. Die Tags werden vom
Browser auch identisch dargestellt. Der einzige Unterschied ist,
daß ein Textfeld die Benutzereingaben anzeigt, während
ein Paßwortfeld sie zwar aufnimmt, aber die Eingabe verbirgt.
&lt;strong&gt;Warnung:&lt;/strong&gt; Ein Paßwortfeld verbirgt die Daten zwar bei
der Eingabe, aber der Transport über das Internet erfolgt
offen und unverschlüsselt, wenn nicht besondere Vorkehrungen
zur sicheren Kommunikation getroffen werden.&lt;/p&gt;
&lt;p&gt;Die volle Form eines &lt;code&gt;&amp;lt;INPUT&amp;gt;&lt;/code&gt;-Tags lautet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type={feldtyp} name={variablenname} 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       value={defaultwert} size={feldbreite} maxlength={eingabelänge}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Bis auf die Felder &lt;code&gt;TYPE=&lt;/code&gt; und &lt;code&gt;NAME=&lt;/code&gt; sind die
Attribute des Tags optional. Sie bedeuten im Einzelnen:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;TYPE=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Typ des Feldes bestimmt das Aussehen des Kontrollelementes
auf der HTML-Seite. Er kann für die hier diskutierten
Eingabefelder entweder &lt;code&gt;TEXT&lt;/code&gt; oder &lt;code&gt;PASSWORD&lt;/code&gt;
sein.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;NAME=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Name des Feldes bestimmt den Namen der Variablen, die
später dem CGI-Programm übergeben wird. Der Name dieser
Variablen ist nicht frei wählbar, sondern wird vom
Programmierer des CGI-Programmes festgelegt. Es ist sehr wichtig,
hier Groß- und Kleinschreibung des Namens genau zu
beachten.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;VALUE=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Wenn das optionale Attribut &lt;code&gt;VALUE=&lt;/code&gt; vorhanden und mit
einem Wert belegt ist, wird dieser Wert als Defaultwert des Feldes
vorgegeben. Fehlt das Attribut, ist das Eingabefeld zu Beginn
leer.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SIZE=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Attribut legt fest, wie viele Zeichen Breite das
Eingabefeld am Bildschirm haben soll. Der Defaultwert ist 20
Zeichen.
Ältere CGI-Formulare haben die Form &lt;code&gt;SIZE=x,y&lt;/code&gt;
verwendet, um mehrzeilige Eingabefelder zu erzeugen. Das ist zwar
immer noch prinzipiell möglich, aber der weiter unten
diskutierte Tag &lt;code&gt;&amp;lt;TEXTAREA&amp;gt;&lt;/code&gt; bietet sehr viel bessere
Editiermöglichkeiten.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;MAXLENGTH=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Attribut legt fest, wie lang die Eingabe im Textfeld
wirklich sein darf. Dies ist unabhängig von der mit
&lt;code&gt;SIZE=&lt;/code&gt; festgelegten sichtbaren Breite des Textfeldes.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Die folgende Abbildung zeigt
das mögliche Aussehen eines &lt;code&gt;&amp;lt;INPUT TYPE=&amp;quot;text&amp;quot;&amp;gt;&lt;/code&gt;-Tags.&lt;/p&gt;
&lt;p&gt;Source:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;text&amp;#34; value=&amp;#34;info&amp;#34; size=&amp;#34;23&amp;#34; name=&amp;#34;zeile&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Aussehen:
&lt;input type=&#34;text&#34; value=&#34;info&#34; size=&#34;23&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ein Beispiel mit einem &lt;code&gt;&amp;lt;INPUT TYPE=&amp;quot;text&amp;quot;&amp;gt;&lt;/code&gt;-Tag.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;check--und-radioboxes&#34;&gt;
    &lt;a href=&#34;#check--und-radioboxes&#34;&gt;
	Check- und Radioboxes
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wenn man dem Benutzer keine Eingabe in freier Form erlauben
möchte, bietet es sich für kleine Mengen
auszuwählender Optionen an, je nach Art der Auswahl entweder
Checkboxen oder Radioboxen zu definieren.&lt;/p&gt;
&lt;p&gt;Checkboxen sind kleine Kästchen, die der Benutzer ankreuzen
kann und die eine Option entweder ein- oder ausschalten. Radioboxen
bieten dagegen eine Eins-aus-n-Auswahl an: Unter einer Menge von
Optionen ist nur genau eine auswählbar.&lt;/p&gt;
&lt;p&gt;In beiden Fällen sieht der &lt;code&gt;&amp;lt;INPUT&amp;gt;&lt;/code&gt;-Tag zur
Erzeugung dieser Auswahl so aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type={typ} name={variablenname} value={wert} checked&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Außer dem Attribut &lt;code&gt;CHECKED&lt;/code&gt; sind alle Attribute
dieses Tags vorgeschrieben und dürfen nicht weggelassen
werden. Sie bedeuten:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;TYPE=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Attribut ist entweder &lt;code&gt;CHECKBOX&lt;/code&gt; oder &lt;code&gt;RADIO&lt;/code&gt; und legt damit den Typ des Knopfes fest.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;NAME=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Attribut bestimmt wie immer den Namen der Variable, die dem CGI-Programm übergeben wird.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;VALUE=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Attribut ist im Gegensatz zu &lt;code&gt;TEXT&lt;/code&gt;-Eingaben &lt;strong&gt;nicht&lt;/strong&gt; optional.
Ist die entsprechende Box selektiert, wird die Eingabevariable des CGI-Programmes
mit dem hier angegebenen Wert belegt, sonst ist sie leer.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CHECKED&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses optionale Attribut markiert den Defaultwert der Box. Ist es vorhanden, erscheint die Box angeklickt.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Das folgende Beispiel zeigt das mögliche Aussehen dieser Tags.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;checkbox&amp;#34; value=&amp;#34;doit&amp;#34; name=&amp;#34;check1&amp;#34;&amp;gt;A
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;checkbox&amp;#34; value=&amp;#34;again&amp;#34; name=&amp;#34;check2&amp;#34; checked&amp;gt;B
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;radio&amp;#34; value=&amp;#34;eins&amp;#34; name=&amp;#34;radio1&amp;#34;&amp;gt;A
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;radio&amp;#34; value=&amp;#34;zwei&amp;#34; name=&amp;#34;radio1&amp;#34;&amp;gt;B
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;radio&amp;#34; value=&amp;#34;drei&amp;#34; name=&amp;#34;radio1&amp;#34; checked&amp;gt;C
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;input type=&#34;checkbox&#34; value=&#34;doit&#34; name=&#34;check1&#34;&gt;A
&lt;input type=&#34;checkbox&#34; value=&#34;again&#34; name=&#34;check2&#34; checked&gt;&lt;/p&gt;
&lt;p&gt;&lt;input type=&#34;radio&#34; value=&#34;eins&#34; name=&#34;radio1&#34;&gt;A
&lt;input type=&#34;radio&#34; value=&#34;zwei&#34; name=&#34;radio1&#34;&gt;B
&lt;input type=&#34;radio&#34; value=&#34;drei&#34; name=&#34;radio1&#34; checked&gt;C&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ein Beispiel mit Radio- und Checkboxes.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ein wichtiger Unterschied zwischen Checkboxen und Radioboxen
existiert: Checkboxen müssen immer verschiedene
&lt;code&gt;NAME=&lt;/code&gt;-Attribute haben, denn jede Checkbox existiert für
sich alleine und unabhängig von anderen Checkboxen.&lt;/p&gt;
&lt;p&gt;Radioboxen treten dagegen in Gruppen auf und innerhalb einer
Gruppe von Radioboxen kann immer nur eine selektiert sein. Eine
Gruppe von Radioboxen wird durch gleiche &lt;code&gt;NAME=&lt;/code&gt;-Attribute
definiert.&lt;/p&gt;
&lt;h3 id=&#34;versteckte-eingabefelder&#34;&gt;
    &lt;a href=&#34;#versteckte-eingabefelder&#34;&gt;
	Versteckte Eingabefelder
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Mit einem Eingabefeld vom Typ &lt;code&gt;HIDDEN&lt;/code&gt; lassen sich versteckte Eingabefelder anlegen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;INPUT TYPE=&amp;#34;HIDDEN&amp;#34; NAME={variablennamen} VALUE={wert}&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Solche Eingabefelder sind nicht sichtbar und auch nicht
veränderbar. Sie werden in jedem Fall unverändert an das
CGI-Programm übergeben. Versteckte Eingabefelder sind
nützlich, wenn man ein CGI-Programm mit mehreren Funktionen
hat, bei dem über ein Eingabefeld eine Funktion
ausgewählt werden muss, oder wenn man einen Zustand in
einer dynamisch erzeugten Seite über eine Transaktion hinweg
retten muss.&lt;/p&gt;
&lt;h3 id=&#34;dateiupload&#34;&gt;
    &lt;a href=&#34;#dateiupload&#34;&gt;
	Dateiupload
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Es ist möglich, über ein Eingabefeld vom Typ
&lt;code&gt;FILE&lt;/code&gt; ganze Dateien auf den WWW-Server zu uploaden. Es ist
dringend angeraten, für eine solche Transaktion ein Formular
mit der Methode &lt;code&gt;POST&lt;/code&gt; zu verwenden. Außerdem
muss dem Formular mit dem Attribut
&lt;code&gt;ENCTYPE=multipart/form-data&lt;/code&gt; klargemacht werden, auf welche
Weise der Upload zu geschehen hat.
&lt;em&gt;Hinweis:&lt;/em&gt; &lt;code&gt;FILE&lt;/code&gt; ist eine Netscape-Erweiterung.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;FORM ACTION=&amp;#34;URL&amp;#34; METHOD=&amp;#34;POST&amp;#34; ENCTYPE=&amp;#34;multipart/form-data&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Dateinamen angeben: &amp;lt;INPUT TYPE=&amp;#34;FILE&amp;#34; NAME=&amp;#34;upload&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/FORM&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;absenden-und-rücksetzen&#34;&gt;
    &lt;a href=&#34;#absenden-und-r%c3%bccksetzen&#34;&gt;
	Absenden und Rücksetzen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Mit den gezeigten Tags lassen sich zwar unfangreiche Formulare
erzeugen, aber diese Formulare können noch nicht in Betrieb
genommen werden, denn es fehlt ein Knopf zum Absenden des
Formulars. HTML sieht für diesen Zweck Eingabefelder vom Typ
&lt;code&gt;SUBMIT&lt;/code&gt; vor und bietet außerdem noch Eingabefelder
vom Typ &lt;code&gt;RESET&lt;/code&gt; an, mit dem sich ein Formular auf den
Startzustand zurücksetzen lässt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;INPUT TYPE=&amp;#34;SUBMIT&amp;#34; VALUE=&amp;#34;Formular absenden&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;INPUT TYPE=&amp;#34;RESET&amp;#34; VALUE=&amp;#34;Eingabe löschen&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Jedes Formular muss einen &lt;code&gt;SUBMIT&lt;/code&gt;-Button haben, und
ein Formular kann nur einen &lt;code&gt;SUBMIT&lt;/code&gt;-Button haben.
Das folgende Beispiel zeigt
mögliche Darstellungen dieser Knöpfe.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;Formular absenden&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;reset&amp;#34; value=&amp;#34;Eingabe löschen&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;input type=&#34;submit&#34; value=&#34;Formular absenden&#34; /&gt;
&lt;input type=&#34;reset&#34; value=&#34;Eingabe löschen&#34; /&gt;
&lt;p&gt;&lt;em&gt;Ein Beispiel mit &lt;code&gt;SUBMIT&lt;/code&gt; und &lt;code&gt;RESET&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;der-textarea-tag&#34;&gt;
    &lt;a href=&#34;#der-textarea-tag&#34;&gt;
	Der &lt;code&gt;&amp;lt;TEXTAREA&amp;gt;&lt;/code&gt;-Tag
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Felder zur freien Texteingabe lassen sich mit dem Tag
&lt;code&gt;&amp;lt;TEXTAREA&amp;gt;&lt;/code&gt; definieren. Der Tag hat diese Form:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;TEXTAREA NAME={variablenname} ROWS={zeilen} COLS={spalten}&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Textvorgabe
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/TEXTAREA&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Attribute &lt;code&gt;ROWS=&lt;/code&gt; und &lt;code&gt;COLS=&lt;/code&gt; sind optional.
Die Attribute bedeuten:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;NAME=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Das Attribut legt wie üblich den Namen der CGI-Variablen  fest.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;ROWS=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Das Attribut bestimmt die Höhe des Eingabefeldes in Zeilen.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;COLS=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Das Attribut bestimmt die Breite des Eingabefeldes in Spalten.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Das Ergebnis dieses Tags sieht dann möglicherweise so aus
wie im folgenden Beispiel:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;textarea name=&amp;#34;text&amp;#34; rows=5 cols=20&amp;gt;Beispieltext&amp;lt;/textarea&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;textarea name=&#34;text&#34; rows=5 cols=20&gt;Beispieltext&lt;/textarea&gt;
&lt;p&gt;&lt;em&gt;Ein Beispiel mit &lt;code&gt;TEXTAREA&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Es ist angeraten, &lt;code&gt;&amp;lt;TEXTAREA&amp;gt;&lt;/code&gt; zusammen mit der
Methode &lt;code&gt;POST&lt;/code&gt; zu verwenden.&lt;/p&gt;
&lt;h2 id=&#34;der-select-tag&#34;&gt;
    &lt;a href=&#34;#der-select-tag&#34;&gt;
	Der &lt;code&gt;&amp;lt;SELECT&amp;gt;&lt;/code&gt;-Tag
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Größere Auswahlen von vorgegebenen Werten erzeugt man
wegen des großen Platzverbrauches und im Interesse der
Übersichtlichkeit besser nicht mit Checkboxen oder
Radiobuttons, sondern mit dem &lt;code&gt;&amp;lt;SELECT&amp;gt;&lt;/code&gt;-Tag. Je nach
Konfiguration erzeugt dieser Tag ein Popup-Menü oder eine
Auswahlbox für Mehrfachauswahlen.&lt;/p&gt;
&lt;p&gt;Das Format dieses Tags ist&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;SELECT NAME={variablenname} SIZE={größe} MULTIPLE&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;OPTION SELECTED VALUE={wert}&amp;gt;Option 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;OPTION ...&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/SELECT&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Der &lt;code&gt;&amp;lt;SELECT&amp;gt;&lt;/code&gt;-Tag erfordert nur die Angabe des
Variablennamens mit &lt;code&gt;NAME=&lt;/code&gt;, die anderen Attribute sind
optional. Ein &lt;code&gt;&amp;lt;SELECT&amp;gt;&lt;/code&gt;-Container kann beliebig viele
&lt;code&gt;&amp;lt;OPTION&amp;gt;&lt;/code&gt;-Tags enthalten. Diese können optional
&lt;code&gt;SELECTED&lt;/code&gt; sein und es kann optional ein &lt;code&gt;VALUE=&lt;/code&gt;
festgelegt werden, mit dem die Variable belegt wird, wenn dieses
Element ausgewählt ist.&lt;/p&gt;
&lt;p&gt;Wenn das optionale Attribut &lt;code&gt;MULTIPLE&lt;/code&gt; angegeben ist, ist
die Mehrfachauswahl von Optionen möglich.&lt;/p&gt;
&lt;h1 id=&#34;perl&#34;&gt;
    &lt;a href=&#34;#perl&#34;&gt;
	Perl
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;CGI-Programme können in jeder beliebigen Programmiersprache
geschrieben werden, solange sie in der Lage ist, einen
&lt;code&gt;QUERY_STRING&lt;/code&gt; zu decodieren. Programmiersprachen, die eine
ausgereifte Stringbehandlung und eine automatische
Speicherverwaltung haben, sind besonders geeignet, denn
CGI-Programme benutzen diese Spracheigenschaften meistens sehr
intensiv. Ein Datenbankinterface oder andere Möglichkeiten,
große Datenmengen zu durchsuchen, sind ein zusätzliches
Plus, denn oft müssen CGI-Programme vorhandene Daten für
die Darstellung im Web aufbereiten.&lt;/p&gt;
&lt;p&gt;Die Programmiersprache Perl ist besonders geeignet zur
Programmierung von CGI-Scripten, denn sie macht gerade die
Bearbeitung von Texten und Dateien besonders einfach.
Ursprünglich war Perl eine Sprache zur Reportgenerierung aus
beliebig formatierten Systemlogbüchern. Daher stammen Perls
umfangreiche Einbaufunktionen zum Suchen und Ersetzen von Texten
und zur Formatierung von Reports. Die Weiterentwicklung hat Perl zu
einem sehr mächtigen Werkzeug zur Systemprogrammierung und -steuerung in UNIX gemacht: Gerade die Systemverwalter
größerer Installationen wissen Perl zu nutzen, um
Wartungsabläufe auf ihren Systemen zu automatisieren. Auch die
weite Verfügbarkeit von Perl auf praktisch allen Plattformen,
die ausreichend Speicher zur Verfügung stellen, macht die
Sprache für diese Zwecke interessant.&lt;/p&gt;
&lt;p&gt;Mit dem Aufkommen des World Wide Web hat Perl eine
Leistungsfähigkeit als Sprache zur schnellen Entwicklung von
CGI-Programmen demonstriert. Ein sehr großer Teil aller
CGI-Programme ist zunächst als Perl-Script entwickelt worden.
Oft ist die Leistung diesr Scripte schon ausreichend, so daß
eine Portierung in eine compilierte Sprache sich erübrigt.&lt;/p&gt;
&lt;h2 id=&#34;einfache-perl-programme&#34;&gt;
    &lt;a href=&#34;#einfache-perl-programme&#34;&gt;
	Einfache Perl-Programme
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das berüchtigte &amp;ldquo;Hello, World!&amp;quot;-Programm sieht in Perl so
aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, World\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Es sieht aus wie eine Kreuzung zwischen einem Shellscript und
einem C-Programm. In der Tat ist Perl eine interpretierte Sprache,
denn Perlprogramme müssen nicht compiliert werden, sondern
können wie Shellscripte direkt aufgerufen werden. Genau wie
bei UNIX-Shellscripten gibt die erste Zeile des Programms an,
daß es sich um ein Script handelt und unter welchem Pfad der
Interpreter für diese Scripte zu finden ist. Für das
Script selbst ist eine Zeile, die mit einem &lt;code&gt;#&lt;/code&gt; beginnt, ein
Kommentar, so daß das Script selbst seinen eigenen Aufruf als
Kommentar interpretiert.&lt;/p&gt;
&lt;p&gt;Perlprogramme sind jedoch schneller als Shell-Scripte, denn der
Interpreter übersetzt das Programm beim Aufruf in eine interne
Form und bestimmt auch schon die Adressen der verschiedenen
Funktionen und Variablen. In der Tat steht ein Perlprogramm einem
C-Programm in der Geschwindigkeit nicht viel nach. Seine
Ausführungsgeschwindigkeit ist der von P-Code vergleichbar,
wie ihn einige Microsoft-Compiler zu Speicherersparniszwecken
erzeugen.&lt;/p&gt;
&lt;p&gt;Die Anweisung &lt;code&gt;print&lt;/code&gt; druckt ihr Argument, einen String
nach den Konventionen von C. Wie in C werden Anweisungen in Perl
mit einem Semikolon beendet.&lt;/p&gt;
&lt;h2 id=&#34;benutzereingaben-lesen&#34;&gt;
    &lt;a href=&#34;#benutzereingaben-lesen&#34;&gt;
	Benutzereingaben lesen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die nächste Stufe der Komplexität nach &amp;ldquo;Hello,
World!&amp;rdquo; besteht in der Regel darin, den Namen der zu
grüßenden Person einzulesen und diese Person namentlich
zu begrüßen. Das erfordert die Verwendung von
Operationen zur Eingabe von Daten und natürlich Variablen.&lt;/p&gt;
&lt;p&gt;In Perl gibt es nur einen Typ von Variablen. Sie können
entweder Strings, Integer oder Fließkommazahlen speichern und
sie müssen nicht vereinbart werden. Perl-Variablen können
jedoch in Form von einfachen Werten (&lt;em&gt;Skalaren&lt;/em&gt;), numerisch
indizierten Feldern (&lt;em&gt;Arrays&lt;/em&gt;) oder beliebig indizierten
Tabellen (&lt;em&gt;assoziativen Feldern, Hashtables&lt;/em&gt;) auftreten.
Skalare werden durch das Zeichen Dollar (&lt;code&gt;$&lt;/code&gt;)
gekennzeichnet, so daß &lt;code&gt;$name&lt;/code&gt; eine skalare Variable
mit dem Namen &lt;code&gt;name&lt;/code&gt; bezeichnet. Diese Variable wird ins
Leben gerufen, indem ihr einfach ein Wert zugewiesen wird.&lt;/p&gt;
&lt;p&gt;Um nach einem Namen zu fragen, muss ein Prompt ausgegeben
werden und auf irgendeine Weise eine Eingabe eingelesen werden. Den
Prompt können wir bereits drucken, mit &lt;code&gt;print&lt;/code&gt;. Eine
Eingabe einzulesen, ist ebenfalls sehr einfach, denn wie in C
stehen uns die vordefinierten Filehandles &lt;code&gt;&amp;lt;STDIN&amp;gt;&lt;/code&gt;,
&lt;code&gt;&amp;lt;STDOUT&amp;gt;&lt;/code&gt; und &lt;code&gt;&amp;lt;STDERR&amp;gt;&lt;/code&gt; zur
Verfügung. Perl ist auf Stringverarbeitung optimiert: Um eine
Zeile der Eingabe einzulesen, genügt es, einer Variablen das
Filehandle zuzuweisen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Wie ist Ihr Name? &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Das Ergebnis ist, daß der Skalar &lt;code&gt;$name&lt;/code&gt; eine
Eingabezeile inklusive des Zeilenendezeichens enthält. Wir
können dieses letzte Zeichen abschneiden, indem wir die
Funktion &lt;code&gt;chop()&lt;/code&gt; verwenden, die das letzte Zeichen eines
Strings zurückliefert und als Seiteneffekt den String um
dieses Zeichen kürzt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;chop($name);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Wie in Shell auch können Variablen in Stringkonstanten
verwendet werden: Sie werden vor der Ausgabe durch ihren Wert
ersetzt:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, $name!\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Und wie in Shell auch muss das Dollarzeichen in einem
String durch einen Backslash geschützt werden, wenn es
ausgegeben werden soll.&lt;/p&gt;
&lt;p&gt;Hier noch einmal das ganze Programm:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Wie ist Ihr Name? &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;chop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, $name!\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;variablen-und-konstanten&#34;&gt;
    &lt;a href=&#34;#variablen-und-konstanten&#34;&gt;
	Variablen und Konstanten
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;notation-von-skalaren&#34;&gt;
    &lt;a href=&#34;#notation-von-skalaren&#34;&gt;
	Notation von Skalaren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wie bereits erklärt, unterscheidet Perl nicht nach
verschiedenen Datentypen, und Variablen müssen nicht
vereinbart werden. Einer skalaren Variable kann so ziemlich jeder
Wert zugewiesen werden, der sich in Perl darstellen
lässt. Das können Zahlen wie 42 oder 3.1415926e00
sein oder Zeichenketten beliebiger Länge. Anders als Shell hat
Perl keine Probleme mit binären Zeichen in Strings, ja nicht
einmal Nullbytes machen Schwierigkeiten. Es ist kein Problem, in
Perl Binärprogramme in Strings einzulesen, zu patchen und
wieder zurückzuschreiben.&lt;/p&gt;
&lt;p&gt;Perl wandelt skalare Werte intern automatisch in Zeichenketten
oder in Fließkommazahlen um, je nachdem, welche Art von
Operation mit dem Wert durchgeführt wird. Die Sprache kennt
keine Ganzzahloperationen und arbeitet auch intern niemals mit
ganzen Zahlen, sondern immer mit doppelt genauen
Fließkommazahlen. Zahlen können in Perl wie in C notiert
werden, die folgende Abbildung
gibt einen Überblick.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Format&lt;/th&gt;
          &lt;th&gt;Notation&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Fließkomma&lt;/td&gt;
          &lt;td&gt;1.24&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;7.24e17&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Ganzzahl&lt;/td&gt;
          &lt;td&gt;17&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Ganzzahl (oktal)&lt;/td&gt;
          &lt;td&gt;0377&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Ganzzahl (hex)&lt;/td&gt;
          &lt;td&gt;0xff&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;Zahlenformate in Perl.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wie in der UNIX-Shell kann und muss man auch in Perl
gelegentlich Zeichenketten in Anführungszeichen
einschließen, etwa wenn sie Leerzeichen oder Sonderzeichen
enthalten. In jedem Fall kann man einzelnen Sonderzeichen ihre
Sonderbedeutung nehmen, indem man ihnen einen Backslash
voranstellt. Das gilt natürlich auch für den Backslash
(und die verschiedenen Sorten Anführungszeichen) selbst.&lt;/p&gt;
&lt;p&gt;Einfache Anführungszeichen wirken so, als sei jedes
einzelne Zeichen in der Zeichenkette von einem Backslash
geschützt. Innerhalb der Zeichenkette darf jedes beliebige
Zeichen auftauchen, auch Zeilenumbrüche, wenn sich die
Zeichenkette über mehrere Zeilen erstreckt. Beispiele:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;Hello, World!&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;Don\&amp;#39;t do that, Dave!&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# Der Leerstring.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;Dies ist der Backslash: \\.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;multiline
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;string&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Doppelte Anführungszeichen funktionieren eher so wie
Strings in Shell und C: Innerhalb solcher Zeichenketten werden
Variablen ersetzt, und einige Sonderzeichen können durch
Backslash-Sequenzen notiert werden (siehe die folgende Tabelle).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Aufwachen!\007&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Spalte1\tSpalte2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Zeichen&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Bedeutung&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;\n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Newline&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\r&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Return&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\t&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Tab&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\f&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Formfeed&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\b&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Backspace&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\v&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Vertical Tab&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\a&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Bell&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\e&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Escape&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\007&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Zeichen mit dem oktalen Zahlencode 7&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0x7f&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Zeichen mit dem hex Zahlencode 0x7f&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\cC&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Controlzeichen, hier Control-C&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Backslash&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\l&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Folgendes Zeichen in Kleinschrift wandeln&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\L&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Alle folgenden Zeichen bis \E in Kleinschrift wandeln&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\u&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Folgendes Zeichen in Großschrift wandeln&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\U&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Alle folgenden Zeichen bis \E in Großschrift wandeln&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\E&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Beende \L oder \U&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;Controlzeichen in Perl.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;operationen-mit-skalaren&#34;&gt;
    &lt;a href=&#34;#operationen-mit-skalaren&#34;&gt;
	Operationen mit Skalaren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Perl kennt dieselben numerischen Operationen auf Skalaren, die C auch kennt: &lt;code&gt;+, -, *, /&lt;/code&gt; und &lt;code&gt;%&lt;/code&gt;.
Außerdem ist noch eine Potenzoperation &lt;code&gt;**&lt;/code&gt; definiert.
Numerische Vergleiche werden mit den Operatoren &lt;code&gt;&amp;lt;, &amp;lt;=, ==, &amp;gt;=, &amp;gt;&lt;/code&gt; und &lt;code&gt;!=&lt;/code&gt; vorgenommen.&lt;/p&gt;
&lt;p&gt;Außerdem ist auf Strings die Konkatenation definiert; dazu
wird der Operator Punkt (&lt;code&gt;.&lt;/code&gt;) verwendet. Strings können
mit dem Operator &lt;code&gt;x&lt;/code&gt; auch vervielfacht werden. Strings
werden alphabetisch verglichen, dafür stehen die Operatoren
&lt;code&gt;lt, le, eq, ge, gt&lt;/code&gt; und &lt;code&gt;ne&lt;/code&gt; zur Verfügung. Die
numerischen Operatoren würden &lt;code&gt;7 &amp;lt; 30&lt;/code&gt; als wahr
bewerten, aber &lt;code&gt;7 lt 30&lt;/code&gt; ist falsch.&lt;/p&gt;
&lt;p&gt;Skalare können einfach zugewiesen werden, Perl verhält
sich dabei im Wesentlichen wie C. Der einzige Unterschied ist,
daß Variablen nicht deklariert werden müssen, sondern
nach Bedarf ins Leben gerufen werden. Wie in C existiert zu jedem
arithmetischen Operator auch ein zugehöriger rechnender
Zuweisungsoperator, d.h. man kann &lt;code&gt;+=, -=, *=, /=&lt;/code&gt; und so
weiter verwenden. Ebenso wie in C sind &lt;code&gt;++&lt;/code&gt; und &lt;code&gt;-&lt;/code&gt;
als Pre- und Postoperatoren erlaubt.&lt;/p&gt;
&lt;p&gt;Wird ein Skalar benutzt, bevor er einen Wert zugewiesen bekommen
hat, liefert Perl den speziellen Wert &lt;em&gt;undef&lt;/em&gt;. Dieser Wert
sieht aus wie der Leerstring oder wie eine numerische Null, je
nachdem, in welchem Kontext er verwendet wird. &lt;em&gt;undef&lt;/em&gt; kann
jedoch mit dem Prädikat &lt;code&gt;defined()&lt;/code&gt; abgefragt werden.
Das ist nützlich im Zusammenhang mit Dateien, die am Dateiende
&lt;em&gt;undef&lt;/em&gt; zurückliefern.&lt;/p&gt;
&lt;h3 id=&#34;arrays&#34;&gt;
    &lt;a href=&#34;#arrays&#34;&gt;
	Arrays
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Außer skalaren Werten kann Perl noch Felder und
assoziative Felder bearbeiten. Genau wie bei Strings gibt es auch
bei diesen Datentypen keine Größenbegrenzungen, und
genau wie gewöhnliche Variablen müssen auch die beiden
Arten von Feldern in Perl nicht deklariert werden, sondern
können einfach benutzt werden.&lt;/p&gt;
&lt;p&gt;So wie skalare Variable durch ein &lt;code&gt;$&lt;/code&gt; bezeichnet werden,
kennzeichnet Perl Felder mit einem &lt;code&gt;@&lt;/code&gt; und Hashlisten mit
einem &lt;code&gt;%&lt;/code&gt;-Zeichen. Demnach bezeichnet &lt;code&gt;$name&lt;/code&gt; einen
Skalar mit dem Namen &lt;code&gt;name&lt;/code&gt; und &lt;code&gt;@name&lt;/code&gt; ein Feld
desselben Namens. Perl unterhält unterschiedliche
Namensräume für alle drei Sorten von Objekten, so
daß &lt;code&gt;$name&lt;/code&gt;, &lt;code&gt;@name&lt;/code&gt; und &lt;code&gt;%name&lt;/code&gt;
unterschiedliche Objekte bezeichnen.&lt;/p&gt;
&lt;p&gt;Ebenso wie skalare Konstanten in Perl notiert werden
können, existieren auch Notationen für Felder:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# Ein Feld mit dem drei Werten 1, 2 und 3.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;huhu&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;du&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;da&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Ein Feld mit drei Strings.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Es ist auch möglich, gemischte Felder zu notieren, und die
Feldelemente brauchen keine Konstanten zu sein:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Der Wert von $name und 42.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$vorname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$nachname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$strasse&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$hausnr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Zwei Werte.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Das leere (nullelementige) Feld.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Um große Listen von aufzählenden Zahlenwerten zu
notieren, existiert in Perl außerdem noch eine
Abkürzung:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# Die ganzen Zahlen von 1 bis 10.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;11.9&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;15.9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Die Zahlen 11.9, 12.9, .., 15.9.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Die Zahlen 2, 3, 5, 6, 7, 8 und 9.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Der Bereich von $start bis $stop.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Solche Listen zählen immer nur aufsteigend. Wenn der rechte
Wert kleiner ist als der linke Wert, entsteht die leere Liste. Der
Operator &lt;code&gt;print&lt;/code&gt; kann ebenfalls Listen drucken; die Ausgabe
erfolgt ohne Leerzeichen zwischen den Listenelementen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Der Name ist &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Der Name ist $name\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# schöner&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;operationen-mit-arrays&#34;&gt;
    &lt;a href=&#34;#operationen-mit-arrays&#34;&gt;
	Operationen mit Arrays
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Arrays werden in Perl genauso zugewiesen wie Skalare,
nämlich mit &lt;code&gt;=&lt;/code&gt;. Perl erkennt, ob es sich um eine
Zuweisung von Arrays oder Skalaren handelt, indem es die linke
Seite der Zuweisung analysiert und feststellt, ob es sich dabei um
einen skalaren oder um einen Arraykontext handelt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@lall&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Das Feld @lall besteht jetzt aus 3 Elementen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@bla&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@lall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# In Perl können ganze Felder zugewiesen werden.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# 1 wird zu (1) und dann zugewiesen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In der Elementliste auf der rechten Seite der Zuweisung
können auch wieder Arrays als Elemente auftauchen. Sie werden
bei der Zuweisung durch ihre Elemente ersetzt. Auf diese Weise ist
es möglich, vorne und hinten in das Feld Elemente
einzufügen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@lall&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@bla&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@lall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# wird zu (0..4).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Enthält eine Liste nur Variablen, kann sie auch als linke
Seite einer Zuweisung verwendet werden. Auf diese Weise kann man
bequem beliebig viele Elemente eines Feldes permutieren. Wenn die
linke Liste einer Zuweisung weniger Elemente hat als das Feld auf
der rechten Seite, werden die überzähligen Elemente
verworfen. Es ist aber auch möglich, als letztes Element der
linken Seite ein Feld zu verwenden, das diese Elemente dann
aufnimmt:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# $a und $b vertauschen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# $b ist $d, $e ist verloren.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# $b[0] ist $d, $b[1] ist $e.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Wird ein Feld in einem skalaren Kontext verwendet, wird die
Länge des Feldes für das Feld eingesetzt. Die Länge
eines Feldes &lt;code&gt;@name&lt;/code&gt; kann aber auch mit der Variablen
&lt;code&gt;$#name&lt;/code&gt; abgefragt werden.&lt;/p&gt;
&lt;p&gt;Auf die Elemente eines Feldes &lt;code&gt;@name&lt;/code&gt; kann durch
Indizierung wie in C zugegriffen werden. Die Elemente eines Feldes
sind Skalare, daher sind sie mit dem Prefix &lt;code&gt;$&lt;/code&gt; zu versehen.
Es ist möglich, beliebigen einzelnen Feldelementen Werte
zuzuweisen. Perl vergrößert das Feld nach Bedarf,
eventuell vorhandene Lücken werden mit &lt;em&gt;undef&lt;/em&gt;
aufgefüllt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# das erste Element des Feldes @name.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Anders als in C kann in Perl auch auf eine Liste von
Arrayelementen zugegriffen werden. Dies wird als eine
&lt;em&gt;array slice&lt;/em&gt; bezeichnet. In diesem Fall handelt es sich um einen
Arraykontext, daher also das Prefix &lt;code&gt;@&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# entspricht ($fasel[0], $fasel[1])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Feldelemente tauschen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Mit den Operatoren &lt;code&gt;push&lt;/code&gt; und &lt;code&gt;pop&lt;/code&gt; kann Perl ein
Array wie einen Stack verwenden. Es ist möglich, mehrere Werte
(oder ganze Felder) auf einmal zu pushen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@einStack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$einWert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@einStack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$einWert&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@einStack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Während &lt;code&gt;push&lt;/code&gt; und &lt;code&gt;pop&lt;/code&gt; die rechte Seite
eines Arrays bearbeiten (d.h. an den hohen Indizes manipulieren),
verändern &lt;code&gt;shift&lt;/code&gt; und &lt;code&gt;unshift&lt;/code&gt; die linke Seite
des Feldes. &lt;code&gt;shift&lt;/code&gt; entspricht dabei dem gleichnamigen
Shell-Operator, und &lt;code&gt;unshift&lt;/code&gt; ist seine Umkehrung.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reverse&lt;/code&gt; liefert die Elemente eines Feldes in
umgekehrter Reihenfolge, &lt;code&gt;sort&lt;/code&gt; liefert sie alphabetisch
sortiert, und &lt;code&gt;chop&lt;/code&gt; ist auch auf alle Elemente eines Feldes anwendbar.&lt;/p&gt;
&lt;p&gt;Dateihandles wie &lt;code&gt;&amp;lt;STDIN&amp;gt;&lt;/code&gt; können auch Arrays
zugewiesen werden. Sie lesen dann die ganze Datei auf einmal ein
und weisen jede Zeile einem Feldelement zu.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@lines&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@reverselines&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@lines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@sortlines&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@lines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@sortlines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@reverselines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;kontrollstrukturen&#34;&gt;
    &lt;a href=&#34;#kontrollstrukturen&#34;&gt;
	Kontrollstrukturen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In Perl werden wie in C Blöcke von Anweisungen gebildet,
indem man die Anweisungen in geschweifte Klammern
einschließt. Diese Anweisungen werden linear
ausgeführt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisung_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisung_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisung_n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Wie in C ist es möglich, Bedingungen zu formulieren. Anders
als in C &lt;strong&gt;müssen&lt;/strong&gt; die geschweiften Klammern immer
vorhanden sein, auch dann, wenn nur eine Anweisung von der
Bedingung abhängig ist. Der &lt;code&gt;else&lt;/code&gt;-Block kann
weggelassen werden. Mit Hilfe von &lt;code&gt;elsif&lt;/code&gt; können
Entscheidungen kaskadiert werden, ohne daß sich die
Einrücktiefe bis ins Unendliche steigert.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bedingung&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;elsif&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;neue_bedingung&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In Perl werden Bedingungen als Strings berechnet. Bedingungen
sind genau dann falsch, wenn sie entweder genau den String
&lt;code&gt;0&lt;/code&gt; oder den leeren String ergeben. Alle anderen Werte (1, 17,
0.000, 00) sind wahr.&lt;/p&gt;
&lt;p&gt;Eine etwas seltsame Konstruktion in Perl ist die
&lt;code&gt;unless&lt;/code&gt;-Anweisung, die im Prinzip ein &lt;code&gt;if&lt;/code&gt; ohne
&lt;code&gt;then&lt;/code&gt; darstellt (Die Anweisung &lt;code&gt;die&lt;/code&gt; beendet ein
Perl-Programm mit einer Fehlermeldung).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Wie ist Dein Name? &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;unless&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;eq&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Kristian&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;die&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zugriff verweigert.\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Eine andere seltsame Konstruktion ist das einzelnen Anweisungen
nachgestellte &lt;code&gt;if&lt;/code&gt; oder &lt;code&gt;unless&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;die&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zugriff verweigert.\n&amp;#34;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;unless&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;eq&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Kristian&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Perl ist in der Lage, einen Block von Anweisungen zu
wiederholen, solange eine Bedingung wahr (&lt;code&gt;while&lt;/code&gt;) oder
falsch (&lt;code&gt;until&lt;/code&gt;) ist. Ebenso ist eine zu C analoge
&lt;code&gt;for&lt;/code&gt;-Anweisung zum Zählen vorhanden. Die Syntax ist in
allen Fällen wie in C, nur daß die geschweiften Klammern
nicht entfallen dürfen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bedingung&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;until&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bedingung&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zählanweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;arbeits_anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Zusätzlich ist Perl in der Lage, einen Block für jedes
Element eines Feldes auszuführen. Das ist bequemer, als erst
die Länge eines Feldes zu bestimmen und es dann
durchzuzählen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$zähler&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@eineListe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Schleifen können mit &lt;code&gt;last&lt;/code&gt; und &lt;code&gt;next&lt;/code&gt;
vorwärts und rückwärts kurzgeschlossen werden, d.h.
&lt;code&gt;last&lt;/code&gt; entspricht dem &lt;code&gt;break&lt;/code&gt; in C und &lt;code&gt;next&lt;/code&gt;
entspricht dem &lt;code&gt;continue&lt;/code&gt; von C.&lt;/p&gt;
&lt;p&gt;Blöcke können in Perl mit einem Label markiert werden.
&lt;code&gt;last&lt;/code&gt; und &lt;code&gt;next&lt;/code&gt; können mithilfe dieser Labels
mehrere Ebenen auf einmal verlassen oder kurzschließen.&lt;/p&gt;
&lt;h2 id=&#34;assoziative-arrays&#34;&gt;
    &lt;a href=&#34;#assoziative-arrays&#34;&gt;
	Assoziative Arrays
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Assoziative Arrays&lt;/em&gt; oder &lt;em&gt;Hashlisten&lt;/em&gt; sind
programmtechnisch eine Verallgemeinerung von Arrays. Statt
ganzzahliger Ausdrücke kann in einer Hashliste ein beliebiger
String als Index verwendet werden. Über diesen String kann
jederzeit auf dem mit dem String assoziierten Wert zugegriffen
werden. Man kann sich eine solche Hashliste auch als Tabelle mit
zwei Spalten vorstellen: Jedem String aus der linken Spalte (den
&lt;em&gt;Schlüsseln&lt;/em&gt;) ist der zugehörige String auf der
rechten Seite (ein &lt;em&gt;Wert&lt;/em&gt;) zugeordnet. Anders als in einer
richtigen Tabelle oder in einem Array haben die Elemente in einer
Hashliste aber keine vorgegebene Ordnung. Würde man sie
aufzählen (z.B. in einer &lt;code&gt;foreach&lt;/code&gt;-Schleife),
bekäme man irgendeine Reihenfolge.&lt;/p&gt;
&lt;p&gt;In Perl werden assoziative Felder durch ein Prozentzeichen
(&lt;code&gt;%&lt;/code&gt;) markiert. In einem Arraykontext werden sie wie ein
normales Array mit einer geraden Anzahl von Feldern behandelt. Die
geraden Positionen dieses Arrays beginnend bei 0 sind mit
Schlüsseln belegt, die ungeraden Positionen mit den zu diesen
Schlüsseln gehörenden Werten. Die Funktion
&lt;code&gt;keys()&lt;/code&gt; liefert die Schlüssel eines solchen Feldes und die
Funktion &lt;code&gt;values()&lt;/code&gt; die Werte.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;%vorname_von&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Köhntopp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Kristian&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;Seeger&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Martin&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;Rump&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Birgit&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Reihenfolge ist zufällig!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%vorname_von&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# Köhntopp, Seeger, Rump&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%vorname_von&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Kristian, Martin, Birgit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Der Zugriff auf einzelne Elemente erfolgt wie bei Feldern durch
Indizierung, aber der Indexoperator besteht hier aus den
geschweiften Klammern.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Reihenfolge ist zufällig&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%vorname_von&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Der Vorname von $i ist $vorname_von{$i}.\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;keys&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%vorname_von&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Der Vorname von $i ist $vorname_von{$i}.\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Einzelne Elemente lassen sich mit dem Operator &lt;code&gt;delete&lt;/code&gt;
aus dem Feld löschen (man kann auch das ganze Feld
löschen).&lt;/p&gt;
&lt;h2 id=&#34;eingabe-und-ausgabe&#34;&gt;
    &lt;a href=&#34;#eingabe-und-ausgabe&#34;&gt;
	Eingabe und Ausgabe
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;standardeingabe&#34;&gt;
    &lt;a href=&#34;#standardeingabe&#34;&gt;
	Standardeingabe
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wie bereits gezeigt, kann man eine Zeile der Eingabe einlesen,
indem man das Filehandle der Eingabe an eine skalare Variable
zuweist. Wenn keine Eingabezeile mehr verfügbar ist, wird der
Wert &lt;em&gt;undef&lt;/em&gt; zugewiesen. Weist man ein Filehandle stattdessen
an ein Array zu, wird die gesamte Datei bis zum Dateiende
zugewiesen und jedem Arrayelement eine Zeile zugeordnet.&lt;/p&gt;
&lt;p&gt;Oft möchte man eine Datei zeilenweise durchlesen und
für jede Zeile einer Operation ausführen. Für die
Standardeingabe sieht das so aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Zeile drucken&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Schleife beendet sich am Dateiende, da der Wert &lt;em&gt;undef&lt;/em&gt;
zum Leerstring expandiert und dieser String als false-Wert gilt.
Leere Eingabezeilen bestehen aber immerhin noch aus einem
Newline-Zeichen, sind also keine Leerstrings.&lt;/p&gt;
&lt;p&gt;In Perl ist es so, daß für viele Operatoren die
Variable &lt;code&gt;$_&lt;/code&gt; als Defaultvariable angenommen wird, wenn
keine Variable angegeben wird. Tatsächlich kann man das
Beispiel auch so schreiben:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Zeile drucken&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In diesem Fall wird statt der Variablen &lt;code&gt;$i&lt;/code&gt; die
Standardvariable &lt;code&gt;$_&lt;/code&gt; verwendet.&lt;/p&gt;
&lt;h3 id=&#34;argv-und-env&#34;&gt;
    &lt;a href=&#34;#argv-und-env&#34;&gt;
	&lt;code&gt;@ARGV&lt;/code&gt; und &lt;code&gt;%ENV&lt;/code&gt;
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die Kommandozeilenparameter eines Perlprogrammes stehen in der
vordefinierten Arrayvariablen &lt;code&gt;@ARGV&lt;/code&gt; zur Verfügung.
Das spezielle Dateihandle &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; interpretiert diese
Namen der Reihe nach als Dateinamen und liest alle diese Dateien
durch. Das Programm&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Zeile drucken&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;entspricht also dem UNIX-Kommando &lt;code&gt;cat&lt;/code&gt;. Es kann
&lt;code&gt;perlcat a b c&lt;/code&gt; aufgerufen werden und gibt nacheinander die
Inhalte aller drei Dateien als eine Datei auf der Standardausgabe
aus.&lt;/p&gt;
&lt;p&gt;Im assoziativen Array &lt;code&gt;%ENV&lt;/code&gt; stellt Perl alle
Umgebungsvariablen zur Verfühgung. Die Schlüssel sind
jeweils der Name, die Werte sind die Werte der
Umgebungsvariablen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Finde den Pfad des Homeverzeichnisses&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# des Benutzers.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$ENV&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;HOME&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;printf&#34;&gt;
    &lt;a href=&#34;#printf&#34;&gt;
	&lt;code&gt;printf&lt;/code&gt;
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wem die Ausgabe von Variablen mit &lt;code&gt;print&lt;/code&gt; zu langweilig
oder zu umständlich ist, der kann statt dessen &lt;code&gt;printf&lt;/code&gt;
verwendet. Diese Anweisung akzeptiert einen Formatstring wie die
gleichnamige C-Funktion und eine Liste von Variablen, die
entsprechend dem Formatstring formatiert werden.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;printf &amp;#34;%10s %05d %7.2f\n&amp;#34;, $s, $i, $f;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;reguläre-ausdrücke&#34;&gt;
    &lt;a href=&#34;#regul%c3%a4re-ausdr%c3%bccke&#34;&gt;
	Reguläre Ausdrücke
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Viele Perl-Anweisungen und Funktionen machen von regulären
Ausdrücken Gebrauch. Ein regulärer Ausdruck ist ein
Suchmuster, das gegen eine Zeichenkette verglichen wird und
entweder paßt oder nicht. Oft kommt es nur darauf an, ob der
Ausdruck paßt oder nicht, manchmal möchte man auch noch
wissen, welcher Teil der Zeichenkette genau gepasst hat, etwa
um ihn zu ersetzen.&lt;/p&gt;
&lt;p&gt;Reguläre Ausdrücke werden von vielen UNIX-Programmen
verwendet, darunter &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;sed&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;,
&lt;code&gt;ed&lt;/code&gt;, &lt;code&gt;vi&lt;/code&gt;, &lt;code&gt;emacs&lt;/code&gt; und die verschiedenen Shells.
Jedes dieser Programme hat eine leicht unterschiedliche Art der
Notation für reguläre Ausdrücke, und auch die
Leistungsfähigkeit unterscheidet sich gelegentlich etwas.
Perls reguläre Ausdrücke sind eine Obermenge aller dieser
Verfahren: Jeder reguläre Ausdruck, der in einem der genannten
Werkzeuge formuliert werden kann, kann auch in Perl formuliert
werden, muss aber evtl. leicht umformuliert werden.&lt;/p&gt;
&lt;p&gt;In Perl werden reguläre Ausdrücke notiert, indem sie
in Schrägstriche (&lt;em&gt;slashes&lt;/em&gt;) eingeschlossen werden. Die
einfachste Form von regulären Ausdrücken sieht so
aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/abc/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;$_&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Im Beispiel wird die Einbauvariable &lt;code&gt;$_&lt;/code&gt; gegen den
regulären Ausdruck getestet und wenn eine Übereinstimmung
erzielt wird, wird der String gedruckt. Die volle Syntax des &lt;i&gt;
match&lt;/i&gt;-Operators lautet&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$variable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=~&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;m/regexp/o&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptionen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dieser Ausdruck vergleicht den Inhalt der Variablen
&lt;code&gt;$variable&lt;/code&gt; gegen den regulären Ausdruck &lt;code&gt;regexp&lt;/code&gt;.
Dabei kann der Ablauf des Matchvorgangs mit einigen einbuchstabigen
Operationen beeinflusst werden (die wichtigste Option ist
&lt;code&gt;i&lt;/code&gt;, ignore case). Auch die Trennzeichen (Slashes) können
durch andere, frei gewählte Trennzeichen ersetzt werden. Der
Match selbst ergibt einen Wahrheitswert, ,,1`` oder den
Leerstring.&lt;/p&gt;
&lt;p&gt;Perl kennt die folgenden Regeln zur Konstruktion von
regulären Ausdrücken:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Alle Zeichen, denen im folgenden keine besondere Bedeutung
zugewiesen wird, stehen in einem regulären Ausdruck für
sich selbst. Der reguläre Ausdruck &lt;code&gt;a&lt;/code&gt; paßt also
auf einen String, der &lt;code&gt;a&lt;/code&gt; enthält.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Das Zeichen Punkt steht für ein einzelnes, beliebiges
Zeichen außer Newline. Der reguläre Ausdruck &lt;code&gt;.&lt;/code&gt;
paßt also auf alle Strings, die mindestens ein beliebiges
Zeichen außer Newline enthalten.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Eine in eckige Klammern eingeschlossene Zeichenmenge steht
für ein einzelnes Zeichen aus dieser Menge. Beginnt die Menge
mit einem Dach, steht die Menge für ein einzelnes Zeichen, das
nicht in der Menge ist. Der Ausdruck &lt;code&gt;[abc]&lt;/code&gt; paßt also
entweder auf das Zeichen &lt;code&gt;a&lt;/code&gt; oder das Zeichen &lt;code&gt;b&lt;/code&gt;
oder das Zeichen &lt;code&gt;c&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perl kennt einige vordefinierte Zeichenklassen (und deren
Negationen), die oft benötigt werden:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Kürzel&lt;/th&gt;
          &lt;th&gt;Bedeutung&lt;/th&gt;
          &lt;th&gt;Kürzel&lt;/th&gt;
          &lt;th&gt;Bedeutung&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;\d (digits)&lt;/td&gt;
          &lt;td&gt;[0-9]&lt;/td&gt;
          &lt;td&gt;\D (not digits)&lt;/td&gt;
          &lt;td&gt;[^0-9]&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\w (words)&lt;/td&gt;
          &lt;td&gt;[a-zA-Z0-9_]&lt;/td&gt;
          &lt;td&gt;\W (not words)&lt;/td&gt;
          &lt;td&gt;[^a-zA-Z0-9_]&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\s (space)&lt;/td&gt;
          &lt;td&gt;[ \r\t\n\f]&lt;/td&gt;
          &lt;td&gt;\S (not space)&lt;/td&gt;
          &lt;td&gt;[^ \r\n\t\f]&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mehrere Teilausdrücke können einfach
aneinandergereiht werden. Der resultierende Ausdruck paßt
dann auf eine Folge von Zeichen, auf die jeweils die
Teilausdrücke passen würden. Im Klartext bedeutet das,
daß etwa &lt;code&gt;abc&lt;/code&gt; auf ein &lt;code&gt;a&lt;/code&gt; gefolgt von einem
&lt;code&gt;b&lt;/code&gt; gefolgt von einem &lt;code&gt;c&lt;/code&gt; paßt, und daß
etwa &lt;code&gt;a.c&lt;/code&gt; auf ein &lt;code&gt;a&lt;/code&gt; gefolgt von einem beliebigen
Zeichen außer Newline gefolgt von &lt;code&gt;c&lt;/code&gt; paßt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Der Stern &lt;code&gt;*&lt;/code&gt; paßt auf null oder mehr
Wiederholungen des folgenden Zeichens. Der Ausdruck &lt;code&gt;ab*c&lt;/code&gt;
paßt also auf &lt;code&gt;ac&lt;/code&gt;, &lt;code&gt;abc&lt;/code&gt;, &lt;code&gt;abbc&lt;/code&gt; und so
weiter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Das Pluszeichen &lt;code&gt;+&lt;/code&gt; paßt auf eine oder mehr
Wiederholungen des folgenden Zeichens. Der Ausdruck &lt;code&gt;ab+c&lt;/code&gt;
paßt also auf &lt;code&gt;abc&lt;/code&gt;, &lt;code&gt;abbc&lt;/code&gt; und so weiter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Das Fragezeichen &lt;code&gt;?&lt;/code&gt; paßt auf eine oder eine
Wiederholung des folgenden Zeichens. Der Ausdruck &lt;code&gt;ab?c&lt;/code&gt;
paßt also auf &lt;code&gt;ac&lt;/code&gt; oder &lt;code&gt;abc&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hinter einem Zeichen kann in geschweiften Klammer ein
genereller Multiplikator &lt;code&gt;{n.m}&lt;/code&gt; angegeben werden. Der Ausdruck paßt
dann auf &lt;code&gt;n&lt;/code&gt; bis &lt;code&gt;m&lt;/code&gt; Wiederholungen dieses Zeichens.
Wird nur eine Zahl angegeben, paßt der Ausdruck auf genau
&lt;code&gt;n&lt;/code&gt; Wiederholungen des Zeichens. Wird die zweite Grenze
&lt;code&gt;m&lt;/code&gt; weggelassen, wird für sie unendlich eingesetzt.&lt;/p&gt;
&lt;p&gt;Der Stern ist also ein Kürzel für &lt;code&gt;{0,}&lt;/code&gt;, das Pluszeichen
steht für &lt;code&gt;{1,}&lt;/code&gt; und das Fragezeichen für &lt;code&gt;{0,1}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mit runden Klammern &lt;code&gt;()&lt;/code&gt; können Teile eines Ausdruckes markiert werden. Diese Markierungen stehen im selben
Ausdruck unter den Namen &lt;code&gt;\1&lt;/code&gt;, &lt;code&gt;\2&lt;/code&gt; und so weiter zur
Verfügung. Der reguläre Ausdruck &lt;code&gt;a(.+)b\1c&lt;/code&gt; paßt also auf einen String, der ein
&lt;code&gt;a&lt;/code&gt; gefolgt von einer Anzahl beliebiger Zeichen, gefolgt von
einem &lt;code&gt;b&lt;/code&gt; gefolgt von exakt demselben String wie zwischen
&lt;code&gt;a&lt;/code&gt; und &lt;code&gt;b&lt;/code&gt; gefolgt von einem &lt;code&gt;c&lt;/code&gt;
enthält. Passend wäre also &lt;code&gt;addbddc&lt;/code&gt; oder
&lt;code&gt;ahallobhalloc&lt;/code&gt;, aber nicht &lt;code&gt;addbhalloc&lt;/code&gt;. Letzterer
String würde aber auf den Ausdruck &lt;code&gt;a.+b.+c&lt;/code&gt; passen.&lt;/p&gt;
&lt;p&gt;Nach einem Match (und bis zum nächsten Gebrauch des
Match-Operators) stehen die markierten Teilstrings in den
besonderen Perl-Variablen &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt; und so weiter
zur Verfügung.&lt;/p&gt;
&lt;p&gt;Außerdem binden die Klammern Teilausdrücke zusammen:
&lt;code&gt;abc*&lt;/code&gt; paßt auf &lt;code&gt;ab&lt;/code&gt;, &lt;code&gt;abc&lt;/code&gt;,
&lt;code&gt;abcc&lt;/code&gt; und so weiter, während &lt;code&gt;(abc)*&lt;/code&gt; auf den
leeren String, &lt;code&gt;abc&lt;/code&gt;, &lt;code&gt;abcabc&lt;/code&gt; und so weiter
paßt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Und schließlich lassen sich mit dem Pipelinezeichen noch
Alternativen deklarieren. Der Ausdruck &lt;code&gt;lall|laber&lt;/code&gt;
paßt entweder auf den String &lt;code&gt;lall&lt;/code&gt; oder auf den
String &lt;code&gt;laber&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ein Dach markiert den Anfang eines Strings und ein
Dollarzeichen das Ende eines Strings. Der Ausdruck
&lt;code&gt;^x$&lt;/code&gt; paßt also auf einen String, der genau nur
aus dem Zeichen &lt;code&gt;x&lt;/code&gt; besteht.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Außer dem m-Operator zum Matchen kennt Perl auch noch
einen s-Operator zum Suchen und Ersetzen in einem String:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;variable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;~ s/alt/neu/optionen&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Diese Operation ersetzt in der Variablen &lt;code&gt;$variable&lt;/code&gt; alle
Vorkommen des regulären Ausdrucks &lt;code&gt;alt&lt;/code&gt; durch
&lt;code&gt;neu&lt;/code&gt;. Der Ausdruck &lt;code&gt;neu&lt;/code&gt; darf dabei ebenfalls
Klammermarkierungen enthalten. So würde &lt;code&gt;s/a(.+)b/x\1y/&lt;/code&gt;
in einem String ein Vorkommen von paarigen
&lt;code&gt;a&lt;/code&gt; und &lt;code&gt;b&lt;/code&gt; durch passende &lt;code&gt;x&lt;/code&gt; und &lt;code&gt;y&lt;/code&gt;
ersetzen, ohne daß der Text dazwischen irgendwie
beeinflusst wäre.&lt;/p&gt;
&lt;p&gt;Außer der Option &lt;code&gt;i&lt;/code&gt; (ignore case) kennt der
s-Operator auch noch die Option &lt;code&gt;g&lt;/code&gt; (global search and
replace), die nicht nur ein einzelnes Vorkommen von &lt;code&gt;alt&lt;/code&gt;
ersetzt, sondern alle.&lt;/p&gt;
&lt;h3 id=&#34;split-und-join&#34;&gt;
    &lt;a href=&#34;#split-und-join&#34;&gt;
	&lt;code&gt;split()&lt;/code&gt; und &lt;code&gt;join()&lt;/code&gt;
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die Perlfunktion &lt;code&gt;split()&lt;/code&gt; kann dazu verwendet werden,
einen Skalar mit Hilfe eines regulären Ausdrucks in ein Feld
zu zerlegen. &lt;code&gt;split()&lt;/code&gt; nimmt dazu den String und wendet den
regulären Ausdruck wiederholt auf den String an. Alle Teile
des Strings, die auf den regulären Ausdruck passen, werden zu
Trennzeichen, und die Teile des Strings, die nicht auf den Ausdruck
passen, werden zu Feldelementen.&lt;/p&gt;
&lt;p&gt;Eine Zeile der Paßwortdatei in UNIX sieht zum Beispiel so
aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;kris:_:100:20:Kristian Köhntopp:/home/kris:/bin/bash&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Mit dem Aufruf &lt;code&gt;split(/:/, $line);&lt;/code&gt; wendet Perl den
regulären Ausdruck &lt;code&gt;/:/&lt;/code&gt; auf diese Zeile an. Der
Ausdruck paßt auf alle Doppelpunkte, diese werden also
Trennzeichen. Die Worte &lt;code&gt;kris&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;100&lt;/code&gt;,
&lt;code&gt;20&lt;/code&gt;, &lt;code&gt;Kristian Köhntopp&lt;/code&gt;, &lt;code&gt;/home/kris&lt;/code&gt;
und &lt;code&gt;/bin/bash&lt;/code&gt; werden die Feldelemente 0 bis 6 des
Ergebnisfeldes von &lt;code&gt;split&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Wendet man &lt;code&gt;split()&lt;/code&gt; in einem Arraykontext an, bekommt
man das gesamte Feld als Ergebnis (und kann seine Länge mit
&lt;code&gt;$#feld&lt;/code&gt; feststellen). In einem skalaren Kontext bekommt man
von &lt;code&gt;split()&lt;/code&gt; die Länge des Feldes als Ergebnis.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$laenge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/:/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# ergibt 6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@feld&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/:/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# ergibt $feld[0] = &amp;#34;kris&amp;#34; usw.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                             &lt;span class=&#34;c1&#34;&gt;# $#feld ist auch 6.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Andererseits kann man mit &lt;code&gt;join()&lt;/code&gt; ein Feld mit
beliebigen Trennzeichen zu einem Skalar zusammenfügen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@feld&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;würde das zerlegte Paßwortfeld von oben wieder
zusammensetzen.&lt;/p&gt;
&lt;h2 id=&#34;funktionen&#34;&gt;
    &lt;a href=&#34;#funktionen&#34;&gt;
	Funktionen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Es ist möglich, in Perl eigene Funktionen zu definieren.
Die Syntax ist folgendermaßen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;sub&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$wert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Diese Anweisungen definieren eine Funktion mit dem Namen
&lt;code&gt;name&lt;/code&gt;, die einen Rückgabewert in &lt;code&gt;$wert&lt;/code&gt; berechnet.
Die Namen von Funktionen sind von den Namen von Skalaren, Arrays
und Hashlisten unabhängig. Funktionen werden mit einem
Undzeichen aufgerufen. Die Funktion &lt;code&gt;name&lt;/code&gt; kann also so
aufgerufen werden:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;# name aufrufen und das Ergebnis verwerfen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$var&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# name aufrufen und das Ergebnis nutzen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Funktionen können mit Argumenten aufgerufen werden. Diese
Argumente stehen im Feld &lt;code&gt;@_&lt;/code&gt; zur Verfügung. Sie
können also mit &lt;code&gt;$_[0]&lt;/code&gt; und so weiter angesprochen
werden.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;sub&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Variablen in Funktionen sind global. Die Variable
&lt;code&gt;$summe&lt;/code&gt; in der Funktion oben würde also eine gleichnamige
Variable anderswo im Programm überschreiben. Mit Hilfe des
Operators &lt;code&gt;local()&lt;/code&gt; ist es möglich, lokale Variablen zu
deklarieren:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;sub&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Auf diese Weise kann man auch die Funktionsparameter in ein
bekanntes Feld umkopieren:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;sub&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@werte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@werte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;cgi-programme-in-perl&#34;&gt;
    &lt;a href=&#34;#cgi-programme-in-perl&#34;&gt;
	CGI-Programme in Perl
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;cgi-libpl-und-testcgipl&#34;&gt;
    &lt;a href=&#34;#cgi-libpl-und-testcgipl&#34;&gt;
	&lt;code&gt;cgi-lib.pl&lt;/code&gt; und &lt;code&gt;testcgi.pl&lt;/code&gt;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Zur CGI-Programmierung stehen in Perl eine ganze Reihe von
Funktionspaketen zur Verfügung. Ein sehr einfaches
Funktionspaket ist die &lt;code&gt;cgi-lib.pl&lt;/code&gt; von Steven E. Brenner. Dieses Paket kann die
Eingabedaten von GET und POST-Methoden einlesen und decodieren. Es
stellt die Werte der einzelnen Eingabevariablen dann in dem
assoziativen Feld &lt;code&gt;%in&lt;/code&gt; zur Verfügung. Neben dieser
Grundfunktionalität sind zusätzlich noch einige
Hilfsfunktionen zum Debugging vorhanden.&lt;/p&gt;
&lt;p&gt;Der Gebrauch des Paketes ist wie folgt: Im
Bibliotheksverzeichnis von Perl muss die Datei &lt;code&gt;cgi-lib.pl&lt;/code&gt; installiert sein. Das eigene Perlscript muss
dann so anfangen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Paket aktivieren.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;cgi-lib.pl&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;die&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;cgi-lib.pl nicht gefunden.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Einlesen und Zerlegen der GET/POST-Variablen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReadParse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# html-Header erzeugen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PrintHeader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Debugausgabe&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;title&amp;gt;Test CGI&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;h1&amp;gt;Test CGI&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;h2&amp;gt;Eingabevariablen:&amp;lt;/h2&amp;gt;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PrintVariables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\n&amp;lt;h2&amp;gt;Umgebungsvariablen&amp;lt;/h2&amp;gt;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PrintVariables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%ENV&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;hr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;Erzeugt von test-cgi.pl
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;/html&amp;gt;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Das Script muss ausführbar gemacht werden und dann
unter einer passenden URL aufgerufen werden (zum Beispiel: &lt;code&gt;http://white/cgi-bin/testcgi.pl&lt;/code&gt;). Ihm können von einem
Formular oder manuell beliebige Parameter mitgegeben werden. Seine
Ausgabe sieht dann zum Beispiel so aus (mit einigen Parametern
aufgerufen):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Test CGI
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Eingabevariablen:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;lall
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    laber
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;probe
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    hallo
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Umgebungsvariablen
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;DOCUMENT_ROOT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    /home/www
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;GATEWAY_INTERFACE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    CGI/1.1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;... gekürzt ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SERVER_SOFTWARE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Apache/1.0.3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;----------------------------------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Erzeugt von test-cgi.pl
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Das Script funktioniert wie folgt:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Die Anweisung &lt;code&gt;require&lt;/code&gt; aktiviert das Perl
Funktionspaket &lt;code&gt;cgi-lib.pl&lt;/code&gt;. Schlägt das fehl, beendet
die &lt;code&gt;die&lt;/code&gt;-Anweisung das Script mit einer Fehlermeldung.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Der Aufruf der im Paket definierten Unterfunktion &lt;code&gt;&amp;amp;ReadParse&lt;/code&gt; liest die Eingaben der GET- und POST-Methoden
ein und decodiert sie. Die einzelnen Variablenwerte werden im
assoziativen Feld &lt;code&gt;%in&lt;/code&gt; hinterlegt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Die Funktion &lt;code&gt;&amp;amp;PrintHeader&lt;/code&gt; liefert den
benötigten Content-Type-String zurück, der dann mit &lt;code&gt;print&lt;/code&gt; gedruckt wird.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mit einem einfachen, mehrzeiligen &lt;code&gt;print&lt;/code&gt; wird der
Header eines HTML-Dokumentes erzeugt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Die Funktion &lt;code&gt;&amp;amp;PrintVariables&lt;/code&gt; druckt das ihr
übergebene assoziative Array &lt;code&gt;%in&lt;/code&gt; zu Debugzwecken
aus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nach einem Zwischenheader wird dann auch noch das assoziative
Array &lt;code&gt;%ENV&lt;/code&gt; ausgedruckt. Dieses enthält alle
Umgebungsvariablen des Programms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ein Abspann-&lt;code&gt;print&lt;/code&gt; druckt den Seitenfuß.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ein-einfacher-zähler&#34;&gt;
    &lt;a href=&#34;#ein-einfacher-z%c3%a4hler&#34;&gt;
	Ein einfacher Zähler
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;CGI-Scripte können und sollen nicht gecached werden. Es ist
daher möglich, auf diese Weise einen einfachen
Seitenzähler zu realisieren. Das Script muss dazu an
einem geeigneten Ort eine Datei hinterlegen, in der es seine
Aufrufe mitzählt. Die Ausgabe des Scriptes kann eine beliebige
HTML-Seite sein, in der der Zählerstand eingebaut wird.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Paket aktivieren.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;cgi-lib.pl&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;die&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;cgi-lib.pl nicht gefunden.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Einlesen und Zerlegen der GET/POST-Variablen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReadParse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# html-Header erzeugen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PrintHeader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Zählerstand einlesen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;COUNTER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;/tmp/counter&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$counter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;lt;COUNTER&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;COUNTER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Zählerstand merken.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;COUNTER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;gt;/tmp/counter&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;COUNTER&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;$counter\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;COUNTER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Seite ausgeben.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;title&amp;gt;Test CGI&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;h1&amp;gt;Z&amp;amp;auml;hlerseite&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;Diese Seite wurde $counter mal aufgerufen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;/html&amp;gt;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Das Script funktioniert so:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Wie üblich werden die Eingabeparameter eingelesen. Sie
werden in dieser Version des Zählscriptes aber noch nicht
verwendet.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Es wird ein Dateihandle &lt;code&gt;&amp;lt;COUNTER&amp;gt;&lt;/code&gt; zum Lesen
geöffnet und eine Zeile mit einer Zahl eingelesen. Diese Zahl
wird um eins erhöht. Die Datei wird wieder geschlossen.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dasselbe Dateihandle wird noch einmal geöffnet, aber zum
Schreiben. Der aktuelle Zählerstand wird in die Datei
hineingedruckt. Beachte, daß beim Drucken in Filehandles
zwischen dem Filehandle und dem eigentlichen Drucktext &lt;strong&gt;kein&lt;/strong&gt;
Komma gesetzt wird!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Der Seitentext wird ausgegeben.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Aufgaben:&lt;/strong&gt; Erweitere das Script so, daß es mehrere
verschiedene Seiten und Zähler zu diesen Seiten bearbeiten
kann. Die Seitenbezeichnung wird dem Script in der Variablen &lt;code&gt;cn&lt;/code&gt; übergeben.
Beachte die sich ergebenden
Sicherheitsprobleme, wenn Pfadnamen aus Variablen direkt
übernommen werden! Wie können diese vermieden werden?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
