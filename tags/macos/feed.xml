<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Macos on Die wunderbare Welt von Isotopp</title>
    <link>https://blog.koehntopp.info/tags/macos.html</link>
    <description>Recent content in Macos on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>kris-blog@koehntopp.de (Kristian Köhntopp)</managingEditor>

    
    <webMaster>kris-blog@koehntopp.de (Kristian Köhntopp)</webMaster>

    
    <lastBuildDate>Mon, 11 Nov 2024 18:34:43 +0000</lastBuildDate><atom:link href="https://blog.koehntopp.info/tags/macos/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MacOS: How to prevent screen blanker</title>
      <link>https://blog.koehntopp.info/2022/07/30/macos-how-to-prevent-screen-blanker.html</link>
      <pubDate>Sat, 30 Jul 2022 05:06:07 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2022/07/30/macos-how-to-prevent-screen-blanker.html</guid>
      <description>&lt;p&gt;When running Keynote, MacOS prevents the screen blanker from kicking in.
I needed a similar thing in one of my Python applications, so I needed to find out how it does that.&lt;/p&gt;
&lt;p&gt;It turns out, there is an API for that:
&lt;a href=&#34;https://developer.apple.com/documentation/foundation/nsprocessinfo/1415995-beginactivitywithoptions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;beginActivity:withOptions:&lt;/code&gt;&lt;/a&gt;

,
which returns an Object token &lt;code&gt;activity&lt;/code&gt;.
Calling &lt;a href=&#34;https://developer.apple.com/documentation/foundation/nsprocessinfo/1411321-endactivity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;endActivity&lt;/code&gt;&lt;/a&gt;


with that Token ends the activity, and resumes the screen blanker countdown.&lt;/p&gt;
&lt;p&gt;There is a list of activity options,
&lt;a href=&#34;https://developer.apple.com/documentation/foundation/nsactivityoptions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;NSActivityOptions&lt;/code&gt;&lt;/a&gt;

.
We are interested into &lt;code&gt;NSActivityIdleDisplaySleepDisabled&lt;/code&gt; and &lt;code&gt;NSActivityUserInteractive&lt;/code&gt;, mostly.&lt;/p&gt;
&lt;p&gt;Interfacing with Objective-C in Python is possible through &lt;code&gt;ctypes&lt;/code&gt;, but that is work.
Work, it turns out, that has already been done in
&lt;a href=&#34;https://github.com/minrk/appnope&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;appnope&lt;/code&gt;&lt;/a&gt;

,
specifically in &lt;a href=&#34;https://github.com/minrk/appnope/blob/c97905ae5d2f5f2ce2fb65ce127a0e5c19ee2c50/appnope/_nope.py#L52-L73&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;_nope.py&lt;/code&gt;&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Integrating that into my PyQt application is trivial.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MacOS: Deleting Relocated Items</title>
      <link>https://blog.koehntopp.info/2020/09/02/macos-relocated-items.html</link>
      <pubDate>Wed, 02 Sep 2020 16:58:53 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2020/09/02/macos-relocated-items.html</guid>
      <description>&lt;p&gt;I had to upgrade my company issued MacBook pro to Catalina for fleet unity reasons. The upgrade left me with a folder &lt;code&gt;Relocated Items&lt;/code&gt; in &lt;code&gt;/Users/Shared/Desktop&lt;/code&gt; and a link to that prominently on my Desktop.&lt;/p&gt;
&lt;p&gt;Deleting that folder moved it to trash. Trying to empty trash then failed. That is because in that folder was several levels deep a folder or link to &lt;code&gt;X11R6&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Apple considers that file outdated, which is why it ended up in &lt;code&gt;Relocated Items&lt;/code&gt;. It also considers this file protected as a system file, so you cannot delete it.&lt;/p&gt;
&lt;p&gt;Not in the GUI nor on the command line, not even as root. In order to delete it you have to boot to single user mode in Recovery and do it there from the command line.&lt;/p&gt;
&lt;p&gt;Step by Step:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Boot to Recovery using Cmd-R. On company systems this is likely protected. In my case I had to select my user and enter a password.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Recovery, start &lt;code&gt;Disk Utility&lt;/code&gt;, select the Mac OS Data Partition (any partition on the system disk will do) and select mount to the right on the &lt;code&gt;Disk Utility&lt;/code&gt; menu. After that all system disk partitions will be mounted and shown no longer greyed out in the Utility.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leave the Utility with Cmd-Q, and from the menu at the top of the screen select Terminal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Terminal, &lt;code&gt;cd /Users/&amp;lt;yourusername&amp;gt;/.Trash&lt;/code&gt;. A &lt;code&gt;ls&lt;/code&gt; should show you &lt;code&gt;Relocated Items&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Delete these using &lt;code&gt;rm -rf &#39;Relocated Items&#39;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reboot using the eponymous item from the Apple Menu.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>So I am a Windows User now</title>
      <link>https://blog.koehntopp.info/2020/07/07/so-i-am-a-windows-user-now.html</link>
      <pubDate>Tue, 07 Jul 2020 11:15:58 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2020/07/07/so-i-am-a-windows-user-now.html</guid>
      <description>&lt;p&gt;So I am a Windows User now. I have an old MacBook pro, Late-2013 13&amp;quot; Retina, i7, 16 GB, 1 TB SSD, and the battery is done now, after 7 years. Also, the hardware is aging, and I want it refurbished and upgrade the son&amp;rsquo;s equipment (which is the previous 2010 MBP I had at that time).&lt;/p&gt;
&lt;p&gt;Modern Apple is not my thing. I have a company MBP, 2018 Retina 13&amp;quot; Four-Port, i7, 16 GB, and everything about this device is wrong. I cannot for the life of me type on this keyboard, I accidentally hit functions on the touchbar, and the trackpad is so large that I put my hands on it when I don&amp;rsquo;t want to. Also, I had to disable the force-touch functionality because otherwise I would open files instead of selecting them. I have to charge it from the right hand side USB-C connector, because otherwise it would get hot and throttle.&lt;/p&gt;
&lt;p&gt;With this in mind, and the announcement from Apple to move to ARM CPUs plus nailing the device cryptographically shut so that you can&amp;rsquo;t boot other operating systems any more, it was time to move away from MacOS.&lt;/p&gt;
&lt;p&gt;I knew I wanted a device with Touchscreen, a 2-in-1 or detachable, and I have been looking at a number of devices. The Surface Book 3 was my favorite, because you can detach the screen and use it as a tablet, plus it is available with a discrete NVidia graphics card in the keyboard base if you buy the right model. The various Lenovo Yoga variants looked well made and pretty, too.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2020/07/yoga1.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;What is in the box? Machine, USB-C Dongle (HDMI, VGA, USB-A 3.0), Power Supply&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In the end, I chose a Lenovo Yoga C940, i7, 16GB, 1 TB with a NVidia 1650. This came in around 1000 Euro cheaper than the Surface Book 3, which I fully intend to spend on a monitor/docking station. The machine has a 4K touchscreen display (3840 × 2160), a keyboard I can handle, an okay sized touchpad und an awesome (and way too powerful) sound system. The screen is technically glossy, but I seem to be able to work with it just fine.&lt;/p&gt;
&lt;p&gt;The machine came with an older version of Windows 10, which patched and upgraded itself to Build 2004 after an initial configuration. I then went on to upgrade WSL to WSL 2, and started using the Ubuntu 20.04 environment provided by the Microsoft Store.&lt;/p&gt;
&lt;p&gt;This version of WSL 2 does not yet support graphical applications, so I proceeded with installation of VMware workstation  as well. I tried VirtualBox, but all installation attempts of an Ubuntu 20.04 image crashed during installation. VMware Workstation went through at the first attempt and with way less hassle - not unexpected. I have been using VMware Fusion at all times of my Mac carrer in the last 15 years, and it&amp;rsquo;s primary hallmark was &amp;ldquo;It just works, and actually performs quite well&amp;rdquo;, and VMware workstation just did the same.&lt;/p&gt;
&lt;p&gt;I am now in the process of moving all basic applications to Windows, which after 15 years of Mac is quite an adjustment. But at least the communication side of things is somewhat covered: Signal, WhatsApp, Skype (Yes, for Oma), Slack, Discord and Twitter Apps are no problem at all. For email, I had to look around a bit, but I found eM Client to be quite good.&lt;/p&gt;
&lt;p&gt;As a replacement for ReadKit, I need something that can handle around 500 RSS feeds efficiently and ideally synchronizes with a service like Newsblur (or The Old Reader or Feedly), because I also read my RSS on the Cellphone and GrazeTen for Android can sync with these 3 services. What I found to be tolerable seems to be QuiteRSS, but that does not seem to be able to sync at all.&lt;/p&gt;
&lt;p&gt;Since I am over 50, I decided to be less of a speaker and instead encourage others to speak more, hence my need for Office programs can actually be completely covered by Google Office just fine, and LibreOffice seems to work tolerably well, too. Converting all my Keynote Files into Powerpoint/PDF/Slideshare is unfinished, though.&lt;/p&gt;
&lt;p&gt;I am using Gimp and OmniGraffle on the Mac. Gimp is not hard to get, but outside of Visio an OmniGraffle-Replacement seems to be absent.&lt;/p&gt;
&lt;p&gt;In general, the Windows Store seems to be a total loss. It is a source of updates for some onboard applications, so cannot be gotten rid of, but the so called &amp;ldquo;modern Windows&amp;rdquo; applications provided there are usually unmaintained, badly formatted and somewhat broken. In general, it seems that the market share of Windows in terms of licenses sold does in no way reflect the market share of Windows in terms of Developer mindshare, at least judging by the state of the Windows Store.&lt;/p&gt;
&lt;p&gt;On the other hand, working with this piece of hardware and with Windows 10 when it is able to forget it&amp;rsquo;s legacy is a breeze. It&amp;rsquo;s when the varnish wears off and the old XP rears it&amp;rsquo;s head that things get nasty, touch-unfriendly or generally needlessly complicated.&lt;/p&gt;
&lt;p&gt;Python, git and other things are available natively and in WSL just fine, I have PyCharm, Sublime and VScode, and they just work. I got Hugo and Jekyll running in WSL, too. So that part of the system is covered just fine.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2020/07/yoga2.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;5 seconds to the logo, 15 seconds until ready, from a complete cold start&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;And it&amp;rsquo;s fast. I am not speaking just about 12 threads on a NVME disk, I am also speaking about a system that cold-boots faster than a Mac wakes up from deep sleep, and about a graphic subsystem that can handle &amp;ldquo;Assassins Creed: Origins&amp;rdquo; in HD at &amp;ldquo;High&amp;rdquo; with absolutely playable framerates, and that actually manages to drive a Rift S in Elite: Dangerous pretty ok.&lt;/p&gt;
&lt;p&gt;We will see how long it will take me to really convert all the ways I work&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Time Machine Editor</title>
      <link>https://blog.koehntopp.info/2020/05/26/time-machine-editor.html</link>
      <pubDate>Tue, 26 May 2020 15:45:15 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2020/05/26/time-machine-editor.html</guid>
      <description>&lt;p&gt;I have an embedded Mac mini, it drives the local TV screen by doing OpenVPN to Germany, Netflix, Amazon and the local &lt;a href=&#34;https://subsonic.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Subsonic&lt;/a&gt;

. It does not really do much with the local disk, and it does not need to wake up every hour to make a Time Machine backup over the network.&lt;/p&gt;
&lt;p&gt;To change the backup interval, install &lt;a href=&#34;https://tclementdev.com/timemachineeditor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Time Machine Editor&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://tclementdev.com/timemachineeditor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2020/05/tme.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Time Machine Editor can change the Time Machine Backup interval. It has a background daemon that triggers the backups, a GUI application and a command line utility.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Time Machine Editor works with automatic Time Machine backups disabled, which will turn off the local scheduler. It instead installs its own scheduler as a background process, which will then kick off the regular Time Machine backup process, but on the schedule you want. It can control all aspects of Time Machine: remote backups to an external disk as well as local snapshots. It understands applications that prevent display and machine sleep, exclusion times for the night and custom schedules. A command line application, tmectl, allows control of all aspects programmatically as well.&lt;/p&gt;
&lt;p&gt;Because of the way the application is built, it does not require special privileges, and is also not running into System Integrity Protection problems with Catalina.&lt;/p&gt;
&lt;p&gt;The pre-Catalina&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo defaults write /System/Library/LaunchDaemons/com.apple.backupd-auto StartInterval -int &lt;span class=&#34;m&#34;&gt;14400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;does no longer work: It tries to change a &lt;code&gt;plist&lt;/code&gt; in &lt;code&gt;/System&lt;/code&gt; and fails. The approach chosen by Time Machine Editor is cleaner and not subject to these new Apple limitations.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2020/05/tme-before-after.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Energy consumption of the Mac mini before and after installation of Time Machine Editor. I am running a backup every 6h, and that is just fine with this machine and how it is being used.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ignoring Catalina nags</title>
      <link>https://blog.koehntopp.info/2019/10/15/ignoring-catalina-nags.html</link>
      <pubDate>Tue, 15 Oct 2019 11:50:23 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2019/10/15/ignoring-catalina-nags.html</guid>
      <description>&lt;p&gt;Note to self: Ignoring the Catalina Nagscreens is done like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo softwareupdate --ignore &lt;span class=&#34;s2&#34;&gt;&amp;#34;macOS Catalina&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; defaults write com.apple.systempreferences AttentionPrefBundleIDs &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; killall Dock
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And that should make MacOS ignore Catalina until further notice. Further
notice does look like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; /usr/sbin/softwareupdate --reset-ignored
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Catalina: Upgrade carefully.</title>
      <link>https://blog.koehntopp.info/2019/10/08/catalina-upgrade-carefully.html</link>
      <pubDate>Tue, 08 Oct 2019 09:20:08 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2019/10/08/catalina-upgrade-carefully.html</guid>
      <description>&lt;p&gt;Catalina is here. It fixes many things, among them iTunes. On the other
hand, it drops support for 32-Bit MacOS applications.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/catalina.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Consider the upgrade carefully.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; system_profiler SPApplicationsDataType
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;…
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Steam:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;      Version: 1.5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Obtained from: Identified Developer
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Last Modified: 23.08.16, 20:32
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Kind: Intel
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      64-Bit (Intel): No
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Signed by: Developer ID Application: Valve Corporation, Developer ID Certification Authority, Apple Root CA
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Location: /Applications/Steam.app
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;…
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Anything listed with &lt;code&gt;64-Bit (Intel): No&lt;/code&gt; will stop working after the
upgrade. Check before you upgrade, and consider what you will be losing
access to if you perform the upgrade.&lt;/p&gt;
&lt;p&gt;On my box:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apprentice Alf DeDRM Plugin for Calibre&lt;/li&gt;
&lt;li&gt;Civilization V&lt;/li&gt;
&lt;li&gt;CoverScout 3&lt;/li&gt;
&lt;li&gt;Google Music Manager&lt;/li&gt;
&lt;li&gt;Google Photos Backup&lt;/li&gt;
&lt;li&gt;GrandPerspective&lt;/li&gt;
&lt;li&gt;JD-GUI&lt;/li&gt;
&lt;li&gt;Kindle (1.23.1, locked from upgrades)&lt;/li&gt;
&lt;li&gt;Mathematica&lt;/li&gt;
&lt;li&gt;Microsoft Office&lt;/li&gt;
&lt;li&gt;SongGenie 2&lt;/li&gt;
&lt;li&gt;Steam&lt;/li&gt;
&lt;li&gt;TigerVNC&lt;/li&gt;
&lt;li&gt;UnRarX&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of them are unimportant, other things are quite critical, some of them
can&amp;rsquo;t be updated easily.&lt;/p&gt;
&lt;p&gt;At this point, for me this is a hard pass, and a lot of work to be done.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>kauth Handlers in MacOS</title>
      <link>https://blog.koehntopp.info/2018/12/18/kauth-handlers-in-macos.html</link>
      <pubDate>Tue, 18 Dec 2018 09:06:19 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2018/12/18/kauth-handlers-in-macos.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://flylib.com/books/en/3.126.1.140/1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kauth handlers in MacOS&lt;/a&gt;

, from a somewhat outdated MacOS X Internals book.
But a lot of the content is still relevant.
This section is about kauth handlers.
Kauth is a system in MacOS to hook file open and file exec operations.
It is what is being used by all the Corporate Security Malware that the Compliance Guys like to install on your work Mac, and it is one of the most common reasons for MacOS performance problems at work.&lt;/p&gt;
&lt;p&gt;That is, because most Corpsec Malware does install a Kauth handler and then evaluates file open permission synchronously in that handler.
TrendMicro, Cylance, FireEye (xagt) and Websense DLP do this.
File &lt;code&gt;open()&lt;/code&gt; operations are delayed by a factor of 6x to 10x usually:
Unpacking an electron app with 27.000 files on my home Mac takes 3 seconds, and took 27 seconds on my work Mac.&lt;/p&gt;
&lt;p&gt;Usually, these things are also written badly:
Trendmicro for example runs their evaluations in a privileged userland process with ASLR off, so if you craft the right kind of GIF and drop it into &lt;code&gt;$HOME&lt;/code&gt;, it will pop a shell on any Mac running Trendmicro just fine.
That is,  because the offsets are always right &amp;ndash; thanks to ASLR off.&lt;/p&gt;
&lt;p&gt;And Websense DLP did rely on their Kauth handler so much that all files in the installations were world writeable:
&amp;ldquo;protected&amp;rdquo; only by the Kauth handler.
Which made exceptions for Binaries with the right name (among them &amp;ldquo;installd&amp;rdquo;, &amp;ldquo;installer&amp;rdquo;, or &amp;ldquo;shove&amp;rdquo;), so if you rename your cp program to &amp;ldquo;installer&amp;rdquo; you could happily overwrite any of the files &amp;ndash; reboot the box, get your own code executed as root and be done.&lt;/p&gt;
&lt;p&gt;One of the nicest things on the Mac is &lt;a href=&#34;https://www.hopperapp.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HopperApp&lt;/a&gt;

.
This is a very cheap, very well done clone of the basic functionality in IDA Pro, and allows you to have a quick look at the code of these Corpsec kernel extensions and see how they are breaking things, then act on that.
Depending on your alignment you write a report and get a cookie, or you use this for your own purposes.&lt;/p&gt;
&lt;p&gt;In general, a Macbook with Corporate Security Malware is much more easily owned than a stock Apple device.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Watchman</title>
      <link>https://blog.koehntopp.info/2018/02/01/watchman.html</link>
      <pubDate>Thu, 01 Feb 2018 06:06:54 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2018/02/01/watchman.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://facebook.github.io/watchman/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2018/01/watchman-603x640.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Today I was looking for a way to subscribe to file changes in a directory in
MacOS, in order to trigger automatically running commands whenever files
change. Turns out Homebrew has &amp;ldquo;fswatch&amp;rdquo;, which tells you when things
change, but little else.&lt;/p&gt;
&lt;p&gt;Turns out Homebrew has &amp;ldquo;watchman&amp;rdquo;, which does all this, and on multiple
trees, finds changes across restarts and automatically manages a set of
commands for different file endings.&lt;/p&gt;
&lt;p&gt;Also turns out that I know the author. Thanks, Wez!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Knock, Knock</title>
      <link>https://blog.koehntopp.info/2018/01/15/knock-knock.html</link>
      <pubDate>Mon, 15 Jan 2018 20:14:50 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2018/01/15/knock-knock.html</guid>
      <description>&lt;p&gt;What does your Mac do on Startup? &lt;a href=&#34;https://github.com/synack/knockknock&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Knockknock knows&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not properly updated for current versions of MacOS, but it is still
useful. &amp;ldquo;git clone &lt;a href=&#34;https://github.com/synack/knockknock%22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/synack/knockknock&#34;&lt;/a&gt;

 and
&amp;ldquo;/usr/bin/python knockknock.py&amp;rdquo; is sufficient to test.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;TOTAL ITEMS FOUND: 44
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s quite a bit. Apparently, I am starting&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Google Music Manager,&lt;/li&gt;
&lt;li&gt;AirServer,&lt;/li&gt;
&lt;li&gt;Karabiner,&lt;/li&gt;
&lt;li&gt;Alfred 3,&lt;/li&gt;
&lt;li&gt;a Chrome app_mode_loader,&lt;/li&gt;
&lt;li&gt;the Android File Transfer Agent,&lt;/li&gt;
&lt;li&gt;Dropbox, Divvy,&lt;/li&gt;
&lt;li&gt;Expandrive,&lt;/li&gt;
&lt;li&gt;Chrome itself,&lt;/li&gt;
&lt;li&gt;Soundflower,&lt;/li&gt;
&lt;li&gt;an AX88179 USB GBit Ethernet adapter driver,&lt;/li&gt;
&lt;li&gt;Steam Drivers,&lt;/li&gt;
&lt;li&gt;/Library/PrivilegedHelperTools/org.chromium.chromoting.me2me.sh,&lt;/li&gt;
&lt;li&gt;the Steam ipcserver,&lt;/li&gt;
&lt;li&gt;the Expandrive Helper,&lt;/li&gt;
&lt;li&gt;the Skype Helper,&lt;/li&gt;
&lt;li&gt;the OnePasswordNativeMessageHost,&lt;/li&gt;
&lt;li&gt;Expandrive exfs,&lt;/li&gt;
&lt;li&gt;iStatMenus and&lt;/li&gt;
&lt;li&gt;the iStatMenus Agents and Helpers,&lt;/li&gt;
&lt;li&gt;Steamclean,&lt;/li&gt;
&lt;li&gt;the GoogleSoftwareUpdateAgent,&lt;/li&gt;
&lt;li&gt;Tunnelblick LaunchAtLogin.sh,&lt;/li&gt;
&lt;li&gt;and finally an ethcheck Firmware checker.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So much Crap being loaded.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Command line access to the Mac keychain</title>
      <link>https://blog.koehntopp.info/2017/01/26/command-line-access-to-the-mac-keychain.html</link>
      <pubDate>Thu, 26 Jan 2017 20:34:42 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2017/01/26/command-line-access-to-the-mac-keychain.html</guid>
      <description>&lt;p&gt;I am getting my payslips in electronic form, as an encrypted, password
protected PDF. It&amp;rsquo;s not a super secret password, and the encryption is more
against accidentally opening the file than it is to keep the content of the
file actually secret.&lt;/p&gt;
&lt;p&gt;After shipping the PDF home, I am archiving it for tax purposes, but in
order to make the archival safe, I am storing the original file as well as
the decrypted cleartext version of it. To do that, I wrote a shell script,
which contained the password in a variable in clear.&lt;/p&gt;
&lt;p&gt;Discussing that at work had a few people rejecting the storage of keys in a
script in clear as a matter of principle, and the suggestion was to use the
operating system key management service to hold this kind of data.&lt;/p&gt;
&lt;p&gt;Here is how to interact with the key management of MacOS.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-generic-password-payslip-in-my-login-keychain&#34;&gt;
    &lt;a href=&#34;#creating-a-generic-password-payslip-in-my-login-keychain&#34;&gt;
	Creating a generic password &amp;ldquo;payslip&amp;rdquo; in my login keychain
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The command line utility to interact with the Keychain in MacOS is &amp;ldquo;security&amp;rdquo;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; security add-generic-password -a &lt;span class=&#34;nv&#34;&gt;$LOGNAME&lt;/span&gt; -s payslip -w keks 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will create a generic password titled &amp;ldquo;payslip&amp;rdquo; in my default keychain,
in my account, and the password is &amp;ldquo;keks&amp;rdquo;. If you run &amp;ldquo;Keychain Access.app&amp;rdquo;
and check out the content of the keychain, it looks like this:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2017/01/Bildschirmfoto-2017-01-26-um-20.13.38.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;The generic password &amp;ldquo;payslip&amp;rdquo; has been created.&lt;/p&gt;
&lt;p&gt;You can set the content of the &amp;ldquo;Name:&amp;rdquo; field differently, use the -l (label)
option to do that. You can also add content to the &amp;ldquo;Comments:&amp;rdquo; field with
the -j option.&lt;/p&gt;
&lt;h2 id=&#34;access-control&#34;&gt;
    &lt;a href=&#34;#access-control&#34;&gt;
	Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;If you want to see the password, you can always hit the &amp;ldquo;Show password:&amp;rdquo;
field. You will be prompted for your login keychains password (which may or
may not be the login password for your computer). By hitting &amp;ldquo;Always Allow&amp;rdquo;
you will also add &amp;ldquo;Keychain Access&amp;rdquo; as a program to access this information
without password.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2017/01/Bildschirmfoto-2017-01-26-um-20.20.16.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Trying to see the actual password triggers an authentication
dialog.&lt;/p&gt;
&lt;p&gt;Switching from the &amp;ldquo;Attributes&amp;rdquo; tab to the &amp;ldquo;Access Control tab shows us
which programs can always access the password (without a Dialog). It looks
like this:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2017/01/Bildschirmfoto-2017-01-26-um-20.21.51.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Creating the generic password with &amp;ldquo;security&amp;rdquo;, the program gives itself free
access to the data.&lt;/p&gt;
&lt;p&gt;You might see fewer (none) or more programs in this list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;By default, &amp;ldquo;security&amp;rdquo;, which created the password, adds itself to the access control list.&lt;/li&gt;
&lt;li&gt;If you do not want &amp;ldquo;security&amp;rdquo; adding itself to the list, set &amp;ldquo;-T&amp;rdquo; empty to prevent itself from adding:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; security add-generic-password -T &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; -a &lt;span class=&#34;nv&#34;&gt;$LOGNAME&lt;/span&gt; -s payslip -w keks
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Had you hit &amp;ldquo;Always Allow&amp;rdquo; instead of &amp;ldquo;Allow&amp;rdquo; in the &amp;ldquo;Show password:&amp;rdquo;
dialog, &amp;ldquo;Keychain Access&amp;rdquo; would have had itself added as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;getting-the-password-back&#34;&gt;
    &lt;a href=&#34;#getting-the-password-back&#34;&gt;
	Getting the password back
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Here is how to get the password back:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; security find-generic-password -w -a &lt;span class=&#34;nv&#34;&gt;$LOGNAME&lt;/span&gt; -s payslip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you did not allow &amp;ldquo;security&amp;rdquo; to include itself, you will see a permission
prompt on the desktop:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2017/01/Bildschirmfoto-2017-01-26-um-20.28.30.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;You will see this prompt if &amp;ldquo;security&amp;rdquo; created the generic password with -T
&amp;ldquo;&amp;rdquo;, preventing it from adding itself to the access control list.&lt;/p&gt;
&lt;p&gt;Both cases, searching for a password not present or the user hitting &amp;ldquo;Deny&amp;rdquo;
will have the command return with an empty password. The &amp;ldquo;password not
present&amp;rdquo; case will additionally write an error message to stderr, but
unfortunately not set an exit code properly.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt; security find-generic-password -w -a &lt;span class=&#34;nv&#34;&gt;$LOGNAME&lt;/span&gt; -s payslip &lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; $ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$password&lt;/span&gt; keks
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;deleting-a-passwordbr-&#34;&gt;
    &lt;a href=&#34;#deleting-a-passwordbr-&#34;&gt;
	Deleting a password&lt;br /&gt;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Just for closure and cleanup:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; security delete-generic-password -a &lt;span class=&#34;nv&#34;&gt;$LOGNAME&lt;/span&gt; -s payslip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Adventures in Mac OS X maintenance</title>
      <link>https://blog.koehntopp.info/2010/02/19/adventures-in-mac-os-x-maintenance.html</link>
      <pubDate>Fri, 19 Feb 2010 14:17:04 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2010/02/19/adventures-in-mac-os-x-maintenance.html</guid>
      <description>&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/mbp.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Nachdem ich neulich meinen Mac in den Service geben mußte, ich für die Zeit einen Ersatz-Mac hatte und ich also zwischen beiden Systemen hin- und her installieren mußte, hier die deutsche Übersetzung einer kleinen Zusammenfassung, die ich für die Firma geschrieben habe.&lt;/p&gt;
&lt;p&gt;Offensichtlich ist es sehr praktisch, dem großen Mac-Gott Time Machine eine Platte zu opfern, weil niemand Backup will und Time Machine sehr gut in Restore ist. In meinem Fall verwende ich eine WD Elements 1TB dafür (etwa 85€), andere in der Firma wollen was kleineres und mit USB Power, nehmen also eine WD Passport (500G @ 92€).&lt;/p&gt;
&lt;p&gt;Diejenigen in der Firma, die ein lokales Linux brauchen, sind mit einem Linux in einer VMware Fusion besser dran als einem Multiboot mit einem nativen Linux. Time Machine alleine reicht schon als Vorteil, und außerdem ist der Wechsel zwischen den Betriebssystemen mit VMware natürlich weniger schmerzhaft als ein Reboot und das Powermanagement vom MacOS ist auch besser als das vom Linux.&lt;/p&gt;
&lt;p&gt;Man kann eine Time Machine Platte bootbar machen. Das erlaubt es einem dann, von der Time Machine Platte zu booten, nachdem man sie angeschlossen hat und den Mac mit gedrückter Option-Taste einschaltet. Im StartupManager kann man dann die Time Machine Platte anwählen und im beginnenden Installationsprozeß statt einer Reinstallation eine Recovery aus der Time Machine Datenbank anwählen. Außerdem hat man Zugriff auf ein Terminal.app und könnte versuchen, den defekten Mac wieder zum Leben zu erwecken.&lt;/p&gt;
&lt;p&gt;Die Platte bekommt man bootbar, indem man Disk Utility startet, die Time Machine Disk anschließt und die erste Installations-DVD ins Laufwerk tut. Die Time Machine Disk in Disk Utility auswählen, den Restore-Tab anklicken, dort die DVD ins Source-Feld und die Time Machine Disk ins Destination Feld, dann Restore drücken. Die Time Machine Disk wird dadurch überschrieben, also bitte sicherstellen, daß da nix wichtiges drauf ist.&lt;/p&gt;
&lt;p&gt;Jetzt hat man eine bootbare Platte - nicht umbenennen. DVD auswerfen, Platte unmounten.&lt;/p&gt;
&lt;p&gt;Beim Anschließen oder Mounten der Platte (mit Disk Utility) öffnet sich diese nun automatisch wie es die originale Installations-DVD auch tut. Das nervt. Also müssen wir sie unblessen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo bless --folder &lt;span class=&#34;s2&#34;&gt;&amp;#34;/Volumes/Mac OS X Install DVD/&amp;#34;&lt;/span&gt; -saveX
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Bless steuert normalerweise was von wo warum gebootet wird, kontrolliert aber auch diese Folder Auto-Open.&lt;/p&gt;
&lt;p&gt;Ich habe diese Disk nun in den Time Machine Preferences zu meiner Time Machine Backup Disk erklärt. Dadurch bekomme ich einen Backups.backupd-Ordner auf der Platte, der irgendwann einmal die ganze Platte voll machen wird. Das dauert aber, und bis dahin kann ich immerhin noch ein Image der zweiten Installations-DVD auf der Platte als compressed dmg ablegen (mit Disk Utility) und auch alle andere Software, die ich für eine Reinstallation brauche ebenfalls dort unterbringen - Time Machine füllt die Platte und löscht dann alte Backups, tastet aber andere Files außerhalb des Time Machine-Ordners nicht an. Ich habe außerdem einen Ordner mit allen notwendigen Lizenz-Schlüsseln auf der Platte angelegt, der Ort erschien mir günstig für so was.&lt;/p&gt;
&lt;p&gt;So vorbereitet kostet mich ein kompletter Verlust des Systems weniger als vier Stunden Wartezeit (so lange dauert ein Time Machine Restore maximal, abhängig im wesentlichen von der Anzahl der Dateien, nicht der Größe des Backups) und ich verliere nie mehr als eine Stunde Arbeitszeit (oder wie oft man auch immer Time Machine laufen läßt).&lt;/p&gt;
&lt;p&gt;Weitere nützliche Werkzeuge auf der Kommandozeile sind diskutil, die Kommandozeilen-Version der Mount/Unmount/Eject-Kommandos von Disk Utility, hdiutil, die Kommandozeilenversion der dmg Management Utilities von Disk Utility, und asr, die Kommandozeilenversion der Restore-Funktionen von Disk Utility. Manpages für diese Werkzeuge sind Teil der Systeminstallation. Bless habe ich ja weiter oben schon erwähnt.&lt;/p&gt;
&lt;p&gt;Besonderer Dank gilt &lt;a href=&#34;https://www.xing.com/profile/Harald_Wagener2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Harald Wagener&lt;/a&gt;

 für seine wertvollen Hinweise. Nützlich war auch &lt;a href=&#34;http://www.macosxhints.com/article.php?story=2008011623365026&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;diese Seite&lt;/a&gt;

 von Mac OS X Hints.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
