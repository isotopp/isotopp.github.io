<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Die wunderbare Welt von Isotopp</title>
    <link>https://blog.koehntopp.info/tags/development.html</link>
    <description>Recent content in Development on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>kris-blog@koehntopp.de (Kristian Köhntopp)</managingEditor>

    
    <webMaster>kris-blog@koehntopp.de (Kristian Köhntopp)</webMaster>

    
    <lastBuildDate>Mon, 11 Nov 2024 19:52:35 +0000</lastBuildDate><atom:link href="https://blog.koehntopp.info/tags/development/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Editing Remotely in PyCharm</title>
      <link>https://blog.koehntopp.info/2024/03/18/editing-remotely-in-pycharm.html</link>
      <pubDate>Mon, 18 Mar 2024 05:06:07 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2024/03/18/editing-remotely-in-pycharm.html</guid>
      <description>&lt;p&gt;A friend asks me on IRC:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Do you happen to know how I can edit code locally on my PyCharm (MacOS, Professional)
but run it remotely in a virtual environment?
I know how to do that in VS Code, but I don&amp;rsquo;t know how to do it in PyCharm, even with ssh configured and tested.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The TL;DR is that this specific person has disabled the FTP/SFTP/Webdav Plugin in an attempt to configure PyCharm
in a way that it doesn&amp;rsquo;t upload development data to Jetbrains Servers or similar.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-01.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The bundled FTP/SFTP/Webdav Plugin in Pycharm is required for the preferred deployment method.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Jetbrains has several options for editing code locally, but deploying and running it remotely.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Convert a local repository for remote deployment, and have it uploaded in an &amp;ldquo;rsync&amp;rdquo;-like fashion for each save to disk.
This is not &amp;ldquo;rsync,&amp;rdquo; because it also provides remote debugging and other features that reach further than synchronisation.&lt;/li&gt;
&lt;li&gt;Run a headless version of Pycharm remotely using &amp;ldquo;Jetbrains Gateway,&amp;rdquo;
showing the display locally, but running the editor remotely over ssh.&lt;/li&gt;
&lt;li&gt;Use Fleet, the VS Code imitation by Jetbrains.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;rsync-deployment&#34;&gt;
    &lt;a href=&#34;#rsync-deployment&#34;&gt;
	&amp;ldquo;Rsync Deployment&amp;rdquo;
    &lt;/a&gt;
&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Create a new project locally, using a local interpreter of your choice.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-02.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Create a normal local project, not caring about remote edit.&lt;/em&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Convert the project to a new interpreter, using &amp;ldquo;Add Interpreter&amp;rdquo; in Settings→Project→Python Interpreter.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-03.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Click on &amp;lsquo;Add Interpreter&amp;hellip;&amp;rsquo;, select &amp;lsquo;On SSH&amp;hellip;&amp;rsquo;&lt;/em&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Choose an existing SSH Server (or add a new one)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-04.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Here we select the remote box to work on. In our case, we are running on &lt;code&gt;server.local&lt;/code&gt; as the user &lt;code&gt;kris&lt;/code&gt;,
using SSH agent authentication.
If the configuration we want were not present, we&amp;rsquo;d select &amp;lsquo;SSH Connection: [ ] New&amp;rsquo; instead of an existing config.&lt;/em&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Let the probe complete.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-05.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Selecting a SSH interpreter will spawn a remote Python version probe. We need to let this run and complete.&lt;/em&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Trying to set a remote work directory is useless at this stage.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-06.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;In my version of PyCharm (PyCharm 2023.3.4), trying to edit the remote sync folder in the final set is possible,
but is being ignored later.
It will initially always use a random directory name in /tmp for remote execution, no matter how I configure it here.
This is likely a bug.&lt;/em&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Review Remote Interpreter Setup&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-07.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Review the chosen interpreter. It should now say something about &amp;ldquo;Remote Python&amp;rdquo;,
and show the version number as detected for the remote box.&lt;/em&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Fix the Mappings&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-08.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Go to Settings→Build, Execution, Deployment→Deployment, select your configuration, select the tab &amp;ldquo;Mappings&amp;rdquo; and
check the &amp;ldquo;Deployment Path&amp;rdquo;.
In my PyCharm, this is always a random path in &lt;code&gt;/tmp&lt;/code&gt;, no matter what I do in the previous step 3.
I correct this to the directory I want this deployed in, here &lt;code&gt;/home/kris/Source/keks&lt;/code&gt;, then click &amp;ldquo;Ok&amp;rdquo;.&lt;/em&gt;&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;Verify that it works&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-09.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Printing &lt;code&gt;sys.version_info&lt;/code&gt; shows us that we are indeed running on the Python Version of the remote host.
We could also call &lt;code&gt;sys_info = os.uname()&lt;/code&gt;, and print &lt;code&gt;sys_info.nodename&lt;/code&gt; to check the name of the box.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For my friend none of this worked. The entire SSH option was not shown,
and the option to define SFTP upload was not offered.
Further debugging showed that my friend had tried to secure his installation against unwanted data upload,
disabling all remote AI functionality and also the
&lt;a href=&#34;https://www.jetbrains.com/help/pycharm/2023.1/sharing-your-ide-settings.html#IDE_settings_sync&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jetbrains Settings Sync&lt;/a&gt;

.
In doing that, they also inadvertantly disabled the &amp;ldquo;SSH/SFTP/Webdav&amp;rdquo; bundled plugin.&lt;/p&gt;
&lt;h1 id=&#34;using-jetbrains-gateway&#34;&gt;
    &lt;a href=&#34;#using-jetbrains-gateway&#34;&gt;
	Using &amp;ldquo;Jetbrains Gateway&amp;rdquo;
    &lt;/a&gt;
&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;When closing all project windows, PyCharm will default to the project selection screen.
This will offer the creation of new local projects, and also access to &amp;ldquo;SSH&amp;rdquo; projects,
&amp;ldquo;Jetbrains Space&amp;rdquo; projects, &amp;ldquo;Dev Containers&amp;rdquo;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-10.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PyCharms project selection screen, &amp;ldquo;Welcome to PyCharm&amp;rdquo;.
Choosing &amp;ldquo;SSH&amp;rdquo; sllows you to create remote projects directly.
This will not use the synchronisation method above, but start a remote headless PyCharm.&lt;/em&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Provide SSH connection information.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-11.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We are then being asked to provide SSH connection information, and can again choose from our default targets.
Again, we use &lt;code&gt;kris@server.local&lt;/code&gt; with agent authentication.&lt;/em&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Select IDE version and directory.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-12.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We are then being asked to choose an IDE version, and a directory.
The directory must exist (and is ideally empty).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This step can take some time to complete.
It will make the remote host download a version of the IDE and run it headless,
and will then configure Jetbrains Gateway locally.
Ultimately, it will hand off development from PyCharm to the local Gateway and the remotely running PyCharm.&lt;/p&gt;
&lt;p&gt;Gateway acts as the local display of the remote IDE, using SSH as a remote procedure call mechanism.
Depending on the SSH connection latency, this can be quite laggy.
In older versions of Gateway, it was also prone to losing synchronization – this version seems to behave better.&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Validate functionality and hostname&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-13.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Writing a short test program and running it quickly validates that we are on the correct version of Python
and on the correct host.&lt;/em&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Check processlist&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-14.jpg&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-14.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A quick glance at the processlist of the remote hosts shows us what is going on:
A headless version of Pycharm has been downloaded to $HOME/.cache/JetBrains and is doing the work.
Locally, Jetbrains Gateway is the display for the remote instance.&lt;/em&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Check connection and ressources&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-15.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Cloud development instances are sometimes optimized for cost, not for comfort.
Gateway offers a way to check remote resources, including Ping and Memory.&lt;/em&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Other Providers&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/03/pycharm-16.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Gateway also offers additional providers for remote development, which can be installed and configured.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;fleet&#34;&gt;
    &lt;a href=&#34;#fleet&#34;&gt;
	Fleet
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Fleet is a new editing environment from Jetbrains that tries to emulate VC Code in look and feel.
Unlike PyCharm, it has no direct language support, but connects to one or more language servers.
It needs extensions and language servers to become a useful editor with syntax support and analytics.&lt;/p&gt;
&lt;p&gt;It can natively edit remote files.&lt;/p&gt;
&lt;p&gt;I am not comfortable using it, and have therefore not tested it.&lt;/p&gt;
&lt;h1 id=&#34;preference&#34;&gt;
    &lt;a href=&#34;#preference&#34;&gt;
	Preference
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;For my deployment scenarios, I prefer to work with the primary approach
of converting a local project to a remote deployment using the &amp;ldquo;rsync&amp;rdquo; approach.
It is less sensitive to latency and less fragile than the &amp;ldquo;Gateway&amp;rdquo; approach, and offers much the same functionality for me.&lt;/p&gt;
&lt;p&gt;People using standard clouds more than I do might fare better with &amp;ldquo;Gateway,&amp;rdquo; now that it is stable.&lt;/p&gt;
&lt;p&gt;People using multiple languages in the same project or dependent on LSP and language servers might like Fleet better.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dynamically loading Classes in Java</title>
      <link>https://blog.koehntopp.info/2024/03/03/dynamically-loading-classes-in-java.html</link>
      <pubDate>Sun, 03 Mar 2024 05:06:07 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2024/03/03/dynamically-loading-classes-in-java.html</guid>
      <description>&lt;p&gt;The son needed to dynamically load some Java class into Minecraft,
and then call a method on this.
The dynamically loaded class may have additional dependencies.
I wanted to see how this works, so I sketched a quick example.
You can follow along &lt;a href=&#34;https://github.com/isotopp/JavaTests&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;on GitHub&lt;/a&gt;

.&lt;/p&gt;
&lt;h1 id=&#34;project-layout&#34;&gt;
    &lt;a href=&#34;#project-layout&#34;&gt;
	Project Layout
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Using IntelliJ, we are creating a project using Maven which has three submodules.
The layout:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; tree
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|-- dependent
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|   |-- pom.xml    &amp;lt;--- per submodule pom.xml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|   `-- src
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|       `-- main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|           `-- java
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|               `-- de
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|                   `-- koehntopp
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|                       `-- java
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|                           `-- Dependent.java
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|-- external
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|   |-- pom.xml    &amp;lt;--- per submodule pom.xml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|   `-- src
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|       `-- main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|           `-- java
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|               `-- de
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|                   `-- koehntopp
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|                       `-- java
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|                           `-- External.java
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|-- main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|   |-- pom.xml    &amp;lt;--- per submodule pom.xml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|   `-- src
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|       `-- main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|           `-- java
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|               `-- de
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|                   `-- koehntopp
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|                       `-- java
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;|                           `-- Main.java
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;`-- pom.xml   &amp;lt;--- top level pom.xml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;22 directories, 8 files
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The top level &lt;code&gt;pom.xml&lt;/code&gt; will define the submodules:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;na&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&#34;nt&#34;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;de.koehntopp.java&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;JavaTests&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;pom&lt;span class=&#34;nt&#34;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;maven.compiler.source&amp;gt;&lt;/span&gt;17&lt;span class=&#34;nt&#34;&gt;&amp;lt;/maven.compiler.source&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;maven.compiler.target&amp;gt;&lt;/span&gt;17&lt;span class=&#34;nt&#34;&gt;&amp;lt;/maven.compiler.target&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&#34;nt&#34;&gt;&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;modules&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;main&lt;span class=&#34;nt&#34;&gt;&amp;lt;/module&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;external&lt;span class=&#34;nt&#34;&gt;&amp;lt;/module&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;dependent&lt;span class=&#34;nt&#34;&gt;&amp;lt;/module&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/modules&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Each submodule then needs to have its own &lt;code&gt;pom.xml&lt;/code&gt;, will produce its own &lt;code&gt;target/&lt;/code&gt; directory with its own &lt;code&gt;.jar&lt;/code&gt; file.
We are not trying to bundle all these files into one &amp;ldquo;fat&amp;rdquo; jar because that was not required.&lt;/p&gt;
&lt;p&gt;In order to be able to define submodules, we also need to specify a &lt;code&gt;&amp;lt;packaging /&amp;gt;&lt;/code&gt; method. The default is &lt;code&gt;jar&lt;/code&gt;,
but for submodules we need to use &lt;code&gt;pom&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id=&#34;dependentjava&#34;&gt;
    &lt;a href=&#34;#dependentjava&#34;&gt;
	&lt;code&gt;Dependent.java&lt;/code&gt;
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The class &lt;code&gt;Dependent&lt;/code&gt; is a simple &amp;ldquo;Hello, world!&amp;rdquo; style program.
It looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;de.koehntopp.java&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Dependent&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;sayHello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello from Dependent!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That is, we have a class with a single public, static method &lt;code&gt;sayHello()&lt;/code&gt; that says hello.
The &lt;code&gt;pom.xml&lt;/code&gt; for this is default, as generated by IntelliJ.&lt;/p&gt;
&lt;h1 id=&#34;externaljava&#34;&gt;
    &lt;a href=&#34;#externaljava&#34;&gt;
	&lt;code&gt;External.java&lt;/code&gt;
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;External&lt;/code&gt; class prints its own &amp;ldquo;Hello&amp;rdquo; message, and also calls the static method from &lt;code&gt;Dependent&lt;/code&gt;.
It looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;de.koehntopp.java&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;External&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;New Hello from External!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Dependent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sayHello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Ruft die Methode aus der Dependent-Klasse auf&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To compile, we need to declare a dependency in Maven:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;na&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&#34;nt&#34;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;de.koehntopp.java&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;external&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;maven.compiler.source&amp;gt;&lt;/span&gt;17&lt;span class=&#34;nt&#34;&gt;&amp;lt;/maven.compiler.source&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;maven.compiler.target&amp;gt;&lt;/span&gt;17&lt;span class=&#34;nt&#34;&gt;&amp;lt;/maven.compiler.target&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&#34;nt&#34;&gt;&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;de.koehntopp.java&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;dependent&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gives the compiler knowledge about the class &lt;code&gt;Dependent&lt;/code&gt; at compile time.&lt;/p&gt;
&lt;h1 id=&#34;dynamically-loading-code-in-mainjava&#34;&gt;
    &lt;a href=&#34;#dynamically-loading-code-in-mainjava&#34;&gt;
	Dynamically loading code in &lt;code&gt;Main.java&lt;/code&gt;
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;Main&lt;/code&gt; class loads code dynamically using a &lt;code&gt;ClassLoader&lt;/code&gt;, then calls the code using reflection.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;de.koehntopp.java&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.io.File&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.net.URL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.net.URLClassLoader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.security.CodeSource&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.security.ProtectionDomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.util.ArrayList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.util.List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// $ mvn clean package&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// ...&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// $ java -jar main/target/main-...jar&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Beispiel-Ausgabe:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// file:/Users/kris/IdeaProjects/JavaTests/./dependent/target/dependent-1.0-SNAPSHOT.jar&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// file:/Users/kris/IdeaProjects/JavaTests/./external/target/external-1.0-SNAPSHOT.jar&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// file:/Users/kris/IdeaProjects/JavaTests/./main/target/main-1.0-SNAPSHOT.jar&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Klasse wurde geladen von: file:/Users/kris/IdeaProjects/JavaTests/target/classes/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// New Hello from External!&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Hello from Dependent!&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Main&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Start-Ordner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;currentDir&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Liste der jars, die von searchForJars() gefüllt wird&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;urls&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;searchForJars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;currentDir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;urls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;URL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;urls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// classLoader durchsucht die gefundenen jars in `urls`.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;URLClassLoader&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;classLoader&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;URLClassLoader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;urls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toArray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getClassLoader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Lade de.joehntopp.java.External&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;externalClass&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;de.koehntopp.java.External&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;classLoader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Debug: Wir wollen drucken, von wo die Klasse geladen wurde.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ProtectionDomain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;protectionDomain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;externalClass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getProtectionDomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CodeSource&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;codeSource&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;protectionDomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCodeSource&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;URL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;codeSource&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;codeSource&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLocation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Klasse wurde geladen von: &amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Aufruf von External.main(String[] args)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;externalClass&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getMethod&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;main&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;invoke&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{});&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;searchForJars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;urls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;listFiles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isDirectory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;searchForJars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;urls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Rekursiver Aufruf für Unterverzeichnisse&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;endsWith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.jar&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;urls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toURI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toURL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To find the &lt;code&gt;jar&lt;/code&gt; with the &lt;code&gt;External&lt;/code&gt; class, we start to search for any &lt;code&gt;jar&lt;/code&gt; file recursively under &lt;code&gt;&amp;quot;.&amp;quot;&lt;/code&gt;.
This is done in &lt;code&gt;searchForJar(dir, urls)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We are using the &lt;code&gt;dir&lt;/code&gt; directory to list all files in it,
then walk through the found files.
If the current file is a directory, we recursively descend into it.&lt;/p&gt;
&lt;p&gt;If the current file has a name ending in &lt;code&gt;&amp;quot;.jar&amp;quot;&lt;/code&gt;, we add it to the &lt;code&gt;urls&lt;/code&gt; list.&lt;/p&gt;
&lt;p&gt;Using the list of jars, we create a &lt;code&gt;classLoader&lt;/code&gt;.
Using the &lt;code&gt;classLoader&lt;/code&gt;, we load the requested class as &lt;code&gt;externalClass&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We then ask &lt;code&gt;externalClass&lt;/code&gt; for its &lt;code&gt;main(String[] args)&lt;/code&gt; method using &lt;code&gt;getMethod&lt;/code&gt;.
We cannot simply ask for &lt;code&gt;main&lt;/code&gt;, because a class in Java can have more than one implementation of &lt;code&gt;main&lt;/code&gt; with different signatures.&lt;/p&gt;
&lt;p&gt;The found method is then invoked as static (the first parameter of &lt;code&gt;.invoke()&lt;/code&gt;, &lt;code&gt;this&lt;/code&gt;, is &lt;code&gt;null&lt;/code&gt;).
The second and following parameters are the arguments, here an empty &lt;code&gt;String[]&lt;/code&gt; cast to &lt;code&gt;Object&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;calling-with-java--jar&#34;&gt;
    &lt;a href=&#34;#calling-with-java--jar&#34;&gt;
	Calling with &lt;code&gt;java -jar&lt;/code&gt;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;To be able to call the &lt;code&gt;Main&lt;/code&gt; class from its &lt;code&gt;jar&lt;/code&gt;, we need to add the line&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Main-Class: de.koehntopp.java.Main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;to the &lt;code&gt;MANIFEST.MF&lt;/code&gt; file of the &lt;code&gt;jar&lt;/code&gt;.
This is quickly and elegantly done in Maven with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;na&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&#34;nt&#34;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;de.koehntopp.java&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;main&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;maven.compiler.source&amp;gt;&lt;/span&gt;17&lt;span class=&#34;nt&#34;&gt;&amp;lt;/maven.compiler.source&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;maven.compiler.target&amp;gt;&lt;/span&gt;17&lt;span class=&#34;nt&#34;&gt;&amp;lt;/maven.compiler.target&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&#34;nt&#34;&gt;&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-jar-plugin&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.3.0&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nt&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;archive&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;nt&#34;&gt;&amp;lt;manifest&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;nt&#34;&gt;&amp;lt;addClasspath&amp;gt;&lt;/span&gt;true&lt;span class=&#34;nt&#34;&gt;&amp;lt;/addClasspath&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;nt&#34;&gt;&amp;lt;mainClass&amp;gt;&lt;/span&gt;de.koehntopp.java.Main&lt;span class=&#34;nt&#34;&gt;&amp;lt;/mainClass&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/archive&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nt&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;building-and-running&#34;&gt;
    &lt;a href=&#34;#building-and-running&#34;&gt;
	Building and running
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;We can build this with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; mvn clean
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; mvn package
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;from the top level directory.&lt;/p&gt;
&lt;p&gt;We can then run it with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; java -jar main/target/main-1.0-SNAPSHOT.jar
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;file:/Users/kris/IdeaProjects/JavaTests/./dependent/target/dependent-1.0-SNAPSHOT.jar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;file:/Users/kris/IdeaProjects/JavaTests/./external/target/external-1.0-SNAPSHOT.jar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;file:/Users/kris/IdeaProjects/JavaTests/./main/target/main-1.0-SNAPSHOT.jar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Klasse wurde geladen von: file:/Users/kris/IdeaProjects/JavaTests/./external/target/external-1.0-SNAPSHOT.jar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;New Hello from External!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Hello from Dependent!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;debugging-the-class-loading&#34;&gt;
    &lt;a href=&#34;#debugging-the-class-loading&#34;&gt;
	Debugging the class loading
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;To better understand what happens, we can run it with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; java -verbose:class -jar main/target/main-1.0-SNAPSHOT.jar &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;grep -v &lt;span class=&#34;s1&#34;&gt;&amp;#39;shared objects file&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[0.020s][info][class,load] sun.nio.cs.UTF_8$Encoder source: jrt:/java.base
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[0.029s][info][class,load] de.koehntopp.java.Main source: file:/Users/kris/IdeaProjects/JavaTests/main/target/main-1.0-SNAPSHOT.jar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;file:/Users/kris/IdeaProjects/JavaTests/./dependent/target/dependent-1.0-SNAPSHOT.jar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;file:/Users/kris/IdeaProjects/JavaTests/./external/target/external-1.0-SNAPSHOT.jar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;file:/Users/kris/IdeaProjects/JavaTests/./main/target/main-1.0-SNAPSHOT.jar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[0.033s][info][class,load] java.net.URLClassLoader$1 source: jrt:/java.base
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[0.040s][info][class,load] java.io.FilePermissionCollection$$Lambda/0x00000090010435e0 source: java.io.FilePermissionCollection
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[0.040s][info][class,load] de.koehntopp.java.External source: file:/Users/kris/IdeaProjects/JavaTests/./external/target/external-1.0-SNAPSHOT.jar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[0.041s][info][class,load] java.lang.invoke.LambdaForm$MH/0x0000009001001800 source: __JVM_LookupDefineClass__
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Klasse wurde geladen von: file:/Users/kris/IdeaProjects/JavaTests/./external/target/external-1.0-SNAPSHOT.jar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[0.043s][info][class,load] java.lang.invoke.LambdaForm$MH/0x0000009001002c00 source: __JVM_LookupDefineClass__
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;New Hello from External!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[0.043s][info][class,load] de.koehntopp.java.Dependent source: file:/Users/kris/IdeaProjects/JavaTests/./dependent/target/dependent-1.0-SNAPSHOT.jar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Hello from Dependent!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;By adding the parameter &lt;code&gt;-verbose:class&lt;/code&gt; to the java call, we get a list of classes loaded when they are loaded.
We see that only &lt;code&gt;Main&lt;/code&gt; is loaded initially.
The classloader output is interspersed with our own debugging.&lt;/p&gt;
&lt;p&gt;Eventually, &lt;code&gt;External&lt;/code&gt; is loaded and then run.&lt;/p&gt;
&lt;p&gt;Only when &lt;code&gt;External&lt;/code&gt; instantiates its &lt;code&gt;Dependent&lt;/code&gt; class to call the static method, &lt;code&gt;Dependent&lt;/code&gt; is loaded.
We can see that,
because the class loader debug output referencing the &lt;code&gt;Dependent&lt;/code&gt; class comes after the &lt;code&gt;&amp;quot;New Hello from External!&amp;quot;&lt;/code&gt; message.&lt;/p&gt;
&lt;h1 id=&#34;creating-instances&#34;&gt;
    &lt;a href=&#34;#creating-instances&#34;&gt;
	Creating Instances
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;It is also possible to create instances, and then call them.
For example, in a plugin loader for Minecraft:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pluginClass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;newInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Method&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pluginClass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getMethod&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;onEnable&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;invoke&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;printStackTrace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;summary&#34;&gt;
    &lt;a href=&#34;#summary&#34;&gt;
	Summary
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;In this tiny example, we have created a multi-target Maven project with static dependencies between the subprojects.
We created the main jar with a &lt;code&gt;Main-Class&lt;/code&gt; property in the manifest to conveniently run the jar.
We are loading and calling &lt;code&gt;External&lt;/code&gt; from &lt;code&gt;Main&lt;/code&gt; dynamically,
and we are loading and calling &lt;code&gt;Dependent&lt;/code&gt; from &lt;code&gt;External&lt;/code&gt; statically, using a maven dependency.&lt;/p&gt;
&lt;p&gt;We could do the class loader dance a second time to load and call &lt;code&gt;Dependent&lt;/code&gt; dynamically as well,
if we wanted to.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://blog.koehntopp.info/2005/10/08/dynamisch-geladener-code.html&#34;&gt;Dynamisch geladener Code&lt;/a&gt;

&lt;/dt&gt;
&lt;dd&gt;Article from 2005 in German language, which discusses a similar problem in C.&lt;/dd&gt;
&lt;/dl&gt;
</description>
    </item>
    
    <item>
      <title>Jetbrains Remote Development</title>
      <link>https://blog.koehntopp.info/2022/06/27/jetbrains-remote-development.html</link>
      <pubDate>Mon, 27 Jun 2022 04:48:00 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2022/06/27/jetbrains-remote-development.html</guid>
      <description>&lt;p&gt;I am on a Mac or on a Windows machine, and always I have to develop for a Linux target.
On Windows, this is easy, because most Jetbrains environment already support working inside WSL2, so simply choosing this is a no-brainer.&lt;/p&gt;
&lt;p&gt;On MacOS, I can create a &amp;ldquo;Docker Container&amp;rdquo; do develop in, but it is kind of a joke.
That is, because MacOS cannot run Linux cgroups and namespaces natively, so you actually get a lightweight VM with Linux running, and then a container inside that.
You might as well run Linux in VMware and start the Jetbrains thing inside that.
It will hurt probably less than trying to edit inside a docker filesystem.&lt;/p&gt;
&lt;p&gt;And sometimes you do not just need a Linux box, but an actual development environment that runs on one specific server that you have ssh access to.
Remote editing is &amp;ldquo;easy&amp;rdquo; in vscode, but there is no &amp;ldquo;my file tree is on that machine&amp;rdquo; mode in Jetbrains stuff.&lt;/p&gt;
&lt;p&gt;Or is there?&lt;/p&gt;
&lt;h1 id=&#34;enter-the-gateway&#34;&gt;
    &lt;a href=&#34;#enter-the-gateway&#34;&gt;
	Enter the Gateway
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Turns out, there is something better.
The Jetbrains Gateways runs their editor, headless, on the remote machine, and that editor edits.
The client is the GUI, and that runs natively on your development machine, using the native GUI and key bindings.
GUI and remote editor communicate, the same way &amp;ldquo;Code with me&amp;rdquo; communicates.&lt;/p&gt;
&lt;p&gt;So&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install &amp;ldquo;Jetbrains Gateway&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Set up ssh connectivity in it.&lt;/li&gt;
&lt;li&gt;Start a new project, watch it download and install the development environment remotely.&lt;/li&gt;
&lt;li&gt;Enter the project and edit away.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/jetbrains-gateway1.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Yup, it&amp;rsquo;s beta.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;does-it-even-work&#34;&gt;
    &lt;a href=&#34;#does-it-even-work&#34;&gt;
	Does it even work?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Well, yes.
I can hit the &amp;ldquo;Terminal&amp;rdquo; tab, and get an actual shell on the remote box.
I can run and build stuff as if I would be running the GUI locally on the remote box.
The native binaries are what I have on the remote box.&lt;/p&gt;
&lt;p&gt;Well, no.
It&amp;rsquo;s beta.
Sometimes it gets stuck, and sometimes the keys are &amp;ldquo;glue-ey&amp;rdquo;, that is, latency can be felt.&lt;/p&gt;
&lt;p&gt;Usually it helps to disconnect or kill the local client and then reconnect to the remote session.
Sometimes that needs to be done more than once.&lt;/p&gt;
&lt;p&gt;Well, yes.
Facinatingly, the remote session stays if you kill the local client, and on reconnect will be still there, blinking cursor and everything, just where you left it.&lt;/p&gt;
&lt;p&gt;All in all, I think this is going to change the way it work. At least when the remaining problems are fixed.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/06/jetbrains-gateway2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Connecting to the Blog.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Apparently there is a blog article from &lt;a href=&#34;https://blog.jetbrains.com/blog/2021/12/03/dive-into-jetbrains-gateway/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;December 2021&lt;/a&gt;

 which describes how it works in more detail.
With the upcoming &amp;ldquo;Fleet&amp;rdquo;, it seems that they will be going all-in on the split between IDE backend and frontend.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Disclaimer:&lt;/em&gt; I am a paying customer of Jetbrains, and have the private user all-in subscription, paid for myself.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Understanding git</title>
      <link>https://blog.koehntopp.info/2021/10/12/understanding-git.html</link>
      <pubDate>Tue, 12 Oct 2021 17:50:52 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2021/10/12/understanding-git.html</guid>
      <description>&lt;p&gt;It occurred to me that I do not know nearly enough how git works, internally.
The contents of the .git directory seem to be accessible enough, so I am going on a Safari in the git repository of this blog.
You can follow along if you check out &lt;a href=&#34;https://github.com/isotopp/isotopp.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the blog&lt;/a&gt;

.&lt;/p&gt;
&lt;h1 id=&#34;refs&#34;&gt;
    &lt;a href=&#34;#refs&#34;&gt;
	Refs
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;All things git live in &lt;code&gt;.git&lt;/code&gt;.
The thing we are working with seem to live in &lt;code&gt;.git/refs&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; find .git/refs -type f
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;.git/refs/heads/main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;.git/refs/remotes/github/main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;.git/refs/remotes/origin/HEAD
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;.git/refs/remotes/origin/main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;.git/refs/remotes/origin/master
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;.git/refs/stash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s have a look at &lt;code&gt;.git/refs/heads/main&lt;/code&gt; and the &lt;code&gt;.git/refs/remotes&lt;/code&gt; here.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; cat .git/refs/heads/main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;daad5e31926cdf8a3af0ecff517c4d5892b6f62a
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; cat .git/refs/remotes/github/main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;daad5e31926cdf8a3af0ecff517c4d5892b6f62a
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; cat .git/refs/remotes/origin/main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;daad5e31926cdf8a3af0ecff517c4d5892b6f62a
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;commits&#34;&gt;
    &lt;a href=&#34;#commits&#34;&gt;
	Commits
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;So it appears that all these things reference the same &amp;ldquo;thing&amp;rdquo;, &lt;code&gt;daad5e31926cdf8a3af0ecff517c4d5892b6f62a&lt;/code&gt;.
This appears to be a 40 character (40 * 4 bit = 160 bit) SHA-1 hash value.
git has low level commands to type this, and print it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git cat-file -t daad5e31926cdf8a3af0ecff517c4d5892b6f62a
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;commit
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git cat-file -p daad5e31926cdf8a3af0ecff517c4d5892b6f62a
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tree ba5a4ceb371d42d766832dae545ecf00b9194ea2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;parent 75077bc79697ea1e37da496b1210ca26f3c66c2c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;parent b71d9463ad8c3b71bd279e88e74ce15e01de2aee
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;author Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1633513546 +0200
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;committer Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1633513546 +0200
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Merge remote-tracking branch &amp;#39;github/main&amp;#39; into main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So this is a file of the type &lt;code&gt;commit&lt;/code&gt;, and it contains ASCII lines that describe the commit.
Attributes of the commit are a tree, zero or more parent commits, an author, and a committer, as well as a log-message.
The author and commit lines contain a name, a mail address, a Unix timestamp and a timezone.
We can &lt;a href=&#34;https://rachelbythebay.com/w/2021/10/05/cmd/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;convert that timestamp carefully&lt;/a&gt;

:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; date -d @1633513546
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Wed Oct  6 11:45:46 CEST 2021
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also check out the things the commit points to:
We will find that the parent entries also reference commits (the two commits that precede this one), and the tree entry references a tree object.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git cat-file -t 75077bc79697ea1e37da496b1210ca26f3c66c2c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;commit
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git cat-file -t b71d9463ad8c3b71bd279e88e74ce15e01de2aee
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;commit
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git cat-file -t ba5a4ceb371d42d766832dae545ecf00b9194ea2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tree
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Graphically, the highlighted part of the structure:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/git-tree-view.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The commit &lt;code&gt;daad5e31...&lt;/code&gt; has two parents: It is a merge commit of &lt;code&gt;b71d9463...&lt;/code&gt; and &lt;code&gt;75077bc7...&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;tree&#34;&gt;
    &lt;a href=&#34;#tree&#34;&gt;
	Tree
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;So a commit references a tree.
A tree is a list of files and other trees, which function as subdirectories.
Together they form a snapshot of the entire blog at this point in time (at this commit).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git cat-file -p  bf447432a99b33174809dbe10d1df43576a032b3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;100644 blob 199ea559714ed3569a88ab932476b11444244885    .gitignore
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;100644 blob 09e9c05d0fcf4a403addb0b2b8ee613bc4bd4b1d    CNAME
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;040000 tree f7fe2d64de25404f660561f7cfbce8d78bf05c09    _drafts
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;040000 tree fe33a062dcb4406a5ecf836ddeb1cfcd9ba85e8b    _includes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The important takeaway seems to be that git does not store changes made to a file, it stores full files.
That is less inefficient than it sounds, because unchanged files will have the same hash.
Things with the same  hash will exist only once in storage, no matter in how many commits (or trees) they are being referenced.&lt;/p&gt;
&lt;h1 id=&#34;blob&#34;&gt;
    &lt;a href=&#34;#blob&#34;&gt;
	Blob
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;And finally files: We can list their content, again, with the same tool.
Using the &lt;code&gt;-t&lt;/code&gt; and &lt;code&gt;-s&lt;/code&gt; options we can also see their type and size.&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;09e9c05d0fcf4a403addb0b2b8ee613bc4bd4b1d&lt;/code&gt; for the &lt;code&gt;CNAME&lt;/code&gt; file from the tree above we get:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git cat-file -t 09e9c05d0fcf4a403addb0b2b8ee613bc4bd4b1d
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;blob
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git cat-file -s 09e9c05d0fcf4a403addb0b2b8ee613bc4bd4b1d
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;20
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git cat-file -p 09e9c05d0fcf4a403addb0b2b8ee613bc4bd4b1d
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;blog.koehntopp.info
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;diffs&#34;&gt;
    &lt;a href=&#34;#diffs&#34;&gt;
	Diffs
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Diffs do not exist in git.
They are instead generated on the fly, by comparing two trees.
Again, this is less inefficient that one might think:
All unchanged files will have also unchanged hashes and therefore need no consideration for a diff.&lt;/p&gt;
&lt;p&gt;For objects with different hashes (but identical names), git then generates a diff.&lt;/p&gt;
&lt;h1 id=&#34;other-structures&#34;&gt;
    &lt;a href=&#34;#other-structures&#34;&gt;
	Other structures
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;When you &lt;code&gt;checkout&lt;/code&gt;, you ask git to construct a certain tree using a hash, a tag name, branch or anything else.
Every time, git records the checkout in the &lt;code&gt;reflog&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;daad5e3 (HEAD -&amp;gt; main, origin/main, github/main) HEAD@{0}: checkout: moving from 8a650853c5525013800c42f68c92b4d431b7b97c to main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;8a65085 HEAD@{1}: checkout: moving from main to 8a650853c5525013800c42f68c92b4d431b7b97c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;daad5e3 (HEAD -&amp;gt; main, origin/main, github/main) HEAD@{2}: merge github/main: Merge made by the &amp;#39;recursive&amp;#39; strategy.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;75077bc HEAD@{3}: commit: fix 2021-10-06-empty-commits-and-other-wrong-tools-for-the-job.md
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;72ab462 HEAD@{4}: commit: fix 2021-10-06-empty-commits-and-other-wrong-tools-for-the-job.md
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can use this list of commit hashes to reconstruct what you did, where known good locations are, and of course to return to them.
This is essential to repair a git repository that somehow was changed unintentionally and that still contains important salvageable data.&lt;/p&gt;
&lt;p&gt;We find the original data git uses in &lt;code&gt;.git/logs/HEAD&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; tail -4 .git/logs/HEAD
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;72ab462c4d134b02da1e474d3edb9db201e7aecb 75077bc79697ea1e37da496b1210ca26f3c66c2c Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1633508667 +0200      commit: fix 2021-10-06-empty-commits-and-other-wrong-tools-for-the-job.md
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;75077bc79697ea1e37da496b1210ca26f3c66c2c daad5e31926cdf8a3af0ecff517c4d5892b6f62a Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1633513546 +0200      merge github/main: Merge made by the &amp;#39;recursive&amp;#39; strategy.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;daad5e31926cdf8a3af0ecff517c4d5892b6f62a 8a650853c5525013800c42f68c92b4d431b7b97c Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1634064444 +0200      checkout: moving from main to 8a650853c5525013800c42f68c92b4d431b7b97c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;8a650853c5525013800c42f68c92b4d431b7b97c daad5e31926cdf8a3af0ecff517c4d5892b6f62a Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1634064654 +0200      checkout: moving from 8a650853c5525013800c42f68c92b4d431b7b97c to main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;object-storage&#34;&gt;
    &lt;a href=&#34;#object-storage&#34;&gt;
	Object storage
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;git stores all things with a hashed name in .git/objects.
The first byte (the first two letters) of the SHA-1 name make up a directory name, the rest goes into a file name.
File content is stored compressed, using zlib.&lt;/p&gt;
&lt;p&gt;We can check that using any programming language that supports zlib.
Here in Python:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# $ git log | head -1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# commit daad5e31926cdf8a3af0ecff517c4d5892b6f62a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# $ python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Python 3.8.10 (default, Jun  2 2021, 10:49:15)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;zlib&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.git/objects/da/ad5e31926cdf8a3af0ecff517c4d5892b6f62a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;rb&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;n&#34;&gt;fi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decompress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;commit 333tree ba5a4ceb371d42d766832dae545ecf00b9194ea2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;parent 75077bc79697ea1e37da496b1210ca26f3c66c2c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;parent b71d9463ad8c3b71bd279e88e74ce15e01de2aee
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;author Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1633513546 +0200
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;committer Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1633513546 +0200
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Merge remote-tracking branch &amp;#39;github/main&amp;#39; into main
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We see the file has a header, &lt;code&gt;commit 333&lt;/code&gt;, terminated by a NULL byte.
This assists in reconstruction a &lt;code&gt;.git&lt;/code&gt; directory from fragments, if any structures are lost.&lt;/p&gt;
&lt;p&gt;It is followed by the actual file contents, which in this case is a commit, in ASCII.&lt;/p&gt;
&lt;p&gt;Things in gits object storage can get orphaned or grow without size.
Maintenance procedures exist that walk the various structures, identify orphaned objects and clean up things.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Empty commits and other wrong tools for the job</title>
      <link>https://blog.koehntopp.info/2021/10/06/empty-commits-and-other-wrong-tools-for-the-job.html</link>
      <pubDate>Wed, 06 Oct 2021 09:46:10 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2021/10/06/empty-commits-and-other-wrong-tools-for-the-job.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://twitter.com/akrey/status/1445656529877680129&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;This&lt;/a&gt;

 is how you can make an empty commit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git commit --allow-empty -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;Kick it&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This has the disadvantage of also generating a commit message.
&lt;a href=&#34;https://twitter.com/akrey/status/1445656529877680129&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Another way&lt;/a&gt;

 to achieve this seems to be&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git commit --amend --no-edit &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git push -f
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;but that will make people hate you in other ways.&lt;/p&gt;
&lt;p&gt;So lets stop and ask:
Why would you want to make an empty commit?&lt;/p&gt;
&lt;p&gt;Most people want this because they attached a server-side action to a commit, a CI/CD activity.&lt;/p&gt;
&lt;h1 id=&#34;this-is-wrong&#34;&gt;
    &lt;a href=&#34;#this-is-wrong&#34;&gt;
	This is wrong
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;This is wrong in the same way &lt;a href=&#34;https://blog.koehntopp.info/2021/01/05/using-python-to-bash.html&#34;&gt;writing Shell Scripts&lt;/a&gt;

 is wrong:
It kind of works, but now you have another, worse problem and still no solution to the original problem.&lt;/p&gt;
&lt;p&gt;You need to stop and question your life choices, and most importantly, wake up the engineer in you.&lt;/p&gt;
&lt;h2 id=&#34;but-i-need-to-debug-my-cicd-pipeline&#34;&gt;
    &lt;a href=&#34;#but-i-need-to-debug-my-cicd-pipeline&#34;&gt;
	But I need to debug my CI/CD pipeline
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Kick it off using the tooling provided to you.
Your environment has an API that is specifically built to enable you to do that.
Use it.&lt;/p&gt;
&lt;p&gt;In Gitlab:
&lt;a href=&#34;https://docs.gitlab.com/ee/ci/triggers/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Triggering pipelines through the API &lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;In GitHub:
&lt;a href=&#34;https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow#running-a-workflow-using-the-rest-api&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Running a workflow using the REST API&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;This not only works reliably, you can get proper error messages.
On top of that, you just did &lt;em&gt;not&lt;/em&gt; pee into your commit history.&lt;/p&gt;
&lt;h2 id=&#34;but-i-need-to-redeploy-because-i-need-a-terraform-run-after-i-just-lost-an-instance&#34;&gt;
    &lt;a href=&#34;#but-i-need-to-redeploy-because-i-need-a-terraform-run-after-i-just-lost-an-instance&#34;&gt;
	But I need to redeploy, because I need a Terraform run after I just lost an instance
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;This is fractally broken, there is breakage in your breakage.&lt;/p&gt;
&lt;p&gt;The proper solution is a reconciliation loop of the kind Kubernetes has: Measure the existing state and compare it to the desired state. Then execute the actions necessary to transform the measured state into the desired state, in a loop.&lt;/p&gt;
&lt;p&gt;So if you are not on K8s, you need to move to K8s or re-invent K8s for your environment, badly.
Yes, Terraform, Harness and friends have it all wrong.&lt;/p&gt;
&lt;p&gt;Erecting infrastructure quickly and portably across backends surely is nice, but assumes a properly functioning declarative environment.
That is an environment where you describe the desired state of the infrastructure and the platform takes care of maintaining that desired state for you.&lt;/p&gt;
&lt;p&gt;Most platforms do not work that way.
Some fake it, badly.
For example, nobody uses AWS autoscalers to autoscale, but they surely are useful to protect your instance count.&lt;/p&gt;
&lt;h2 id=&#34;the-problem-inside-this-problem&#34;&gt;
    &lt;a href=&#34;#the-problem-inside-this-problem&#34;&gt;
	The problem inside this problem
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;And since we are talking about CI/CD pipelines:
Don&amp;rsquo;t YAML them. Don&amp;rsquo;t JSON them. Don&amp;rsquo;t XML them.&lt;/p&gt;
&lt;p&gt;All of these things surely are nice to describe static objects that have static properties.
You can successfully use any of them to express the desired state of a thing in a declarative way.&lt;/p&gt;
&lt;p&gt;If you see anything that looks like &amp;ldquo;foreach&amp;rdquo;, &amp;ldquo;when&amp;rdquo;, &amp;ldquo;unless&amp;rdquo; or similar, it&amp;rsquo;s procedural.
These are control structures.
They are part of programming languages.
Which any of these three are decidedly not.&lt;/p&gt;
&lt;p&gt;Programming in any of these three is wrong use of tooling, and you should not do it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;YAML, JSON and XML are for declarative things.&lt;/li&gt;
&lt;li&gt;Python, Go and Rust are for procedural things.&lt;/li&gt;
&lt;li&gt;Bash is for interactive use only.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Use the proper tooling for the job.
Be an engineer.&lt;/p&gt;
&lt;p&gt;Otherwise, you&amp;rsquo;ll just get your old bash rsync deployment scripts back, in a harder to debug packaging, and wrapped in conditionals and loops in YAML &amp;ldquo;syntax&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;That is not what progress looks like.
At all.
Shoddy engineering begets pager calls, outages and suffering.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gitlab in Docker</title>
      <link>https://blog.koehntopp.info/2020/11/22/gitlab-in-docker.html</link>
      <pubDate>Sun, 22 Nov 2020 20:33:10 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2020/11/22/gitlab-in-docker.html</guid>
      <description>&lt;p&gt;These installation notes are mostly a note to myself, documenting the installation process of a Gitlab Omnibus Container in Docker, plus Gitlab Runners.&lt;/p&gt;
&lt;h2 id=&#34;os-setup&#34;&gt;
    &lt;a href=&#34;#os-setup&#34;&gt;
	OS Setup
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We are installing into &lt;code&gt;/export/gitlab&lt;/code&gt;, a 10G xfs slice from the local flash pool:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvcreate -n gitlab -L 10G data
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mkfs -t xfs /dev/data/gitlab
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mkdir /export/gitlab
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mount /dev/data/gitlab /export/gitlab
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/dev/data/gitlab\t/export/gitlab\txfs\tbsdgroups,usrquota,grpquota,attr2,nofail,noatime 1 2&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/fstab
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mkdir /export/gitlab/&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;gitlab,gitlab-runner&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mkdir /export/gitlab/gitlab/&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;config,data,logs&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;docker&#34;&gt;
    &lt;a href=&#34;#docker&#34;&gt;
	Docker
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We are using &lt;code&gt;docker-compose&lt;/code&gt; to run this, with a &lt;code&gt;.env&lt;/code&gt; (dotenv) like so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; cat .env
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;GITLAB_HOME=/export/gitlab/gitlab
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;GITLAB_DOMAIN=gitlab.home.koehntopp.de
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;GITLAB_HTTP_PORT=81
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;GITLAB_HTTPS_PORT=444
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;GITLAB_SSH_PORT=2222
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And a &lt;code&gt;docker-compose.yaml&lt;/code&gt; like so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;web&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gitlab&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gitlab&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gitlab/gitlab-ce:latest&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;always&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;${GITLAB_DOMAIN}&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;GITLAB_OMNIBUS_CONFIG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;        external_url &amp;#34;https://gitlab.home.koehntopp.de&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;${GITLAB_HTTP_PORT}:80&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;${GITLAB_HTTPS_PORT}:443&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;${GITLAB_SSH_PORT}:22&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;${GITLAB_HOME}/config:/etc/gitlab&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;${GITLAB_HOME}/logs:/var/log/gitlab&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;${GITLAB_HOME}/data:/var/opt/gitlab&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;## vim: syntax=yaml ts=2 sw=2 sts=2 sr et ai&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When starting this with &lt;code&gt;docker-compose up&lt;/code&gt;, we can follow the full horribleness of the installation process in the console: The Gitlab Omnibus container collects a large number of processes internally, including a postgres, puma, nginx and a number of additional components, and configures itself internally using Chef. It is the Anti-Container.&lt;/p&gt;
&lt;h2 id=&#34;gitlabrb&#34;&gt;
    &lt;a href=&#34;#gitlabrb&#34;&gt;
	gitlab.rb
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The initial run will produce a &lt;code&gt;gitlab.rb&lt;/code&gt; config file in &lt;code&gt;/export/gitlab/gitlab/config/gitlab.rb&lt;/code&gt;. The file is over 100KB in size, and will contain deactivated config.&lt;/p&gt;
&lt;p&gt;A very minimal, runnable base config for me looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# grep -v &amp;#34;^#&amp;#34; gitlab.rb | uniq&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;external_url&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://gitlab.home.koehntopp.de&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;gitlab_rails&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;smtp_enable&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;gitlab_rails&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gitlab_email_enabled&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;gitlab_rails&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gitlab_default_can_create_group&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;gitlab_rails&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gitlab_username_changing_enabled&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;gitlab_rails&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gitlab_shell_ssh_port&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2222&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;gitlab_kas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;enable&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tls-forwarding-from-host-to-container&#34;&gt;
    &lt;a href=&#34;#tls-forwarding-from-host-to-container&#34;&gt;
	TLS Forwarding from host to container
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The internal ports need to be exported to the home network, so we need an Apache TLS forwarding config.&lt;/p&gt;
&lt;p&gt;We are using this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-apache&#34; data-lang=&#34;apache&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;*:80&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;ServerName&lt;/span&gt; gitlab.home.koehntopp.de
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;ErrorLog&lt;/span&gt; ${APACHE_LOG_DIR}/gitlab-error.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;CustomLog&lt;/span&gt; ${APACHE_LOG_DIR}/gitlab-access.log combined
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;Alias&lt;/span&gt; /.well-known/acme-challenge &lt;span class=&#34;sx&#34;&gt;/var/lib/dehydrated/acme-challenges&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/var/lib/dehydrated&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;Options&lt;/span&gt; Indexes FollowSymLinks
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;AllowOverride&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;Require&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;all&lt;/span&gt; granted
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;If&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;!-f &amp;#39;%{REQUEST_FILENAME}&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;RedirectMatch&lt;/span&gt; permanent ^/(.*) &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://gitlab.home.koehntopp.de/$1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/If&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;*:443&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;ServerName&lt;/span&gt; gitlab.home.koehntopp.de
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;ErrorLog&lt;/span&gt; ${APACHE_LOG_DIR}/gitlab-ssl-error.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;CustomLog&lt;/span&gt; ${APACHE_LOG_DIR}/gitlab-ssl-access.log combined
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;SSLEngine&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;SSLCertificateFile&lt;/span&gt; &lt;span class=&#34;sx&#34;&gt;/var/lib/dehydrated/certs/home.koehntopp.de/cert.pem&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;SSLCertificateKeyFile&lt;/span&gt; &lt;span class=&#34;sx&#34;&gt;/var/lib/dehydrated/certs/home.koehntopp.de/privkey.pem&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;SSLCertificateChainFile&lt;/span&gt; &lt;span class=&#34;sx&#34;&gt;/var/lib/dehydrated/certs/home.koehntopp.de/chain.pem&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;#   SSLProxyEngine on&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;ProxyPreserveHost&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;On&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;ProxyPass&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://127.0.0.1:81/&amp;#34;&lt;/span&gt; nocanon
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;ProxyPassReverse&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://127.0.0.1:81/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;AllowEncodedSlashes&lt;/span&gt; NoDecode
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;DocumentRoot&lt;/span&gt; &lt;span class=&#34;sx&#34;&gt;/var/www/gitlab.home.koehntopp.de&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# vim: syntax=apache ts=4 sw=4 sts=4 sr noet&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We are terminating the TLS at the Apache and forward plaintext to the nginx, which then forwards to the internal Ruby. This is silly, but I was not feeling like pulling that ball of string apart.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ProxyPass ... nocanon&lt;/code&gt; and &lt;code&gt;AllowEncodedSlashes NoDecode&lt;/code&gt; are necessary to avoid internal Error on various URLs that require passing on of &lt;code&gt;//&lt;/code&gt; and &lt;code&gt;/-/&lt;/code&gt; URL fragments (several issues, for example &lt;a href=&#34;https://gitlab.com/gitlab-org/gitlab/-/issues/211500#note_381651793&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;

).&lt;/p&gt;
&lt;h2 id=&#34;basic-setup&#34;&gt;
    &lt;a href=&#34;#basic-setup&#34;&gt;
	Basic Setup
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Admin Login is with &amp;ldquo;root&amp;rdquo;, and will guide you through a password change and some basic setup.&lt;/p&gt;
&lt;p&gt;I created users for the family, and groups for my work and for the little one.&lt;/p&gt;
&lt;p&gt;Once you have groups, pushing existing repositories into gitlab is quickly done with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; git push --set-upstream ssh://git@gitlab.home.koehntopp.de:2222/kris/&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;git rev-parse --show-toplevel &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xargs basename&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;.git &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;git rev-parse --abbrev-ref HEAD&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will create a repo for the user or group (here: &lt;code&gt;kris&lt;/code&gt;) that has a name identical to the current directory. The &lt;code&gt;xargs basename&lt;/code&gt; expression can be replaced with the desired literal name instead.&lt;/p&gt;
&lt;p&gt;Afterwards, it may be useful to &lt;code&gt;git remote remove origin&lt;/code&gt;, &lt;code&gt;git remote add origin ...&lt;/code&gt;. A quick &lt;code&gt;git pull --rebase&lt;/code&gt; and &lt;code&gt;git branch --set-upstream-to=origin/master master&lt;/code&gt; will exercise and config the local push and pull operations, too.&lt;/p&gt;
&lt;h2 id=&#34;a-hello-ci-project&#34;&gt;
    &lt;a href=&#34;#a-hello-ci-project&#34;&gt;
	A &amp;ldquo;hello-ci&amp;rdquo; project
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We are creating a basic Python project for gitlab-runner, for testing, &lt;code&gt;kk/probe&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# cat probe.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#! /usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;src&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Hi, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# cat src/__init__.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;src.main&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my_name&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# noqa&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; cat src/main.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;def my_name():
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    return &amp;#34;Kris&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In a &lt;code&gt;src/tests/&lt;/code&gt; directory, we are running &lt;code&gt;pytest&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;src&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_my_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Kris&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At the toplevel, we put our &lt;code&gt;requirements.txt&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;flake8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;pytest
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and a &lt;code&gt;tox.ini&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[flake8]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;exclude=.git,__pycache__,docs,*venv
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;[pytest]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;addopts = -ra -q
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can now build a &lt;code&gt;.gitlab-ci.yml&lt;/code&gt;, also at the toplevel:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;python:3.8&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;before_script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;python --version&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;pip install -r requirements.txt&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;stages&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;Test&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;flake8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;stage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Test&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;flake8&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;pytest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;stage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Test&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;ls -l&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;export PYTHONPATH=&amp;#34;$PYTHONPATH:.&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;python -c &amp;#34;import sys;print(sys.path)&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;pytest src&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Yes, the testing cruft in the pytest setup can later go away&amp;hellip;&lt;/p&gt;
&lt;p&gt;Now, to make this work, we need to install gitlab-runner in a docker variant, and config it.&lt;/p&gt;
&lt;h2 id=&#34;gitlab-runner&#34;&gt;
    &lt;a href=&#34;#gitlab-runner&#34;&gt;
	Gitlab Runner
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;At this point, the runner still needs to be &lt;code&gt;docker-compose&lt;/code&gt;&amp;lsquo;ed. I hacked it for testing like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mkdir -p /export/gitlab/gitlab-runner
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; !$
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mkdir config
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; cat doit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;docker run -d --name gitlab-runner \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  --restart always \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  -v /export/gitlab/gitlab-runner/config:/etc/gitlab-runner \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  -v /var/run/docker.sock:/var/run/docker.sock \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  gitlab/gitlab-runner:latest
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will create a &lt;code&gt;config.toml&lt;/code&gt; in the config directory. We can&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; docker &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; -it gitlab-runner bash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;root@ffd124dab4aa:/# gitlab-runner register
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; gitlab-runner  register
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Runtime platform                                    arch=amd64 os=linux pid=47 revision=8fa89735 version=13.6.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Running in system-mode.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Enter the GitLab instance URL (for example, https://gitlab.com/):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;https://gitlab.home.koehntopp.de/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Enter the registration token:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;TheToken
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Enter a description for the runner:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[ffd124dab4aa]: A test runner
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Enter tags for the runner (comma-separated):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;test
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The token required for registration can be obtained as described &lt;a href=&#34;https://docs.gitlab.com/runner/register/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;I registered group runners for each of my two internal groups, and a shared runner for the (empty) rest.&lt;/p&gt;
&lt;p&gt;All of this will rewrite the &lt;code&gt;config.toml&lt;/code&gt;. I then upped the concurrency to 6 (8 threads available in the hardware).&lt;/p&gt;
&lt;p&gt;Later on, it will turn out that the docker images in my Ubuntu are not writeable as needed, a helper image needs to be added.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;helper_image&lt;/code&gt; line has been added manually below, according to &lt;a href=&#34;https://gitlab.com/gitlab-org/gitlab-runner/-/issues/26618&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this note&lt;/a&gt;

:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# cat /export/gitlab/gitlab-runner/config/config.toml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;concurrent&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;check_interval&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;session_server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;session_timeout&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1800&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;runners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;JX_Snack (Docker)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://gitlab.home.koehntopp.de&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;TheToken
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;  executor = &amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;docker&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;  [runners.custom_build_dir]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;  [runners.cache]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    [runners.cache.s3]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    [runners.cache.gcs]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    [runners.cache.azure]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;  [runners.docker]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    helper_image = &amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;gitlab&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;gitlab-runner-helper&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x86_64-6fbc7474&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    tls_verify = false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    image = &amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    privileged = false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    disable_entrypoint_overwrite = false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    oom_kill_disable = false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    disable_cache = false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    volumes = [&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;shm_size&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For easier testing, it may be useful to allow CI runs on untagged commits. This can be set up as &lt;code&gt;root&lt;/code&gt; in &lt;code&gt;https://.../admin/runners&lt;/code&gt; for the desired test runner.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2020/11/gitlab-untagged.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Allowing the runner to pick up untagged jobs can be useful for testing. It needs to be disabled later.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;With some random committing we can now trigger and debug the pipeline we defined earlier above. Eventually it will actually do something.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2020/11/gitlab-runner.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Eventually, a testing success.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Having a gitlab and a CI/CD pipeline allows us to package the Python Discord Bot development process for the little one in a way that allows him to focus on the various stages of the development process sequentially. For now, testing and deployment can happen magically, we will visit that only later.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How I set up my Python</title>
      <link>https://blog.koehntopp.info/2020/06/29/how-i-set-up-my-python.html</link>
      <pubDate>Mon, 29 Jun 2020 14:40:13 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2020/06/29/how-i-set-up-my-python.html</guid>
      <description>&lt;p&gt;Because Martin wanted some starting point, here is how I set up my Python. There are a lot of other things one can do, but this is supposed to be just a starting point.&lt;/p&gt;
&lt;p&gt;For a new project, make a project directory, usually not with a local git repository.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kk:Python kris$ mkdir project
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kk:Python kris$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; project
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kk:project kris$ git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Initialized empty Git repository in /Users/kris/Python/project/.git/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We need a virtual environment to keep our modules apart from the system python.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kk:project kris$ python3 -m venv ~/.venv/project
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In my case, I have a bash &lt;code&gt;PROMPT_COMMAND&lt;/code&gt; installed that automatically activates the venv when I enter a directory. From the &lt;code&gt;.bashrc&lt;/code&gt;, some highly insecure code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;autoenv&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -f ./.venv &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;nv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;cat ./.venv&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$nv&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/bin/activate&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$VIRTUAL_ENV&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; !&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$nv&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$nv&lt;/span&gt;/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;PROMPT_COMMAND&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;autoenv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And then:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kk:project kris$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; /Users/kris/.venv/project &amp;gt; .venv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;project&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; kk:project kris$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As can be seen from the prompt, the venv already active. Usually, after install the pip is outdated.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;project&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; kk:project kris$ pip install --upgrade pip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Successfully installed pip-20.1.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We also need wheel for C-Language Extensions, and black, mypy and pre-commit.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;project&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; kk:project kris$ pip install wheel
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Successfully installed wheel-0.34.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;project&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; kk:project kris$ pip install black mypy pre-commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Installing collected packages: click, attrs, pathspec, regex, toml, appdirs, typed-ast, black, mypy-extensions, typing-extensions, mypy, cfgv, filelock, six, zipp, importlib-metadata, distlib, virtualenv, nodeenv, pyyaml, identify, pre-commit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Successfully installed appdirs-1.4.4 attrs-19.3.0 black-19.10b0 cfgv-3.1.0 click-7.1.2 distlib-0.3.1 filelock-3.0.12 identify-1.4.20 importlib-metadata-1.7.0 mypy-0.782 mypy-extensions-0.4.3 nodeenv-1.4.0 pathspec-0.8.0 pre-commit-2.5.1 pyyaml-5.3.1 regex-2020.6.8 six-1.15.0 toml-0.10.1 typed-ast-1.4.1 typing-extensions-3.7.4.2 virtualenv-20.0.25 zipp-3.1.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The last three collect a large number of additional dev-dependencies.&lt;/p&gt;
&lt;p&gt;We then need to set-up the pre-commit environment:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;l&#34;&gt;(project) kk:project kris$ cat .pre-commit-config.yaml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;repos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.com/pre-commit/pre-commit-hooks&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v2.3.0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hooks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;check-yaml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;end-of-file-fixer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;trailing-whitespace&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.com/psf/black&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hooks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;black&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.com/pre-commit/mirrors-mypy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hooks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;mypy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;additional_dependencies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;(project) kk:project kris$ pre-commit install&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pre-commit installed at .git/hooks/pre-commit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Pre-commit is running mypy and black, but in a separate environment, so it will be installed again, elsewhere, and we will also need to declare our mypy dependencies here again, unfortunately.&lt;/p&gt;
&lt;p&gt;On the other hand, all our Python will be type-checked and blacken&amp;rsquo;ed automatically on commit.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;project&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;probe&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#! /usr/bin/env python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And here we go:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;project&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; kk:project kris$ git add probe.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;project&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; kk:project kris$ git commit -m &lt;span class=&#34;s1&#34;&gt;&amp;#39;testing&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Check Yaml...........................................&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;no files to check&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;Skipped
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Fix End of Files.........................................................Passed
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Trim Trailing Whitespace.................................................Passed
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;black....................................................................Passed
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mypy.....................................................................Passed
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;master &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;root-commit&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; c7734e4&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; testing
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; file changed, &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; insertions&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;+&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; create mode &lt;span class=&#34;m&#34;&gt;100755&lt;/span&gt; probe.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, I usually collect additional project dependencies in &lt;code&gt;requirements.txt&lt;/code&gt; and freeze them into &lt;code&gt;requirements-frozen.txt&lt;/code&gt; for deployment into a Python Container.&lt;/p&gt;
&lt;p&gt;For example, in one project:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;bridge&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; kk:bridge kris$ cat requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;paho-mqtt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;influxdb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;bridge&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; kk:bridge kris$ cat requirements-frozen.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;paho-mqtt&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;1.5.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;influxdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;5.3.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## The following requirements were added by pip freeze:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;certifi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;2020.4.5.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;chardet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;3.0.4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;idna&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;2.9
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;msgpack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;0.6.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python-dateutil&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;2.8.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;pytz&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;2020.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;2.23.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;six&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;1.15.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;urllib3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;1.25.9
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;bridge&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; kk:bridge kris$ cat Dockerfile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;FROM python:3.8-alpine
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;LABEL &lt;span class=&#34;nv&#34;&gt;maintainer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;isotopp&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nv&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;MQTT to InfluxDB Bridge&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;COPY requirements-frozen.txt /tmp/requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;RUN pip install -r /tmp/requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;COPY . /app
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WORKDIR /app
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CMD &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;python3&amp;#34;&lt;/span&gt;, &lt;span class=&#34;s2&#34;&gt;&amp;#34;-u&amp;#34;&lt;/span&gt;, &lt;span class=&#34;s2&#34;&gt;&amp;#34;bridge.py&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is part of a larger deployment in a &lt;code&gt;docker-compose.yml&lt;/code&gt; then:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;bridge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./bridge&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;isotopp/mqttbridge&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;mqttbridge&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;mqttbridge&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;1000&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;depends_on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;influxdb&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;mosquitto&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;always&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Where do the JOINs go?</title>
      <link>https://blog.koehntopp.info/2020/06/10/where-do-the-joins-go.html</link>
      <pubDate>Wed, 10 Jun 2020 21:38:32 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2020/06/10/where-do-the-joins-go.html</guid>
      <description>&lt;p&gt;I was asking on Twitter:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/isotopp/status/1270746627339358208&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2020/06/joins.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Are you a Developer and understand (Micro-) Services? I am a database person and a bit simple, and I have a genuine Question:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;When moving to a services architecture, where do the JOINs go?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I gave the following context:&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2020/06/shop-schema.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A simple shop&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So you sell stuff, that is, you have an &lt;code&gt;orders&lt;/code&gt; table &lt;code&gt;o&lt;/code&gt; with an &lt;code&gt;oid&lt;/code&gt;, which stores a customer id &lt;code&gt;cid&lt;/code&gt; from a &lt;code&gt;customers&lt;/code&gt; &lt;code&gt;c&lt;/code&gt; table, and an article id &lt;code&gt;aid&lt;/code&gt;, from an articles table &lt;code&gt;a&lt;/code&gt; and a count &lt;code&gt;cnt&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- customer 17 ordered 3 45&amp;#39;s
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When moving to services because you are a multibillion dollar enterprise, your customers, orders and articles can no longer fit into a single database, and there are other reasons to have an OrderService, CustomerService and ArticleService. You still want to ask something (OrderService?) about the number of 45&amp;rsquo;s that 17 ordered.&lt;/p&gt;
&lt;p&gt;Who do you ask? What does this do to connect the dots? How do you do reporting (&amp;ldquo;Show me all top 10 articles by country, zipcode digit 1 by week over the last 52 weeks&amp;rdquo;)?&lt;/p&gt;
&lt;p&gt;So you reimplement join algorithms by hand in application code? Are there supporting tools? Do you reimplement data warehousing aggregations, too? If so, what tooling for reporting does exist, and how does that compare to eg existing tooling for data warehousing?&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I got… lots of answers, but now have even more questions.&lt;/p&gt;
&lt;p&gt;I was pointed to read up on &amp;ldquo;&lt;a href=&#34;http://scs-architecture.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Self Contained Systems&lt;/a&gt;

&amp;rdquo; and on &amp;ldquo;&lt;a href=&#34;https://dataintensive.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Designing Data-Intensive Applications&lt;/a&gt;

&amp;rdquo;. I was pointed at &lt;a href=&#34;https://twitter.com/AdinChelloveck/status/1270747363133526019&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Presto&lt;/a&gt;

 and that is awesome and completely insane at the same time.&lt;/p&gt;
&lt;p&gt;A 10.000 meter summary was given by &lt;a href=&#34;https://twitter.com/nogoodnickleft/status/1270789660437098496&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Moritz Lenz&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Usually they go into application code. You have to design the services to minimize the joins. Also, microservices often keep read-only copies of other data to minimize joins.&lt;/p&gt;
&lt;p&gt;For reporting, you could have a big analytics DB that does the joins.&lt;/p&gt;
&lt;p&gt;In your example, the order service might copy some details from the product service to know what&amp;rsquo;s shipped, and the customer name + address. These copies are read-only, and stay with the order even if the shipping addresses changes in the main customer service.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is actually what a proper order application in a traditional database would do as well:&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;order&lt;/code&gt; table most likely would be an &lt;code&gt;orderlog&lt;/code&gt; table, and we would record not only the aid (keep the link to the source article) and cid, but would make copies of the price at the time of sale, the time of sale timestamp, and the address at the time of sale or the actual shipping address. Entries in the orderlog would stay there until fulfillment and maybe payment, and then can go from the OLTP system. We would also immediately emit a copy of the data that goes to our data warehouse as part of some kind of ETL setup.&lt;/p&gt;
&lt;p&gt;There are multiple good things about this, which is why we are doing it like this in relational systems as well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The OrderService can handle the order from all the data in the one single order event, because it contains all the relevant information for the most common purpose, fulfillment.&lt;/li&gt;
&lt;li&gt;This is most likely also all the information that we would put into the Event that feeds the data warehouse.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Doing things this way keeps the size of our OLTP system bounded (for the same number of customers, articles and active orders, over an infinite amount of time, the system does not grow). The data lifecycle in the OLTP system is complete and we do not accrete an infinite amount of data - Data Warehouses do grow infinitely unless you drop after x years, OLTP system must not grow infinitely and if they do, they do contain a small DWH that struggles to get out.&lt;/p&gt;
&lt;p&gt;Anyway:&lt;/p&gt;
&lt;p&gt;To map this onto a services design, we do ask the CustomerService and the ArticleService at the time of sale for the data necessary to make an order, and this is done by OrderService. These are two point lookups, and that is probably an okay thing to do manually at the application level. We also emit a pre-joined hierarchical structure equivalent to the orderlog entry (maybe some JSON?) onto an event bus (&lt;a href=&#34;https://twitter.com/rk3rn3r/status/1270813207922384896&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;maybe a Kafka?&lt;/a&gt;

) where it is consumed by other services.&lt;/p&gt;
&lt;p&gt;These event stream consumers work as materialization engines: They do have state, and modify it whenever they consume a relevant event. For example, we could have a continous query running in some engine that builds the aggregation I asked about from a stream:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Show me all top 10 articles by country, zipcode digit 1 by week over the last 52 weeks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This reads almost directly like an Influx query. So this is a thing that you can answer from a stream.&lt;/p&gt;
&lt;p&gt;If you have questions that arise at a later point in time, things become complicated without an image, though, because you are missing the start value. So the only option would be to start back in time at the big bang, and replay the event log for that new query, or to cut off at some other point in time and not have older data where possible.&lt;/p&gt;
&lt;p&gt;For aggregations over intervals like in the example query above that is entirely possible: We work over individual weeks, going back a year and we either have data for older weeks or not. If not, we can still accurately determine weekly aggregates for newer weeks, because they are independent of each other.&lt;/p&gt;
&lt;p&gt;For absolutes, totals and other sequentially dependent values you need some kind of calibration, if you can&amp;rsquo;t go back to the big bang - &amp;ldquo;how many 45&amp;rsquo;s did we ever sell&amp;rdquo; or &amp;ldquo;how much did 17 ever buy&amp;rdquo; can only be answered accurately if you have all the logs and the time to replay them from scratch. This quickly &lt;a href=&#34;https://twitter.com/AdinChelloveck/status/1270768529080496128&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gets out of hand&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;And &lt;a href=&#34;https://twitter.com/isotopp/status/1270765952116891648&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;there&lt;/a&gt;

 is the problem that I still see (or not quite understand wrt to CQRS):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So if a service does not reign over a set of data, but it&amp;rsquo;s supposedly the authoritative data source for a thing where multiple copies can exist - how do you validate?&lt;/p&gt;
&lt;p&gt;The authoritative source of the data is the event stream.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I will have to check out the linked talk. I think I get hung up because this is what databases do:&lt;/p&gt;
&lt;p&gt;A database is a giant global persistent variable with a network interface. Datadir is full of schemas is full of tables is full of rows has multiple fields. We can stop all traffic to the database and make an image. That&amp;rsquo;s a backup.&lt;/p&gt;
&lt;p&gt;We make changes to the database using grouped data modification language: transactions. Transactions are recorded in the binlog. We record and keep the binlog, and also the backups (and the binlog position we took the backups at).&lt;/p&gt;
&lt;p&gt;We can roll back to an earlier image, and then replay the binlog to move forward again in time at will, but this is bounded in time (and disk space) by the amount of binlog we keep. So if we store backups and binlogs for 7 days, we can go back 7 days and roll forward again.&lt;/p&gt;
&lt;p&gt;In a MySQL database with row based replication, the actual row events are even idempotent. We record &amp;ldquo;set x = 10&amp;rdquo;, not &amp;ldquo;x = x + 1&amp;rdquo;. We still can&amp;rsquo;t replay old binlogs over a newer image without constraints (this is a different discussion), but it does make things a lot more robust.&lt;/p&gt;
&lt;p&gt;In fact, with RBR the actual row events with full row images are even reversible: we do not only get &amp;ldquo;set x = 10&amp;rdquo;, we do get &amp;ldquo;set x from 9 to 10&amp;rdquo;, and if the log were pure we could play it backwards and walk back in time step by step (this fails in reality in the general case, but again this is a different discussion).&lt;/p&gt;
&lt;p&gt;So if you think of the database as a giant global variable that is modified in transactions, and as the binlog as a recording of these transactions in ideally reversible notation, then we can think of a services system as &amp;ldquo;that binlog on an event bus&amp;rdquo;, and as each of these services as a thing that builds materialized views (projections) of fragments of the total database and the total globalized state is gone, because it has become too big to maintain (We will see about that in a second).&lt;/p&gt;
&lt;p&gt;But: You cannot realistically keep the log an indefinite amount of time. And even if you did, you cannot replay it from the Big Bang, because your recovery time would be unbounded. So there must be backups (images) associated with positions in the event stream, that allow individual services to reset and replay themselves. Or you demand that all questions are always sequentially independent and over fixed time windows so they can be starting up in the middle of an ongoing stream. Maybe that is even a reasonable restriction, it is in any case a useful classification for types of queries on a stream.&lt;/p&gt;
&lt;p&gt;But there is also the problem of complicance/correctness/synchronisation: How do you show that for every event in your orderlog there is also an entry in the payment service that matches the order? Probably with some event reader that consumes both types of events, orders and payments. It would have to match one up with the other or alert if some order is being maintained as active for too long without finding a matching payment.&lt;/p&gt;
&lt;p&gt;At some point in the evening I got into a chat with a colleague:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;L&amp;gt; You asked:
&lt;a href=&#34;https://twitter.com/isotopp/status/1270746627339358208?s=21&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Where do the Joins go?&lt;/a&gt;


To the JoinDataService, obviously.
Aka &amp;ldquo;Data Lake&amp;rdquo;.
aka The Data Monolith that secretly underpins all the service shit.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He&amp;rsquo;s not wrong. The Hadoop in the end is the global state where all the events get joined together again and it produces a giant global image of the current and all past states. That is why the big data is big (and you can go back to the big bang, it just eats Megawatthours to do so.)&lt;/p&gt;
&lt;p&gt;At some point I was like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;K&amp;gt; I get the feeling that the answer is &amp;ldquo;we are looking at each event in a self-contained fashion. One event is one Transaction.&amp;rdquo;
So an order event is self-contained and does not need to refer to other orders or other facts.
It contains all data necessary to fulfull the order. It also means &amp;ldquo;Fuck you, reporting.&amp;rdquo;
And that is where your data lake comes in.&lt;/p&gt;
&lt;p&gt;L&amp;gt; I wasn’t kidding.&lt;/p&gt;
&lt;p&gt;K&amp;gt; &amp;ldquo;Why is it called data lake?&amp;rdquo; &amp;ldquo;Because this is where we drown our problems in hardware and petabytes&amp;rdquo;
Unfortunately, book keeping is stateful and cannot look at individual orders, it is all about aggregation.
I also get the feeling that is where the blockchain bros come in.
&amp;ldquo;by turning your event stream into a sequence of chained and signed blocks you get guarantees of losslessness&amp;rdquo;&lt;/p&gt;
&lt;p&gt;L&amp;gt; Blockchain == storage.&lt;/p&gt;
&lt;p&gt;K&amp;gt; Ok, that&amp;rsquo;s a Merkle tree then, it needs a wasteful PoW to become a real blockchain. And we have plenty of successful Merkle Trees, git, zfs and so on, just zero successful Blockchains, so it is useful to make this distinction.
…&lt;/p&gt;
&lt;p&gt;L&amp;gt; There will always be two things: state and changes to state.
Unless every change contains the entire previous state, or changes are distributed guaranteed, there is risk of diversion.&lt;/p&gt;
&lt;p&gt;K&amp;gt; So this is also a question I have about Blockch&amp;hellip; Merkle trees. You can spot holes. How do you heal them?&lt;/p&gt;
&lt;p&gt;L&amp;gt; Perhaps every change could contain hash of previous state, but that only helps detect diversion, not solve it.&lt;/p&gt;
&lt;p&gt;K&amp;gt; Yes, that is the merkle tree thing. Well, it is tree-dimensional and time-dimensional. you have the data structure itself, checksummed, and you have the stream of changes, also checksummed.&lt;/p&gt;
&lt;p&gt;L&amp;gt; Now. The obvious solution is detect then replay. But this poses two new problems. 1) what state do we trust enough to start from. 2) where do we replay changes from.&lt;/p&gt;
&lt;p&gt;K&amp;gt; In blockchains this is a voting problem. In git and the Linux kernel, this is literally Linus day job.
…
L&amp;gt; Right. Snapshot and replay from there. Like I said.&lt;/p&gt;
&lt;p&gt;K&amp;gt; Yes. I do believe it does not get more complicated than mysql binlogs and binlog positions, but with JSON as a REST service.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Architektur heißt umbauen</title>
      <link>https://blog.koehntopp.info/2012/03/06/architektur-hei-t-umbauen.html</link>
      <pubDate>Tue, 06 Mar 2012 13:42:47 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2012/03/06/architektur-hei-t-umbauen.html</guid>
      <description>&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/Architekturheisstumbauen.jpg&#34; alt=&#34;Theatre of Marcellus&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Theatre_of_Marcellus&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Teatro di Marcello&lt;/a&gt;

, Rom&lt;/p&gt;
&lt;p&gt;Das auf dem Bild da ist das Theater des Marcellus, in Rom.  Das Foto habe
ich Anfang 2006 aufgenommen, als ich dienstlich bei einem Kunden ganz in der
Nähe war.&lt;/p&gt;
&lt;p&gt;Das Marcellustheater ist nach Marcus Marcellus benannt, einem Neffen von
Kaiser Augustus, und wurde so um 13 vor Christus fertig gestellt.  Es ist
später verfallen, dann im Mittelalter als Festung genutzt worden, im 16.
Jahrhundert dann in eine Palastresidenz umgewandelt worden.  Heute besteht
der obere Teil aus einer Reihe von Appartments und unten werden im Sommer
diverse Konzerte aufgeführt.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/Architekturheisstumbauen2.jpg&#34; alt=&#34;Umgebaute Umbauten&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Bei der Ausbildung von Software-Ingenieuren, und wahrscheinlich auch bei der
Ausbildung von Architekten, machen wir jungen Leuten falsche Hoffnungen.
Bei den Software-Ingenieuren bin ich mir sogar ziemlich sicher.&lt;/p&gt;
&lt;p&gt;Wir erzählen diesen Leuten an der Uni, daß sie Technik zum Ausprobieren
bekommen werden oder Wahlfreiheit haben werden in den Mitteln und Methoden,
die sie einsetzen werden.  Und wir machen Ihnen Hoffnung, daß sie neuen Code
schreiben werden.  Später, wenn diese Personen von der Uni abgehen, landen
sie in einer Umgebung, die erstens eine Technik und die Best Practice zu
ihrem Einsatz genau definiert und die zweitens einen Haufen existierenden
Code hat, der läuft und Geld verdient, aber der zu verändern oder zu
erweitern ist.&lt;/p&gt;
&lt;p&gt;Das erzeugt bei diesen Menschen enorme Umstellungsprobleme, denn sie kommen
mit vollkommen falschen Erwartungshaltungen in den Beruf, ja, in vielen
Fällen fehlen ihnen sogar Methodiken, die für das Überleben im ersten Job
essentiell sind.&lt;/p&gt;
&lt;p&gt;Darum will ich es hier einmal ganz offen sagen:&lt;/p&gt;
&lt;p&gt;Junger Informatiker, hoffnungsvolle Uni-Abgängerin!&lt;/p&gt;
&lt;p&gt;Hier ist, was Dich in Deinem Beruf erwartet:&lt;/p&gt;
&lt;p&gt;Du wirst mit altem Code zu tun haben, der offensichtliche Schwächen hat.  Du
wirst mit Werkzeugen und Umgebungen arbeiten müssen, die Deiner Meinung nach
nicht Stand der Technik sind.  Eine Deiner Hauptaufgaben wird sein, den
alten Code zu refaktorieren.  Dabei wird die Zeit nicht reichen, diese
Aufgabe zu Ende zu führen.  Du wirst die Versuchung verspüren, den alten
Kram wegzuwerfen und auf der grünen Wiese neu anzufangen.&lt;/p&gt;
&lt;p&gt;Die schlechte Nachricht:&lt;/p&gt;
&lt;p&gt;Weder wirst Du jemals auf der grünen Wiese neu anfangen dürfen, noch würde
es viel helfen, das zu tun.  Der komplizierte Code-Wirrwarr, mit dem Du es
zu tun hast, ist häßlich und besteht aus einem Haufen ekeliger Sonderfälle.
Wenn Du auf der grünen Wiese neu anfängst, wirst Du ein Design haben, das
die Hauptfälle in einem schönen Modell abdeckt, und an den Sonderfällen
umfassend versagt.&lt;/p&gt;
&lt;p&gt;Du wirst sie schrittweise nachrüsten wollen, und Du endest mit einem
Drahtverhau von vergleichbarer Komplexität zu dem, den Du jetzt hast.  Das
ist normal.  Denn der Code, mit dem Du es zu tun hast, wurde wahrscheinlich
nicht von sabbernden Idioten geschrieben, sondern von Leuten wie Dir, und er
war am Anfang genau wie Dein Code: Klar und einfach.&lt;/p&gt;
&lt;p&gt;Dann traf er auf eine Realität, die alles ist, aber weder klar noch einfach.
Heute ist er ein halbwegs korrektes Modell der Realität.  Und weit mehr als
die Hälfte des unübersichtlichen Designs mit dem Du es zu tun hast, ist
wahrscheinlich nicht auf die Unfähigkeit Deiner Vorgänger zurück zu führen,
sondern auf die Tatsache, daß die Realität nun einmal leider eine Ansammlung
von häßlichen Ausnahmen ist, die alle mit modelliert sein wollen.&lt;/p&gt;
&lt;p&gt;Die gute Nachricht:&lt;/p&gt;
&lt;p&gt;Es ist gar nicht notwendig, schönen Code zu bauen.  Anders als Dein
Universitätsprofessor verlangt Dein Arbeitgeber nicht, daß Dein Code
minimal, elegant, beweisbar oder sonstwie ist.  Das einzige Kriterium ist,
ob er den Job getan bekommt.  Genau genommen ist das Kriterium sogar, ob er
den Job gut genug getan bekommt.  Sobald die Kosten in zusätzlicher
Hardware, Kundensupport oder manueller Nachbearbeitung geringer sind, als
die Arbeitszeit, die Dein Team benötigt, um die letzten Warzen abzuschaben,
wirst Du aufhören können.  Sogar müssen, denn Du bist nicht mehr rentabel
und Deine Arbeit dient keinem betrieblichen Ziel.&lt;/p&gt;
&lt;p&gt;Die schlechte Nachricht, die daraus folgt:&lt;/p&gt;
&lt;p&gt;Befriedigung in gutem Handwerk zu finden wird für Dich vermutlich schwierig,
denn gutes Handwerk ist illegal.  Befriedigung in Closure zu finden, darin,
Sachen wirklich ganz und gar zu Ende zu bringen, full circle zu kommen, wird
auch schwierig.  Denn das ist vermutlich auch illegal, und es wird keine
Zeit dafür sein, denn so eine Pickliste mit Aufgaben ist nach unten offen.
Du wirst stattdessen vermutlich Gutes im Vorbeigehen tun müssen, also hier
in diesem oder jenem Projekt einen Teil mit anfassen müssen, der eigentlich
nicht strikt hätte angefaßt werden müssen, es aber verdient hat und außerdem
waren ja noch Stunden übrig.&lt;/p&gt;
&lt;p&gt;Die frustrierende Nachricht:&lt;/p&gt;
&lt;p&gt;Bei vielem Code, den Du schreibst, wird Deinen Auftraggebern am Anfang noch
nicht klar sein, ob das, was der Code machen wird, am Ende das
Geschäftsmodell tatsächlich verbessern wird.  Du weißt aus dem Open Source
Umfeld schon, daß die goldene Regel lautet:
&lt;a href=&#34;https://en.wikipedia.org/wiki/Release_early,_release_often&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Release Early, Release Often!&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Du solltest Dir vor Augen führen, daß das nicht nur für Dich und Dein
Scrum-Team gilt, sondern auch für Deinen Product Owner: In den weitaus
meisten Fällen hat er keine Ahnung, ob seine Idee
&lt;a href=&#34;https://www.youtube.com/watch?v=xEs67tv401o#t=26&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gut für die Firma&lt;/a&gt;


ist oder sich am Ende schädlich auswirken wird.  Wenn das der Fall ist, ist
die einzig logische Aktivität, diesen Code wieder aus der Produktion zu
nehmen und zu verschrotten - Du hast dann für den Papierkorb entwickelt.&lt;/p&gt;
&lt;p&gt;Daher ist es wichtig, viele Ideen eines PO erst einmal sehr roh zu
implementieren und dann in der Realität zu testen, ob sie überhaupt auf der
Business-Ebene funktionieren.  Erst dann, wenn sicher gestellt ist, daß Code
business-positive ist, lohnt es überhaupt, die Sache noch einmal zu
reimplementieren oder refaktorieren auf eine Weise, die den Ansprüchen eines
ausgebildeten Informatikers würdig ist.  Weit mehr als 90% der Ideen Deines
PO sind blöder Scheiß und verdienen den Tod durch Patch Revert.  Es lohnt
also nicht, große architekturelle Zuckerbäckereien auszuarbeiten, solange
nicht bekannt ist, ob die Idee dahinter überhaupt in der Lage ist, den Lohn
für Dich und Dein Team zu verdienen.&lt;/p&gt;
&lt;p&gt;In dieser Phase - dem experimentellen Verifizieren der Requirements - ist
die einzige Metrik, wie viele Ideen und Varianten in möglichst kurzer Zeit
Dein Team released bekommt, egal wie schlecht, ineffizient oder kaputt Dein
Code ist.  Erst später, wenn Dein PO nicht nur glaubt zu wissen, was er
will, sondern belastbare Zahlen hat, die beweisen, daß das was er will auch
von der Firma gewollt werden kann, erst dann kannst Du Deine
Ingeniersausbildung auspacken und sauber arbeiten.&lt;/p&gt;
&lt;p&gt;So, jetzt ist es heraus.&lt;/p&gt;
&lt;p&gt;Eine der Aufgaben, die eine Firma lösen muß, wenn sie junge
Informatikerinnen und Uni-Abgänger einstellt, ist sie zu deprogrammieren.
Ihnen die Flausen aus dem Kopf zu pusten, die ihnen das Uni-Studium in den
Kopf gesetzt hat.  Sie mit den Realitäten der Welt vertraut zu machen.  Und
sie zu lehren, daß so wenig wie die wenigsten Städteplaner und
Landschaftsarchitekten mit einem leeren Plan anfangen können, die wenigsten
Softwarearchitekten und Entwickler mit einem leeren Editor starten.&lt;/p&gt;
&lt;p&gt;Hier sind die wichtigsten Fähigkeiten für einen Softwareentwickler:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Man kann ihn mit einer Bugnummer über unbekannten Code abwerfen, und auf
dem Weg nach unten erkennt er schon im Flug, was da kaputt ist.  Wenn er
gelandet ist, klärt er den Bug und während der Exfiltration macht er die
Gegend um seinen Weg nach draußen auch noch schön.&lt;/li&gt;
&lt;li&gt;Er kann existierenden Code zu umbauen, daß der Code nach der Operation
schöner, schneller und funktionaler ist als vorher und die neuen
Anforderungen erfüllt.  Dabei ist während jeder einzigen Sekunde der
Umbauphase (jeder Zwischencommit und jedes Zwischenrollout) in sich
lauffähig und korrekt, und die Datenformate sind kompatibel, sodaß keine
Betriebsunterbrechung für den Endnutzer sichtbar wird und man geschmeidig
zwischen den Versionen vor und zurück rollen kann.&lt;/li&gt;
&lt;li&gt;Er akzeptiert, daß Code ein Modell der Welt ist und daß sie Welt nicht
schön, elegant oder minimal ist, sondern dreckig, irregulär und
überkomplex.  Und er kommt damit klar.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Das Bild von dem Teatro di Marcello da oben illustriert das ganz gut.&lt;/p&gt;
&lt;p&gt;Gebaut vor mehr 2000 Jahren zu einem ganz anderen Zweck, ist es aufgelassen,
umgebaut, umgewidmet, modernisiert, renoviert und restauriert worden, und
wurde die meiste Zeit seiner Lebensdauer von Leuten genutzt.  Nichts an
diesem Gebäude ist so wie es sein soll, nichts an diesem Gebäude wird so
genutzt wie es einmal geplant war.  Nichts an der Stadt in der es steht ist
so.&lt;/p&gt;
&lt;p&gt;Dennoch ist dieser Ort voller Menschen, die dort leben und sich dort wohl
fühlen.&lt;/p&gt;
&lt;p&gt;Informatik ist genau so.&lt;/p&gt;
&lt;p&gt;(Weil towo danach gefragt hat)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Testing in Production</title>
      <link>https://blog.koehntopp.info/2011/12/02/testing-in-production.html</link>
      <pubDate>Fri, 02 Dec 2011 18:55:45 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2011/12/02/testing-in-production.html</guid>
      <description>&lt;p&gt;Mitte November ist auf The Testing Planet ein Artikel von Seth Eliot
(Microsoft) erschienen mit dem Titel
&lt;a href=&#34;http://www.thetestingplanet.com/2011/11/the-future-of-software-testing-part-one-testing-in-production/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Testing in Production&lt;/a&gt;

.
Eliot schreibt über Software Services, also Dienste, die auf einer Website
laufen, sodaß die User keine Anwendungen installieren müssen (Wir erinnern
uns: Microsoft ist noch immer ganz groß darin, Software auf physikalischen
read-only Medien an Benutzer zu verschicken, auch wenn diese Software seit
einer Dekade kaum mehr als ein Loader für Updates über das Internet ist und
nach der Installation vom Medium erst einmal alle eben installierten Dateien
durch das heruntergeladene Update durch neuere Versionen ersetzt werden).&lt;/p&gt;
&lt;p&gt;In Software Services hat der Anbieter jedenfalls die Kontrolle darüber,
welche Version der Software welchem Kunden präsentiert wird, und er hat in
der Regel Zugriff und Meßmöglichkeiten im Data Center, auf dem die Software
läuft, kann also auf der Serverseite diagnostizieren, was wann wie und warum
schief geht.&lt;/p&gt;
&lt;p&gt;Eliot behauptet nun, daß User seltsamer sind als Tester sich vorstellen
können und man daher besser so früh als möglich mit echten Benutzern testet
(Testing in Production = TIP).  Vorhergehende synthetische Tests (Up Front
Testing = UFT) können gemacht werden, sollten aber nur so weit gemacht
werden, daß man sicher in der Produktion testen kann.&lt;/p&gt;
&lt;p&gt;Eliot weiter:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For some TiP methodologies we can reduce risk by reducing the exposure of
the new code under test.  This technique is called “Exposure Control” and
limits risk by limiting the user base potentially impacted by the new
code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Was er damit meint, wird weiter unten klar, wenn er erläutert, welche Klassen von TIP er unterscheidet.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Ramped Deployment&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Der zu testende Code wird ausgerollt, ist aber zunächst nicht aktiv.  Er
wird für einen Subset der Benutzer aktiviert und überwacht.  Dabei
können unterschiedliche Aspekte des Codes untersucht werden - wie er
sich auf die Geschäftsprozesse auswirkt, ob er technisch funktioniert
oder wie er skaliert etwa.  Benutzer können automatisch oder
handselektiert sein, und wissen entweder, daß die mit experimentellem
Code arbeiten oder nicht.&lt;/p&gt;
&lt;p&gt;Entscheidend ist, daß das Deployment von neuem Code und seine
Aktivierung voneinander getrennt werden.  Dies erlaubt es, Features
graduell einzuführen und schnell zu deaktivieren, wenn sich Probleme
entwickeln.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Controlled Test Flight&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ein a/b-Experiment, in der alte und der neue Code parallel für
unterschiedliche Benutzer aktiviert wird und die Benutzer nicht wissen,
in welcher Kategorie sie sich befinden.  Eine Unterkategorie von Ramped
Deployment.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Experimentation for Design&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;eine weitere Verfeinerung von Controlled Test Flight ist, die neue und
die alte User Experience parallel für unterschiedliche, repräsentative
Benutzergruppen zu aktivieren, um den Einfluß der neuen UX auf das
Geschäftsmodell zu prüfen.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Dogfood/Beta&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wissen die Benutzer um die Tatsache, daß sie neuen Code testen, handelt
es sich nicht um Experimentation, sondern um eine Beta.  Sind die
Benutzer Mitarbeiter oder Freunde der Firma, handelt es sich um
Dogfooding.  Hier ist es oft zulässig, mit dem Wissen und Einverständnis
der Benutzer zusätzliche Telemetrie zu installieren und auszuwerten.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Synthetic Test in Production&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;das Anwenden von automatisierten UFT-Systemen auf Produktionssysteme.
Sie können verwenden werden, um das Produktionssystem oder sein
Monitoring zu validieren.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Load/Capacity Test in Production&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Last und Kapazitätstest in der Produktion, bei Eliot unter Verwendung
synthetischer Last gegen Produktionssysteme, meistens zusätzlich zur
existierenden Last durch reale Benutzer, um die Kapazität des Systems zu
bestimmen.
&lt;br/&gt;&lt;br/&gt;
Die mir bekannten Anwender solcher Verfahren spielen stattdessen eher
mit den Gewichten an ihren Load Balancern, um die externe Last durch
reale User auf weniger und weniger Backends zu konzentrieren.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Synthetische Last wird dabei lediglich als Meßsonde verwendet, um die Latenz
von Requests zu überwachen - kommt zur typischen Think Time des Benchmarks
eine Wait Time hinzu, ist die den getesteten Frontends angebotene Load
größer als ihre Kapazität und es baut sich eine Queue auf.  Lastsättigung
ist erreicht und die Kapazität des Gesamtsystems kann durch einfache
Dreisätze bestimmt werden.  Bricht man den Test hier ab, ist die UX für die
realen User nicht destruktiv beeinflußt: Das System mag einigen Benutzern
für kurze Zeit langsam erscheinen, ist aber zu allen Zeiten normal
Funktionsfähig.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Bricht man den Test nicht ab, sondern erhöht die Last vorsichtig weiter,
kann man den Failure Mode des Systems verifizieren: Art und Lage der
begrenzenden Ressource im Gesamtsystem wird offensichtlich, Qualität des
Monitorings und Prozesse im Operating werden mitgeprüft.  Diese Phase des
Tests erfordert schnelle Reaktion, um den Einfluß auf die UX der realen
Benutzer zu minimieren.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Outside-in load /performance testing&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ein Lasttest mit synthetischer Load, die von einer externen Quelle in
die Produktionsumgebung injeziert wird, also denselben Weg nach drinnen
nimmt wie die realen Benutzer.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;User Scenario Execution&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ausführung von Endbenutzer-Szenarien gegen ein Produktionssystem von den
Endpunkten echter Benutzer.  Kann manuelles Testen beinhalten.  Diese
Tests können regional unterschiedliche UX sichtbar machen (&amp;ldquo;Das System
ist schnell genug in Europa, von Asien aus aber kaum benutzbar.&amp;rdquo;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Data Mining&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Die Logdaten echter Benutzer werden nach Problemen oder Testfällen
durchsucht, die spezifische Szenarien darstellen.  Die Fälle, die
auftreten, werden automatisch als Bugtickets eingetragen.  Das kann in
Echtzeit passieren.  &lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Echtzeitmonitoring kann auf viele verschiedene Weisen nützlich sein.
Insbesondere in den o.a.  Lasttests ist ein Echtzeit-Errormonitor
notwendig, um die Saturierung von der Überlast des Systems trennen zu
können, und um Lage und Failure Mode der überlasteten Komponente im
Produktionsweg schnell erkennen zu können.  Ohne ein solches
Echtzeitmonitoring ist diese Art von Test nicht sicher durchführbar.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Destructive Testing&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Injektion von Fehlern in Produktionssysteme, um Servicekontinuität im
Fehlerfall zu validieren (
&lt;a href=&#34;http://www.codinghorror.com/blog/2011/04/working-with-the-chaos-monkey.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chaos Monkey&lt;/a&gt;


).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Production Validation&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Echtzeitmonitore, die die verschiedenen Phasen der Produktion auf
Businessebene, Contentebene, Technischer Ebene, Netzwerkebene und so
weiter überwachen und visualisieren.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Eliot bringt dann verschiedene Beispiel für TIP: Googles und Bings
a/b-Experimente und 1% Launches werden genannt, sie sind Beispiele für
Experimentation for Design.  Controlled Test Flights werden dort ebenfalls
verwendet, dabei werden kritische Änderungen ausgerollt und parallel zu
getestetem Code betrieben - oft werden dabei Daten zweimal geschrieben: Der
alte Code führt das alte System weiter, der neue Code arbeitet im neuen
System mit anderen Dateien oder Datenbanktabellen.&lt;/p&gt;
&lt;p&gt;Chaosmonkey war der Vorläufer eines Systems für Destructive Testing, das
jetzt die
&lt;a href=&#34;http://techblog.netflix.com/2011/07/netflix-simian-army.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Simian Army&lt;/a&gt;


darstellt: Neben Chaos Monkey, der Komponenten zufällig aus dem System
entfernt gibt es nun Latency Monkey, der Dienste zufällig verzögert,
Conformity Monkey, der Systeme aus dem Dienst kippt, die nicht auf dem
erwarteten Stand sind und viele andere Dienstprüfer und Killer mehr.&lt;/p&gt;
&lt;p&gt;Eliot weist darauf hin, daß Tests in der Produktion gefährlich sein können
und sie deswegen so aufgebaut werden müssen, daß sie keine Produktionsdaten
verändern können und nur mit funktionierendem und schnellem Monitoring
durchgeführt werden können.&lt;/p&gt;
&lt;p&gt;Korrekt ausgeführt eröffnen sie aber eine Menge Lernmöglichkeiten, die
traditionellem Testen nicht zur Verfügung stehen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ein paar Gedanken zum Thema NoSQL</title>
      <link>https://blog.koehntopp.info/2010/11/05/ein-paar-gedanken-zum-thema-nosql.html</link>
      <pubDate>Fri, 05 Nov 2010 06:41:00 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2010/11/05/ein-paar-gedanken-zum-thema-nosql.html</guid>
      <description>&lt;p&gt;Beim Durchstöbern der verschiedenen NoSQL-Datenspeicher stellt sich mir die
Frage, wieso man das alles überhaupt will. Genauer: Was genau ist das
Problem, das man mit NoSQL lösen möchte?&lt;/p&gt;
&lt;p&gt;Diejenigen Leute, die NoSQL-Lösungen einsetzen, haben in der Regel die
Schwierigkeit, daß ihre Datenmenge größer wird, als man auf einer einzelnen
Maschine mit der geforderten Servicequalität handhaben kann.&lt;/p&gt;
&lt;p&gt;Im Webbereich sind die Anforderungen für interaktives Browsen oft so, daß
man die gewünschten Antwortzeiten nur dann erreichen kann, wenn die dabei
verwendeten Datenbanken ihre Daten und Indices zum allergrößten Teil im RAM
halten können. Verfügbarkeit und Preis von Speicher sind aber Grenzen
gesetzt - mit aktuellen Nehalem-Kisten zum Beispiel liegt der Sweet-Spot
irgendwo bei 48G oder 96G Hauptspeicher, die Datenbankgröße für solche
zeitkritischen Systeme also nach meinen Erfahrungen zwischen 100G und 200G.&lt;/p&gt;
&lt;p&gt;Erst wenn Benutzer nicht mehr interaktiv browsend mit der Anwendung
interagieren kann man sich längere Antwortzeiten erlauben. Wird ein Schritt
zum Beispiel als &amp;ldquo;Buchung&amp;rdquo; angesehen, ist der Benutzer bereit, bis zu 10x
längere Reaktionszeiten hinzunehmen (2 Sekunden statt 0.2 Sekunden, ohne
Fortschrittsbalken, und bis zu 20 Sekunden mit einem Fortschrittsbalken).&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/partition.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Partition visualisiert&lt;/p&gt;
&lt;p&gt;Gesucht ist also Technologie, die es mir erlaubt, ein Datenbankschema über
mehr als eine Maschine zu verteilen. Je weniger ich dabei in meiner
Anwendung davon sehe oder merke, um so schöner.&lt;/p&gt;
&lt;p&gt;Um ein großes Schema zu verteilen muß ich meine Daten partitionieren. Das
heißt, ich muß eine Menge (an Daten) in Teilmengen zerlegen, sodaß die
Teilmengen sich nicht überlappen und ihre Vereinigung wieder die Gesamtmenge
ergibt. Liegen die Teilmengen alle zusammen auf einer Maschine reden wir in
der Regel von einer Partition. Liegen sie auf verschiedenen Maschinen reden
wir in der Regel von Sharding (von Shard, Splitter).&lt;/p&gt;
&lt;p&gt;Die manuelle Vorgehensweise zum Sharding ist, ein Schema funktional zu
zerteilen. Dabei wird man alle Tabellen, die mit Funktionalität a zu tun
haben auf einen Server verlegem und alle Tabellen, die mit Funktionalität b
befaßt sind auf einen anderen Server. Das geht aber immer noch davon aus,
daß eine Tabelle zur Gänze auf einer einzelnen Maschine gehalten werden kann
und es setzt auch voraus, daß man sich Gedanken darüber macht, was man wie
warum wo hin schiebt. Der manuelle Ansatz hat den Vorteil, daß man mit
konventionellem Denken noch weiter kommt und auch konventionelle Abfragen
innerhalb einer Maschine noch wie erwartet funktionieren.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/sharding.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Automatisches Sharding&lt;/p&gt;
&lt;p&gt;Ansätze zum automatischen Sharding nehmen auf solche Dinge weniger
Rücksicht: Ich kann für jede Zeile jeder Tabelle auf irgendeine Weise eine
Maschinenadresse berechnen und den entsprechenden Datensatz dann auf diese
Maschine verschieben. Der automatische Ansatz hat den Vorteil, daß es keine
absoluten Skalierungslimits mehr gibt, sondern daß man die Datenmenge und
die Systemleistung &amp;ldquo;einfach&amp;rdquo; dadurch skalieren kann, daß man mehr Maschinen
zum Cluster hinzu fügt.&lt;/p&gt;
&lt;p&gt;Der automatische Ansatz hat auch einen Preis:&lt;/p&gt;
&lt;p&gt;Von den anderswo erklärten
&lt;a href=&#34;https://blog.koehntopp.info/2010/04/28/was-bedeutet-eigentlich-relationale-algebra.html&#34;&gt;Operationen der  Relationenalgebra&lt;/a&gt;


sind einige nun recht teuer geworden - der SQL-Join und die SQL-Aggregation.&lt;/p&gt;
&lt;p&gt;Für den Join stellt sich das Problem, daß man zwischen Tabellen eine
Verknüpfung erzeugen will, die zur Gänze oder in Teilen auf
unterschiedlichen Maschinen in einem Cluster liegen können. Je nachdem
welcher
&lt;a href=&#34;http://en.wikipedia.org/wiki/Category:Join_algorithms&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Join-Algorithmus&lt;/a&gt;


verwendet wird, kann dabei sehr viel Netzwerk-Kommunikation notwendig
werden.&lt;/p&gt;
&lt;p&gt;Das gilt um so mehr, wenn wir uns in Erinnerung rufen, daß wir dieses ganze
Sharding-Geschäft angefangen haben damit wir alle Daten im Speicher halten
können - Netzwerk-Latenzen werden also leicht die dominierenden Kosten bei
der Berechnung eines Joins
(&lt;a href=&#34;http://www.fromdual.ch/wie-der-mysql-optimizer-schummelt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;typisches Beispiel&lt;/a&gt;

 für die
Probleme bei einem Join über das Netz in MySQL Cluster).&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/condition_pushdown.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Condition Pushdown&lt;/p&gt;
&lt;p&gt;MySQL Cluster und VoltDB sind beides Produkte, die immerhin versuchen,
einen Join über das Netz durchzuführen, und der Ansatz ist vergleichbar:
Anstatt die Daten zu dem Knoten zu transferieren, der den Join ausführt,
werden Teile der Query extrahiert und zu den Daten transportiert. MySQL
Cluster versucht das dynamisch und automatisch zu machen und nennt das
Condition Pushdown
(&lt;a href=&#34;http://johanandersson.blogspot.com/2010/10/pushed-down-joins-webinar.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Webinar zu MySQL Cluster Condition Pushdown&lt;/a&gt;

,
&lt;a href=&#34;http://blogs.oracle.com/mysql/2010/10/in_pursuit_of_the_holy_grail_-_mysql_cluster_and_push_down_joins.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;In Pursuit Of The Holy Grail&lt;/a&gt;

,
über Condition Pushdown in Cluster). VoltDB verlangt stattdessen, daß das
statisch und vorab gemacht wird: Die Entwickler müssen alle Abfragen als
Stored Procedures in Java schreiben und zur Laufzeit werden dann nur noch
Stored Procedures abgerufen.&lt;/p&gt;
&lt;p&gt;Im recht uneinheitlichen Bereich der NoSQL-Nondatenbanken hat man im
wesentlichen zwei Ansätze um mit dem Problem umzugehen. Für die untere
Schicht der NoSQL-Datenbanken (&amp;ldquo;Key Value Stores&amp;rdquo;) besteht die Lösung
schlicht darin, das Problem zu ignorieren, äh, dem Anwendungsprogrammierer
zur freien Modellierung zu überlassen. In der Praxis kommen dann zwei
Ansätze vor, die der Anwendungsprogrammierer verwendet um eine Lösung zu
modellieren.&lt;/p&gt;
&lt;p&gt;Der eine Ansatz programmiert das Äquivalent eines Full Table Scans in der
Anwendung nach, d.h. um die gesuchten Daten zu finden wird die gesamte
Datenbank in die Anwendung runtergeladen und der nicht gewünschte Teil der
Daten verworfen. Diese Lösung wird vor allen Dingen von den Anbietern von
Netzwerkequipment favorisiert.&lt;/p&gt;
&lt;p&gt;Der andere Ansatz nimmt den Join vorweg, d.h. er speichert als Teil des
Value jedes Key-Value Paares ein Array von Zeigern auf die verknüpften
Knoten. Lädt man den Ausgangsknoten runter, bekommt man mit dem Zeigerarray
auch eine Liste von Referenzen, denen man folgen kann, um die verknüpften
Daten zu finden.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/Network_Model.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Network Model (&lt;a href=&#34;http://en.wikipedia.org/wiki/File:Network_Model.jpg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quelle&lt;/a&gt;

)&lt;/p&gt;
&lt;p&gt;Automatisiert man das und das Handhaben der Backreferences, hat man eine
Zeitreise in das Jahr 1969 durchgeführt und
&lt;a href=&#34;http://en.wikipedia.org/wiki/Network_database&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IMS&lt;/a&gt;

 neu erfunden
(ersatzweise auch eine XML-Datenbank oder LDAP erfunden). Immerhin ist es
jetzt verteilt.&lt;/p&gt;
&lt;p&gt;In den NoSQL-Datenbanken, die ein wenig mehr Struktur in den Daten
unterbringen findet man nun entweder solche Mechanismen, die Referenzen auf
Daten und ihre Backreferences automatisieren, d.h die sogenannten
Dokumentendatenbanken sind in Wahrheit Netzwerkdatenbanken.&lt;/p&gt;
&lt;p&gt;Oder man arbeitet mit Dokumenten und Subdokumenten, speichert also statt
Zeigern auf Objekte erster Ordnung (Dokumente) jetzt einfach die Objekte
selbst literal in den ihnen übergeordneten Objekten (man speichert
Subdokumente in Dokumenten). Das ist noch schlechter, weil man damit
zugleich hybride, nicht-opake und nicht stabile Identifier bekommt, wenn man
mit Subdokumenten arbeitet: Statt das Dokument 17 (Subdokument von 3) direkt
über seine ID referenzieren zu können (egal wie es in 3 verschachtelt ist
oder ob es in 3 und in 5 gleichermaßen referenziert wird), redet man jetzt
von 3.owner.name[2], also dem zweiten Element des Arrays Name unterhalb des
Slots owner des Dokumentes 3.&lt;/p&gt;
&lt;p&gt;Das ist eine Pfadabgabe (etwa eine XPath-Expression) relativ zur Wurzel des
Dokumentes mit der ID 3, und nicht stabil: Werden Elemente vorne in das
Array name eingefügt, oder wird der Typ des Slot owner verändert (der Skalar
owner wird zu einem Array owner[], sodaß es jetzt 3.owner[1].name[2] heißen
muß) oder der Nestinglevel von owner geändert, ist die Referenz ungültig.
Und das Subdokument kann nicht von zwei Dokumenten 3 und 5 zugleich
referenziert werden, da es literal Bestandteil von entweder 3 oder 5 ist.&lt;/p&gt;
&lt;p&gt;Kurzum: Man kann nicht sinnvoll normalisieren, weil man nicht sinnvoll
addressieren kann.&lt;/p&gt;
&lt;p&gt;Das ist Teil eines größeren Problems:
&lt;a href=&#34;http://highscalability.com/blog/2010/10/28/nosql-took-away-the-relational-model-and-gave-nothing-back.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NoSQL Took Away The Relational Model And Gave Nothing Back&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The meaning of the statement was that NoSQL systems (really the various
map-reduce systems) are lacking a standard model for describing and
querying and that developing one should be a high priority task for them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unterdessen (nein: deswegen!) nähern sich SQL- und NoSQL auf eine Weise auch
wieder einander an. Weil SQL eine sinnvolle Sache ist, gibt es
&lt;a href=&#34;http://jaksprats.wordpress.com/2010/09/28/introducing-redisql-the-lightning-fast-polyglot/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Redisql&lt;/a&gt;

,
einen SQL-Interpreter, der quasi den KV-Store Redis als Storage Engine
verwendet.&lt;/p&gt;
&lt;p&gt;Und es gibt
&lt;a href=&#34;http://yoshinorimatsunobu.blogspot.com/2010/10/using-mysql-as-nosql-story-for.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HandlerSocket&lt;/a&gt;

,
ein Plugin für MySQL, das das MySQL Sonderkommando
&lt;a href=&#34;http://dev.mysql.com/doc/refman/5.1/en/handler.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HANDLER&lt;/a&gt;

 mit einem
binären Netzwerkinterface ohne Authentisierung ausstattet und so Key-Value
Zugriffe und Index-Traversal sehr effizient verfügbar macht, solange die
Daten im RAM liegen (oder
&lt;a href=&#34;http://www.mysqlperformanceblog.com/2010/11/02/handlersocket-on-ssd/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;auf einer SSD&lt;/a&gt;

).&lt;/p&gt;
&lt;p&gt;Neben diesem echten harten Problem von JOIN und GROUP BY über das Netz gibt
es eine Reihe von weiteren Schwächen in MySQL und einigen anderen
SQL-Implementierungen, die von einigen NoSQL-Implementierungen angesprochen
werden und die meiner Meinung zu falschen oder gefährlichen Ansätzen führen.&lt;/p&gt;
&lt;p&gt;Das bekannteste Beispiel ist das
&lt;a href=&#34;http://dev.mysql.com/doc/refman/5.1/en/alter-table.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ALTER TABLE&lt;/a&gt;


Statement in MySQL, das auch in MySQL 5.1 in vielen Fällen noch sehr lange
dauert und alle Operationen auf der Tabelle blockiert, während es abläuft.
Das Thema ist drängend und die Komplexität der Workarounds
&lt;a href=&#34;http://www.facebook.com/note.php?note_id=430801045932&amp;amp;comments&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;grenzt an das Lächerliche&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;ALTER TABLE wird entweder verwendet, um die Indices einer Tabelle zu
verändern oder um die Struktur einer Tabelle zu verändern. Die korrekte
Lösung des Problems ist einerseits
&lt;a href=&#34;http://dev.mysql.com/doc/innodb-plugin/1.0/en/innodb-create-index-overview.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Background Index Creation&lt;/a&gt;


(aber &lt;a href=&#34;http://dev.mysql.com/doc/innodb-plugin/1.0/en/innodb-create-index-limitations.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;es gibt viele Einschränkungen&lt;/a&gt;

),
wenn es um Indices geht.&lt;/p&gt;
&lt;p&gt;Oder es ist eine versionierte Tabellendefinition, wenn es um die
Tabellenstruktur geht - statt das ALTER TABLE auszuführen, wird eine neue
Version der Tabellendefinition angelegt. An jeder Row wird die
Versionsnummer der Tabellendefinition gespeichert, der die Row entspricht.
Beim Zugriff auf die Row werden die Daten gelesen und entsprechend der ALTER
TABLE-Anweisungen, die fehlen, auf den neusten Stand gebracht (ebenso alle
anderen Rows in derselben Page). Die Speicherseite ist nun &amp;lsquo;dirty&amp;rsquo; und wird
mit dem nächsten Checkpoint auf der Platte aktualisiert. Das ermöglicht
zugleich
&lt;a href=&#34;http://wiki.postgresql.org/wiki/Transactional_DDL_in_PostgreSQL:_A_Competitive_Analysis&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Transactional DDL&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Was die meisten NoSQL-Nondatenbanken stattdessen machen ist schemalessness
zu propagieren. Dabei werden oftmals
&lt;a href=&#34;http://nosql.mypopescu.com/post/949327075/why-your-startup-should-use-a-schema-less-database&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;eigenartige Schlußfolgerungen&lt;/a&gt;


gezogen:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Avoiding schema changes and data migration are good reasons.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Die Folgerung &amp;ldquo;Aus Schemalessness folgt, daß man Schema Changes und
Datenmigration vermeiden kann&amp;rdquo; ist offensichtlicher Unsinn, wie jeder
erkennen kann, der einmal reale Anwendungen entwickelt hat - die Migration
wird nun jedoch wieder einmal dem Anwendungsprogrammierer zur Modellierung
in der Anwendung überlassen.&lt;/p&gt;
&lt;p&gt;Das heißt, man implementiert nun das &amp;lsquo;Transactional DDL&amp;rsquo;-Modell von oben in
der Anwendung nach: Jeder Datensatz bekommt eine Versionsnummer und der ORM
prüft beim Lesen jedes Satzes, ob die Versionsnummer auf Stand ist, und wenn
nicht, wendet er die notwendigen Transformationen auf das gelesene Objekt
an. Beim Zurückschreiben der Daten wird das aktuelle Datenmodell mit der
höchsten Versionsnummer geschrieben.&lt;/p&gt;
&lt;p&gt;Oder man tut das nicht, und verläßt sich auf obskure Defaults der verwendeten Plattform
(&lt;a href=&#34;http://blog.mongodb.org/post/119945109/why-schemaless&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB Blog Beispiel&lt;/a&gt;

 und die
Diskussion unten dran kommt zu demselben Schluß wie ich hier).&lt;/p&gt;
&lt;p&gt;Was also sucht man, wenn man sich mit NoSQL beschäftigt?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Workarounds für existierende Limits in der Implementierung von MySQL - das
führt in der Regel zu wenig sinnvollen Ergebnissen.&lt;/li&gt;
&lt;li&gt;Techniken, mit denen man Wachstum über die Grenzen einer einzelnen
Maschine hinaus besser in den Griff bekommen kann:
&lt;ul&gt;
&lt;li&gt;Sharding und Replikation weiter denken.&lt;/li&gt;
&lt;li&gt;Das Problem des Joins und der Aggregation in diesen Szenarien angehen.&lt;/li&gt;
&lt;li&gt;Lösungen dafür existieren, ob man sie nun Condition Pushdown oder
Map-Reduce nennt - beides ist sehr ähnlich.&lt;/li&gt;
&lt;li&gt;Ich erwarte, daß Autosharding und verteilte Ausführung von SQL, hinter
den Kulissen mit Map-Reduce/Condition Pushdown, in absehbarer Zeit
Bestandteil von Open Source SQL-Produkten werden.&lt;/li&gt;
&lt;li&gt;Ich erwarte, daß auch damit die Effekte, die sich aus der Verteilung des
Systems ergeben nicht vollständig in allen Fällen vor dem Endanwender
verborgen werden können.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Red vs Blue at Oracle, und ein paar Gedanken zu Postgres</title>
      <link>https://blog.koehntopp.info/2010/11/04/red-vs-blue-at-oracle-und-ein-paar-gedanken-zu-postgres.html</link>
      <pubDate>Thu, 04 Nov 2010 18:00:57 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2010/11/04/red-vs-blue-at-oracle-und-ein-paar-gedanken-zu-postgres.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.heise.de/ix/news/foren/S-Re-Kann-MySQL-eigentlich-irgendetwas/forum-188566/msg-19386125/read/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ich schrieb&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;heretic666 schrieb am 4. November 2010 12:11&lt;/p&gt;
&lt;p&gt;&amp;hellip;das man nicht auch wahlweise mit PostgreSQL oder MS SQL erschlagen
kann?&lt;/p&gt;
&lt;p&gt;Mir fällt da im Moment kein Punkt ein&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Postgres ist ein Repräsentant der klassischen Datenbanken und fällt in
dieselbe Kategorie wie Oracle, MS SQL oder DB/2.  MySQL ist eine Datenbank,
die sich in vielen Punkten an den Erfordernissen des Webs orientiert und
ganz andere Schwerpunkte als Postgres oder Oracle setzt.  Das ist auch eine
der Erfahrungen, die der rote Sales (Oracle Sales) gerade mit blauen Kunden
(MySQL Kunden) macht: Die meisten lassen sich nicht einfach auf rot
konvertieren, weil das rote Produkt schlicht nicht die Leistungen bietet,
die blauen Kunden wichtig sind.&lt;/p&gt;
&lt;p&gt;Um Deine Frage konkreter zu beantworten:&lt;/p&gt;
&lt;p&gt;MySQL ist eine Einprozeß-Architektur mit mehreren Threads und einem
Threadpool.  Ein Connect an die Datenbank ist vergleichbar teuer einem
Connect an einen OpenLDAP-Server und MySQL kommt so gut mit transienten
Verbindungen etwa eines mod_perl oder mod_php zurecht, daß man in MySQL in
der Regel nicht mit Connection Pools arbeitet und 2-Tier Architekturen
(Apache mit mod_irgendwas an MySQL) gut funktionieren.&lt;/p&gt;
&lt;p&gt;Datenbanken, die on-connect einen Handlerprozeß forken haben sehr viel
höhere Kosten in Speicher (MySQL 200 KB pro Connect vs.  zum Beispiel 5 MB
für Oracle) und Zeit.  Mit solchen Datenbanken redet man in der Regel über
einen Application-Server der persistente Verbindungen aus einem Connection
Pool managed, und auf der anderen Seite von einem Webserver angestupst wird
(3-Tier).&lt;/p&gt;
&lt;p&gt;MySQL-Anwender skalieren Read-Leistung in der Regel horizontal.  Das heißt,
sie kaufen keine größeren Server, sondern mehr Server, um zu wachsen.  In
unserem Fall haben wir in einer Produktionshierarchie zum Beispiel 87 MySQL
Slave-Server an einem Master hängen.  MySQL Replikation ist per Default
asynchron und muß in der Anwendung durch ein passendes master_pos_wait()
synchronisiert werden - jedes asynchrone System kann durch Einfügen von
Waits synchron gemacht werden.&lt;/p&gt;
&lt;p&gt;Das heißt, daß die Anwendung die Wahl hat, ob sie fortfahren oder warten
will - und die meisten Leute wollen in der Anwendung lieber annähernd
richtige Daten sofort liefern (und dann ggf später per AJAX aktualisieren)
als auf absolut korrekte Daten zu warten, solange etwa im Web gebrowsed
wird.  Wenn es zum Schwur - also zum Kauf - kommt, dann will man warten, und
dann nimmt man Waypoints in Kauf - vorher aber nicht.&lt;/p&gt;
&lt;p&gt;Postgres zum Beispiel hat erst jetzt mit 9.0 eine Replikation und diese ist
auch nicht asynchron.  Das heißt, wenn man eine Anwendung hatte, die größer
war als eine einzelne Kiste leisten konnte, dann mußte man an irgendeinem
Punkt zu MySQL greifen - mein derzeitiger Arbeitgeber ist so vor etwa 10
Jahren aus genau diesem Grunde von Postgres zu MySQL migriert.  Das war sehr
mühsam und teuer, aber damals ein zwingender Grund (und ist es heute trotz
9.0 wahrscheinlich auch noch).&lt;/p&gt;
&lt;p&gt;MySQL, speziell InnoDB, ist eine ausgezeichnete Engine mit MVCC (also
lockless reads) und mit sehr sinnvollen Strategien beim Layout von Daten auf
der Platte (Clustering der Daten nach Primary Key + auto_increment = instant
win für alle Leute mit normalen Zugriffspatterns).  Dadurch, daß MySQL
außerdem Covering Indexes kann (Postgres auch in 9.0 leider noch nicht) sind
bestimmte Optimierungen sehr leicht möglich und sehr effizient.  Domas
(früher MySQL, jetzt Facebook, außerdem Wikipedia-DBA) beschreibt dies in
&lt;a href=&#34;http://mituzas.lt/2007/01/26/mysql-covering-index-performance/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;einem Artikel&lt;/a&gt;


recht ausführlich.&lt;/p&gt;
&lt;p&gt;Ein anderes Feature, das bei der Skalierung von großen Datenbanken (größer
als der Hauptspeicher) sehr extrem rockt sind PARTITION BY clauses in
Tabellendefinitionen.  Man kann sich in Postgres vergleichbares manuell
zusammentriggern (wie man sich auch Replikation zusammentriggern kann, wenn
man keine Schmerzen spürt), aber nativ ist das Feature plötzlich auch für
den normalbegabten DBA und vor allen Dingen auch für einen Entwickler
zugänglich - und es ist sehr schnell.  Wir migrieren gerade eine unserer
letzten MyISAM-Datenbanken von Merge-Tables auf InnoDB Plugin + Compressed
Tables + Partititions und die Effekte sind sehr erstaunlich.&lt;/p&gt;
&lt;p&gt;Ein weiteres Feature, bei dem ich nicht beurteilen kann, wie gut oder
schlecht Postgres da steht, sind die Connectors in MySQL.&lt;/p&gt;
&lt;p&gt;Connector/ODBC von MySQL ist - sagt man mir - sehr gut, ich habe in meiner
beruflichen Praxis damit eine Reihe von Migrationen von Access- und MS
SQL-Datenbanken auf ein MySQL Backend durchgeführt, und das war weitgehend
problemlos (ODBC hat ein paar Konzepte, bei denen man wissen muß, wie sie
auf MySQL abgebildet werden - wenn man das weiß, geht die ganze Umstellung
vollkommen schmerzfrei).&lt;/p&gt;
&lt;p&gt;Connector/J ist angeblich auch sehr gut - ich versuche Java zu vermeiden und
habe daher nicht viel unmittelbare Erfahrung, kann aber sagen, daß man
zumindest vielen Schmerz der Java-Leute durch Konfiguration obskurer
JDBC-Parameter wegheilen kann ohne daß man ins Java rein muß.  :-)&lt;/p&gt;
&lt;p&gt;Für PHP gibt es eine unabhängige Implementierung des Protokolls als mysqlnd.
Das ist einmal lizenztechnisch interessant (PHP License statt GPL) und
einmal speichertechnisch spannend.  Connector/C alias libmysqlclient.so lädt
ja Ergebnisse aus dem Server in libmysqlclient.so runter und stellt sie als
MySQL-interne Datentypen dar.  Diese werden dann durch mysql_fetch_assoc()
und Freunde in PHP Zeile für Zeile in PHP ZVAL umgewandelt - am Ende hat man
die Daten also zweimal: Einmal als PHP Hash in ZVAL-Format und einmal als
MySQL-interne Typen in der Bibliothek - bis dann endlich mysql_free_result()
gemacht wird, und die interne Kopie gelöscht wird.&lt;/p&gt;
&lt;p&gt;mysqlnd verwendet jetzt gleich intern in der MySQL-Bibliothek PHP-interne
ZVAL-Strukturen für die Ergebnisse, sodaß keine Daten mehr aus
libmysqlclient.so in PHP umkopiert werden müssen, sondern die Daten quasi
gleich als PHP-Hash in den Client runter geladen werden.&lt;/p&gt;
&lt;p&gt;Ah, und schließlich sind die Zeichensatz-Fähigkeiten von MySQL recht
bemerkenswert.  MySQL kann Zeichensätze und  Sortierungen per Spalte
getrennt festlegen und wandelt dann zwischen Serverzeichensatz und
Clientzeichensatz um.  Das tut es sehr schnell, so schnell, daß es bei uns
in einigen Anwendungen schneller ist, die Zeichensatzumwandlungen durch den
Server machen zu lassen, als lokal im Client mit Perl (Nein, wir machen das
nicht, es ist nur so, daß unsere Benchmarks meinten, das sei schneller :-)
).&lt;/p&gt;
&lt;p&gt;MySQL ist auch extrem flexibel: Mit einem ALTER TABLE kann man Spalten
bequem von einer Darstellung in eine andere umwandeln,  wenn sich die
Anforderungen ändern, sodaß man sich dort nicht früh auf irgendwas festlegen
muß.&lt;/p&gt;
&lt;p&gt;Soweit ich weiß ist das sehr viel flexibler als die Mechanismen, die
Postgres hier bietet.&lt;/p&gt;
&lt;p&gt;In MySQL nutzt man oft eine Reihe von Dingen nicht, die man von einem
klassischen Datenbankprodukt erwarten würde, wie es etwa an der Uni
unterrichtet wird.  Das ist in dem Umfeld von MySQL weitgehend okay - wir
zum Beispiel setzen MySQL auf eine Weise ein, bei der wir alle Zugriffe auf
die Datenbank kontrollieren und bei der wir den Code zu allen Anwendungen
haben und ändern können, die auf die Datenbank zugreifen.  Das macht gewisse
Dinge auf der Clientseite möglich, die man anderswo im Server abhandeln muß.&lt;/p&gt;
&lt;p&gt;Foreign Key Constraints zum Beispiel realisieren wir im Client in
Bibliotheken.  Wir werden auch in der Regel keinen Code in der Datenbank
einsetzen - also weder Views, noch Procedures noch Triggers, sondern machen
alle diese Sachen im Client.  Wir sind aber ein privilegiertes Umfeld, weil
wir in der Produktion durchgehend einen OSS Stack einsetzen und so den
Quelltext zu allem vollkommen kontrollieren.  Wir sind außerdem größer als
eine einzelne Maschine leisten kann, müssen also sowieso horizontal
Skalieren, und es ist nun einmal günstiger, Client-CPUs zu kaufen als
Datenbankserver-CPUs, also ist es für uns ökonomisch nicht sinnvoll, Code in
der Datenbank laufen zu lassen (von den Managementerfordernissen, die Code
in der Datenbank mit sich bringt mal ganz abgesehen).&lt;/p&gt;
&lt;p&gt;Schließlich: MySQL hat eine Reihe von Eigenheiten, Einschränkungen und
Fehlern.  Das ist okay, denn die meisten dieser Sachen sind bekannt und man
kann mit ein wenig Erfahrung da leicht drum herum arbeiten.&lt;/p&gt;
&lt;p&gt;MySQL hat jedoch auch eine riesengroße Community von Leuten mit zum Teil
bemerkenswertem Niveau, sodaß man an die notwendigen Informationen
herankommt - in seiner Landessprache, wahlweise für Geld oder gute Worte und
auch auf Zeit.&lt;/p&gt;
&lt;p&gt;MySQL hat auch erwiesenermaßen große Installationen, das heißt die
versprochene Skalierbarkeit ist nicht hypothetisch, sondern die Konzepte
sind bewiesen und verdienen bei anderen Leuten nachweisbar Millionen - pro
Tag.&lt;/p&gt;
&lt;p&gt;MySQL ist nicht schön.  Das muß es nicht, es soll nur den Job erledigen und
die Kasse voll machen.  Und das tut es, zuverlässig, wiederholbar und vor
allen Dingen auf eine Weise, die man normalbegabten Entwicklern in Kursen
vermitteln kann.  Alles ist allem ist das in etwa das, was man von einem
solchen Produkt erwarten würde.&lt;/p&gt;
&lt;p&gt;Die Zusammenfassung dieses recht langen Textes ist in etwa:&lt;/p&gt;
&lt;p&gt;Die reale Welt ist nicht die Uni, und die Erfordernisse der realen Welt
werden für eine populäre Klasse von Anwendungen und Anforderungen von MySQL
besser abgebildet als von jeder anderen Datenbank.  Das MySQL dabei gegen
bestimmte traditionelle Lehren verstößt sorgt in gewissen Kreisen für
schlechte Presse, aber das ist den Leuten, die das machen egal, solange die
von ihnen erstellten Rechnungen korrekt genug sind um akzeptiert zu werden
und den Kühlschrank voll machen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ein paar Gedanken zu Zeitreihendaten</title>
      <link>https://blog.koehntopp.info/2009/10/28/ein-paar-gedanken-zu-zeitreihendaten.html</link>
      <pubDate>Wed, 28 Oct 2009 16:48:29 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2009/10/28/ein-paar-gedanken-zu-zeitreihendaten.html</guid>
      <description>&lt;p&gt;Ich sitze hier auf der
&lt;a href=&#34;http://www.netways.de/osmc/y2009/programm/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Open Source Monitoring Conference&lt;/a&gt;


und unterhalte mich mit ein paar Nagios bzw. Icinga Entwicklern. Dabei hörte
ich einen Haufen Flüche über NDO - Nagios Data Out. Ich schaue mir gerade
die Dokumentation zum
&lt;a href=&#34;http://nagios.git.sourceforge.net/git/gitweb.cgi?p=nagios/ndoutils;a=blob;f=docs/NDOUtils%20Documentation.pdf;h=90c19c160e486d18b57b8fa3b085ff51731c5bbb;hb=HEAD&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NDO Schema&lt;/a&gt;


an und stelle fest, daß die Ideen hier auf eine Weise viele Fehler teilen,
die auch dem MySQL Enterprise Manager Schema zugrunde liegen (Noch, das
MEM-Team bastelt das grad um).&lt;/p&gt;
&lt;h2 id=&#34;ein-naives-zeitreihenmodell&#34;&gt;
    &lt;a href=&#34;#ein-naives-zeitreihenmodell&#34;&gt;
	Ein naives Zeitreihenmodell
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Beiden ist gemein, daß man Zeitreihendaten von mehreren Meßwerten sammeln
möchte. Der naive Ansatz ist die Definition einer Tabelle mit einem
Timestamp und dem Key als Primärschlüssel, etwa&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;messwerte&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;not&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;latin1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;not&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;primary&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;schlüsselkompression&#34;&gt;
    &lt;a href=&#34;#schl%c3%bcsselkompression&#34;&gt;
	Schlüsselkompression
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Dabei wird es natürlich zu einer vielfachen Wiederholung der Werte von key
kommen - speichert man etwa die Ausgabe von SHOW GLOBAL STATUS im
Minutenabstand, dann hat man wieder und wieder die langen Namen von MySQL
Statusvariablen in der Tabelle gespeichert. Das kann man wegnormalisieren,
indem man definiert&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;smallint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;not&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key_name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;latin1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;not&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;primary&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;messwerte&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;not&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;smallint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;not&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;primary&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Auf diese Weise speichert man nicht wieder und wieder dieselben Strings in
der Tabelle ab, sondern hat die relativ langen Strings auf die 2 Byte eines
SMALLINT ohne Vorzeichen reduziert.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/key_compression.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;ER-Diagramm mit Key-Compression durch eine Lookup-Tabelle.&lt;/p&gt;
&lt;h2 id=&#34;data-lifecycle-management---drop-statt-delete&#34;&gt;
    &lt;a href=&#34;#data-lifecycle-management---drop-statt-delete&#34;&gt;
	Data Lifecycle Management - DROP statt DELETE
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In so einer Meßwertetabelle wird man ja laufend Meßwerte einfügen - und zwar
von vielen Meßstellen gleichzeitig. Zugleich sollen auch Meßwerte
ausgewertet werden. Damit sich die konkurrenten Schreibzugriffe nicht ins
Gehege kommen und damit parallel dazu auch ungestört gelesen werden kann,
muß diese Tabelle unbedingt eine InnoDB Tabelle sein - mit MyISAM zieht man
sich sonst binnen kürzester Zeit die Table Locks zu.&lt;/p&gt;
&lt;p&gt;InnoDB speichert die Daten in einem B+-Baum ab: Ein balancierter Baum, bei
dem die Blätter des Primärschlüssels die eigentlichen Daten sind. Die Daten
werden also gemäß unserer Definition in der Reihenfolge (ts, key_id)
gespeichert: Neue Daten werden immer an rechten Rand der Tabelle eingefügt,
alte Daten stehen weiter links.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/loeschen_einfuegen.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Daten werden links gelöscht und rechts im Baum eingefügt. Dadurch muß der
B-Baum ständig neu balanciert werden, damit er nicht zu einer linearen Liste
degeneriert. Das ist eine sehr langsame Operation.&lt;/p&gt;
&lt;p&gt;Dabei tritt ein Problem auf: Da neue Daten immer rechts angefügt werden und
alte Daten immer links gelöscht werden, bekommen wir einen Baum, der maximal
stark unbalanciert wird. Damit der B-Baum immer schön balanciert bleibt,
müssen beim Löschen der Daten also massenhaft Rebalancing-Operationen
durchgeführt werden - das involviert aber eine ganze Menge von Updates im
oberen Teil des Baumes bis hin zur Wurzel, und wühlt damit also eine große
Menge von Daten auf - noch dazu mit Random-I/O, also mit vielen Seeks.&lt;/p&gt;
&lt;p&gt;Wenn man wie ich eine MySQL Enterprise Manager Instalallation hat, die pro
Tag 7 GB neue Daten bekommt, dann muß man auch 7 GB Daten am Tag löschen,
damit die Platten nicht überlaufen.&lt;/p&gt;
&lt;p&gt;Die generische Lösung ist hier, entweder MySQL 5.1 Partitionen zu verwenden,
oder dasselbe manuell zu simulieren. Dazu baut man sich eine
Template-Tabelle, die man dann in bestimmten Intervallen cloned: Pro Stunde,
Tag, Woche oder Monat wird eine neue Tabelle angefangen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;messwerte_template&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;not&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;smallint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;not&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;primary&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;messwerte_20091028&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;LIKE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;messwerte_template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- usw.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Das hat den Vorteil, daß man alte Werte nun nicht mit einem &amp;ldquo;DELETE FROM
messwerte WHERE ts &amp;lt; &amp;lsquo;20090928 00:00:00&amp;rsquo;&amp;rdquo; loswerden muß, sondern elegant
&amp;ldquo;DROP TABLE messwerte_20090928&amp;rdquo; sagen darf. Dafür muß man - so man nicht
Partitionen verwendet - bei den Queries ein wenig mehr arbeiten, weil man
sich die Gesamtergebnisse aus den Tages-Tabellen zusammenstückeln muß, und
dabei tunlichst nicht UNION verwenden darf, damit es schnell ist (UNION ALL
wäre okay, wäre es nicht
&lt;a href=&#34;http://bugs.mysql.com/bug.php?id=50674&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;in MySQL kaputt&lt;/a&gt;

).&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/zeitreihe_partitioniert.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Schema mit Key-Kompression und Tagestabellen. Löschung von Daten kann pro
Tag durch ein DROP TABLE erfolgen.&lt;/p&gt;
&lt;p&gt;UNION ist deswegen nicht so toll, weil dies nach Definition Duplikate
eliminieren muß, und dazu fügt MySQL intern die einzelnen Teiltabellen zu
einer temporären Tabelle zusammen, sortiert diese, killt die Doubletten und
schmeißt die temporäre Tabelle weg, nachdem es uns das Resultat gesendet
hat. Leider ist die nächste Anfrage danach gleich wieder mit UNION, und der
Zirkus geht von vorne los. UNION ALL hätte dieses Problem nicht
(&lt;a href=&#34;http://bugs.mysql.com/bug.php?id=50674&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;jedoch&lt;/a&gt;

) - es darf uns nach
Definition fröhlich Duplikate senden und braucht daher diesen
Verarbeitungsschritt nicht.&lt;/p&gt;
&lt;h2 id=&#34;locality-of-reference&#34;&gt;
    &lt;a href=&#34;#locality-of-reference&#34;&gt;
	Locality Of Reference
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das nächste Problem ergibt sich nun aus der Tatsache, daß alle Meßwerte aus
einer Messung in derselben Tabelle gespeichert werden. Eine Tabelle besteht
in InnoDB ja aus Blöcken von 16KB, die jeweils am Stück geladen und
gespeichert werden. In unserer Tabelle stehen nun Tripel (ts, key_id,
value), wobei so knapp an die 300 verschiedene key_id und value pro ts
gespeichert werden, wenn wir z.B. einmal pro Minute den Output von SHOW
GLOBAL STATUS aufzeichnen. Eine Zeile (datetime, smallint, integer) ist
8+2+4 = 14 Byte plus Overhead (6+8 = 14) breit, d.h. wir bekommen etwa zwei
Messungen in einen 16KB Block hinein.&lt;/p&gt;
&lt;p&gt;Wenn wir nun aus diesen Meßwerten einen Graph zeichnen wollen, dann brauchen
wir z.B. für einen InnoDB-Graph ca. 4 Meßwerte pro Messung. Wir laden also
16 KB, nutzen 8*4 = 32 Byte davon, schmeißen den Rest weg, laden die
nächsten 16 KB und so weiter. Es wird klar, daß wir die Daten zwar in großen
breiten Zeilen erfassen, diese aber in der Regel nicht so brauchen.&lt;/p&gt;
&lt;p&gt;Es ist also lohnend, sich Gedanken über die Bedeutung der Meßwerte zu machen
und sie in etwa so zu gruppieren, daß wenigstens alle com-Counter in einer
Tabelle, alle InnoDB-Meßwerte in einer anderen Tabelle stehen und so weiter.
Dadurch würde beim Zeichnen des InnoDB-Graphen nicht auf eine Tabelle mit
8KB langen Rows zugegriffen werden, sondern vielleicht auf eine Tabelle mit
200 Byte langen Rows, und wir würden immerhin 32 Byte von 200 Byte nutzen,
oder pro Block nicht zwei, sondern ca. 80 Meßwerte auf einen Schlag laden.
Für einen 640 Pixel breiten Graphen würden wir also nicht mehr 320 16KB
Blöcke laden müssen, sondern nur noch 8.&lt;/p&gt;
&lt;p&gt;Wenn man begriffen hat, daß Locality of Reference und komplettes Data
Lifecycle Management wesentlich sind, wenn man von Zeitreihen sinnvolle
Performance will, und sein Datenmodell danach baut, dann kann man langsam
einmal anfangen, sich über weitergehende Dinge Gedanken zu machen (etwa:
Aggregation - wie viele Meßwerte brauche ich denn, um Pixel sinnvoll zu
schwärzen). Aber das ist eine Diskussion für ein anderes Mal.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ein paar Gedanken zu Foreign Key Constraints</title>
      <link>https://blog.koehntopp.info/2009/10/20/ein-paar-gedanken-zu-foreign-key-constraints.html</link>
      <pubDate>Tue, 20 Oct 2009 08:25:10 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2009/10/20/ein-paar-gedanken-zu-foreign-key-constraints.html</guid>
      <description>&lt;p&gt;Ich lese gerade &lt;a href=&#34;http://www.sqlite.org/draft/foreignkeys.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQLite Foreign Key Support&lt;/a&gt;

 und ich muß sagen, ich kann mir ein leichtes Grinsen nicht verkneifen.&lt;/p&gt;
&lt;p&gt;Also, ich finds ja gut, daß SQLite die Option für Foreign Key Constraints implementiert und ich finds sogar noch besser, daß mit DEFERRABLE INITIALLY DEFERRED sogar die einzig sinnvolle Weise das zu tun bereitgestellt wird, aber ich frag mich schon, wozu das gut sein soll.&lt;/p&gt;
&lt;h2 id=&#34;foreign-keys&#34;&gt;
    &lt;a href=&#34;#foreign-keys&#34;&gt;
	Foreign Keys
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Aber von vorne. Wenn eine Tabelle einen Primary Key hat, dann kann jede Zeile in der Tabelle über diesen Key eindeutig identifiziert werden. Das erlaubt es, in anderen Tabellen auf Zeilen der Ausgangstabelle Bezug zu nehmen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UNSIGNED&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;PRIMARY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;adata&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UNSIGNED&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;PRIMARY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UNSIGNED&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bdata&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hier ist &lt;code&gt;b.aid&lt;/code&gt; der Primärschlüssel von &lt;code&gt;a&lt;/code&gt;, der in &lt;code&gt;b&lt;/code&gt; genannt wird. Wir nennen &lt;code&gt;b.aid&lt;/code&gt; den &amp;ldquo;Fremdschlüssel von a in b&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Dazu ein paar Anmerkungen, weil es oft nachlässig gehandhabt wird: &lt;code&gt;aid&lt;/code&gt; ist kein Fremdschlüssel, sondern &lt;code&gt;aid&lt;/code&gt; ist nicht eindeutig. &lt;code&gt;a.aid&lt;/code&gt; ist ein Primärschlüssel, &lt;code&gt;b.aid&lt;/code&gt; ist &amp;ldquo;der Fremdschüssel von a in b&amp;rdquo; und ohne den &amp;ldquo;von a in b&amp;rdquo;-Teil ist es streng genommen auch wieder nicht eindeutig.&lt;/p&gt;
&lt;p&gt;Dennoch sagen viele Leute &amp;ldquo;aid ist Fremdschlüssel&amp;rdquo; und überlassen es dem Kontext, klarzustellen daß &amp;ldquo;b.aid ist ein Fremdschlüssel von a in b&amp;rdquo; gemeint ist. Da muß man sich dran gewöhnen und das mental korrekt expandieren.&lt;/p&gt;
&lt;p&gt;Und schließlich ist es tatsächlich so, daß schon das bloße Anlegen von &lt;code&gt;b.aid&lt;/code&gt; und Befüllen von &lt;code&gt;b.aid&lt;/code&gt; mit Werten von &lt;code&gt;a.aid&lt;/code&gt; ausreicht, um eine Fremdschlüsselbeziehung zu definieren. Es kann nun sein, daß jemand oder etwas illegale &lt;code&gt;a.aid&lt;/code&gt; in &lt;code&gt;b.aid&lt;/code&gt; hinterlegt, daß also &lt;code&gt;b.aid&lt;/code&gt; existieren, für die es keine passenden &lt;code&gt;a.aid&lt;/code&gt;-Einträge gibt, und das führt uns zur folgenden Verschärfung.&lt;/p&gt;
&lt;h2 id=&#34;foreign-key-constraints&#34;&gt;
    &lt;a href=&#34;#foreign-key-constraints&#34;&gt;
	Foreign Key Constraints
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Solche illegalen Werte in &lt;code&gt;b.aid&lt;/code&gt; zu verhindern ist die Aufgabe einer FOREIGN KEY CONSTRAINT, aber diese ist vollkommen optional. Wollte man sie haben, definierte man sie so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UNSIGNED&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;PRIMARY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UNSIGNED&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bdata&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FOREIGN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;REFERENCES&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- hier noch Optionen
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;und wo der Kommentar Optionen vorsieht könnte man noch Dinge notieren wie DEFERRABLE INITIALLY DEFERRED.&lt;/p&gt;
&lt;p&gt;Einige Datenbanken-Implementierungen verlangen auch noch Nebenbedingungen wie &amp;ldquo;auf a.aid und auf b.aid muß jeweils ein Index definiert sein&amp;rdquo;. Das ist sogar dann sinnvoll, wenn die Implementierung es nicht verlangt, aber im mathematisch-definitorischen Sinne nicht notwendig. Die Implementierungen verlangen so etwas, denn wann immer wir eine CONSTRAINT definieren, muß diese ja auch geprüft werden. Für die Prüfung wollen wir realistischerweise, daß diese effizient durchgeführt wird - das geht aber nur mit einem Index flink.&lt;/p&gt;
&lt;h3 id=&#34;eine-kleine-abschweifung-schlüssel-vs-index&#34;&gt;
    &lt;a href=&#34;#eine-kleine-abschweifung-schl%c3%bcssel-vs-index&#34;&gt;
	Eine kleine Abschweifung: Schlüssel vs. Index
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Eine kleine Abschweifung: Das ist auch der Grund, warum die Begriffe Schlüssel (Key) und Index von Datenbankern synonym verwendet werden: Ein Schlüssel ist etwas, das eine einzelne Zeile (UNIQUE KEY) oder eine zusammengehörende Gruppe von Zeilen identifiziert, ein Index ist die Struktur, die diese Dinge schnell auffindbar macht.&lt;/p&gt;
&lt;p&gt;Definiert man zum Beispiel eine UNIQUE KEY CONSTRAINT (es kann nur eine Zeile dieses Wertes in einer Tabelle geben), dann muß beim Einfügen von neuen Zeilen ja in der Tabelle nachgesehen werden, ob es diesen Wert vielleicht schon gibt. Ohne einen Index wäre das eine sehr langsame Operation - daher geht eine UNIQUE KEY CONSTRAINT immer mit einem Index auf die Zeile zusammen und daher verwenden die meisten Datenbanker die Begriffe KEY und INDEX austauschbar, auch wenn sie verschiedene Dinge bezeichnen: Ein Schlüssel ist eine Eigenschaft einer Spalte, ein Index ist eine Struktur der Implementierung.&lt;/p&gt;
&lt;h2 id=&#34;wozu-fk-constraints&#34;&gt;
    &lt;a href=&#34;#wozu-fk-constraints&#34;&gt;
	Wozu FK-Constraints?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wie auch immer: Die Aufgabe einer FOREIGN KEY CONSTRAINT ist es, sicherzustellen, daß in der Fremdschlüsselspalte b.aid zu jedem Zeitpunkt immer nur gültige Werte stehen.&lt;/p&gt;
&lt;p&gt;In MySQL ist es nun leider so, daß InnoDB dies etwas dämlich implementiert: Dort wird nämlich - wie in SQLite per Default auch - nach jedem Statement geprüft, ob die Constraint gültig ist oder verletzt wird. Das macht es notwendig, die Reihenfolge von Operationen so zu gestalten, daß die Constraint immer gilt - selbstreferentielle Strukturen nerven besonders, weil man diese quasi nur Top-Down aufbauen kann, und wenn die Struktur zirkulär ist, kann man sie gar nicht errichten, es sei denn, man schaltet die Constraint-Prüfung aus.&lt;/p&gt;
&lt;p&gt;Ich kann also in MySQL nicht so vorgehen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;BEGIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WORK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;keks&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;adata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;keks&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;COMMIT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dies scheitert nach dem ersten Insert, weil die &lt;code&gt;a.aid = 1&lt;/code&gt; noch nicht existiert, wenn ich die &lt;code&gt;b.aid = 1&lt;/code&gt; in die Tabelle einfüge. Technisch ist das eigentlich kein Problem, denn da dies alles in einer Transaktion geschieht tauchen beide Werte gleichzeitig erst zum COMMIT in der Datenbank auf, aber die Prüfung erfolgt leider per Statement und nicht per Transaktion. Ich muß also Entwickler als meinen Code passend strukturieren, egal ob das der Anwendungslogik gerecht wird oder nicht.&lt;/p&gt;
&lt;p&gt;In SQLite darf man immerhin DEFERRABLE INITIALLY DEFERRED angeben, und das will man offenbar auch dringend. In diesem Fall wird die FK-Constraint nicht bei jedem Statement geprüft, sondern erst am Ende einer Transaktion beim COMMIT. Man kann sich also seine Strukturen nach Belieben zusammenbauen, und die Datenbank erzwingt dabei keine besondere Ordnung der Anweisungen im Code, sondern verlangt nur, daß in dem Moment, wenn man seine Änderungen für Dritte sichtbar publiziert, die FK-Constraints eingehalten werden.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Der Sinn von FK-Constraints ist es, gültige Datenstrukturen und insbesondere gültige Verknüpfungen zwischen Daten zu erzwingen, die auf verschiedene Tabellen desselben Schemas oder derselben Instanz verteilt sind. Die FK-Constraint macht diese Prüfung in der Datenbank, denn nur so ist sichergestellt, daß unterschiedliche Anwendungen, die unterschiedliche Bibliotheken und Programmiersprachen verwenden, denselben Bedingungen beim Schreiben hinsichtlich der Gültigkeit von Datenstrukturen unterliegen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Bitte mal Anhalten und den vorhergehenden Satz ein zweites Mal lesen.&lt;/p&gt;
&lt;p&gt;Im Netz findet man mitunter Diskussionen über Datenmodellierung und dort gibt es in der Regel eine Gruppe von Personen, die vehement die Auffassung vertritt, daß ein Datenmodell, das FK- und andere Constraints nicht im Modell definiert schlicht falsch (ersatzweise &amp;ldquo;Schrott&amp;rdquo;, &amp;ldquo;Müll&amp;rdquo;, &amp;ldquo;Gefrickel&amp;rdquo; und anderes) ist.&lt;/p&gt;
&lt;h2 id=&#34;grenzen-und-probleme-von-fk-constraints&#34;&gt;
    &lt;a href=&#34;#grenzen-und-probleme-von-fk-constraints&#34;&gt;
	Grenzen und Probleme von FK-Constraints
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In der Aussage oben stecken ein paar Annahmen drin, und die sind nicht unbedingt immer gegeben. Wenn sie nicht gegeben sind, sind FK-Constraints mindestens sinnlos, manchmal sogar schädlich.&lt;/p&gt;
&lt;p&gt;Eine Annahme, nämlich die, die mich angesichts der FK-Constraints von SQLite grinsen ließ, ist wie folgt: Es ist die Rede davon, daß unterschiedliche Anwendungen mit unterschiedlichen Bibliotheken oder Programmiersprachen auf die Datenbank zugreifen. SQLite ist aber eine Embedded Datenbank, die Daten in einer einzelnen Datenbankdatei ablegt und Locking auf der Ebene der gesamten Datenbank betreibt. Auf eine SQLite-Datenbank (etwa die Titelliste von iTunes oder das MacOS Adreßbuch) greift in der Regel nur eine Anwendung (iTunes, das Adreßbuch) schreibend zu. FK-Constraints in SQLite sind… ziemlicher Overkill.&lt;/p&gt;
&lt;p&gt;Auch bei &amp;ldquo;uns&amp;rdquo; in der Produktion haben wir uns entschieden, MySQL FK-Constraints überwiegend nicht zu nutzen. Das hat eine Reihe von Gründen, die zum Teil auch nur gültig sind, weil wir in einer speziellen und sehr günstigen Ausgangslage sind.&lt;/p&gt;
&lt;p&gt;In MySQL ist die Nutzung von FK-Constraints überhaupt nur sinnvoll möglich, wenn die InnoDB Storage Engine verwendet wird. In MyISAM wird die Syntax für Constraint Definitionen zwar geparsed, dann aber nicht beachtet. Wir nutzen InnoDB, aber wir definieren keine neuen Constraints mehr und wir nehmen die existierenden Definitionen schrittweise nach Möglichkeit zurück.&lt;/p&gt;
&lt;p&gt;Das ist so, weil zum einen unser Schema inzwischen größer als eine Instanz ist: Wir haben zwar verschiedenen MySQL-Instanzen, aber diese sind in Wirklichkeit alle nicht alleinstehend, sondern wir haben Bezüge zwischen Daten, die in verschiedenen Instanzen liegen: Daten in Tabellen der &amp;ldquo;av&amp;rdquo;-Instanz beziehen sich auf Datensätze, deren Rows in Tabellen der &amp;ldquo;bp&amp;rdquo;-Instanz liegen. Dies ist mit einer FK-Constraint nicht zu modellieren, und wenn man es modellierte wäre es kaum effizient zu prüfen: Die Netzwerk-Latenzen würden sich akkumulieren und zu sehr bremsen um praktikabel zu sein.&lt;/p&gt;
&lt;p&gt;Es ist auch absehbar, daß wir bald Tabellen haben werden, die größer als eine Instanz sind, daß wir also Sharding betreiben werden müssen. In diesem Fall verschärft sich die Situation noch weiter.&lt;/p&gt;
&lt;p&gt;Es ist weiterhin so, daß wir so sehr auf Performance optimieren müssen, daß wir uns die Kosten von FK-Constraints nicht mehr leisten können und wollen. Wenn man eine FK-Constraint definiert, dann muß diese ja auch geprüft werden - MySQL prüft sie bei jedem Zugriff.&lt;/p&gt;
&lt;p&gt;Das bedeutet aber bei jedem Schreibzugriff gibt es einen weiteren Lookup in der referenzierten Tabelle. Dazu muß die referenzierte Tabelle wiederum zum Teil geladen werden, was den Cache-Footprint bzw. den Working Set der Anwendung auf eine Weise vergrößert, die in bestimmten Situationen fatal sein kann. Die Anwendung kann plötzlich von speichergesättigt in einen disk-bound Zustand übergehen, weil sich der Working Set durch die Lookups so stark vergrößert, daß der aktive Teil der Anwendung nicht mehr im Speicher gehalten werden kann.&lt;/p&gt;
&lt;p&gt;Obendrein kommt im speziellen Fall von InnoDB, daß Schreibzugriffe auf ein Ende einer FK-Constraint nicht nur den beschriebenen Record X-Locken, sondern auch das andere Ende der Beziehung S-Locken, und daß diese Locks außerdem bei kaskadierenden Beziehungen über hierarchische Strukturen noch weiter eskalieren können. Schemata mit vielen FK-Constrains und vielen Schreibzugriffen erzeugen also unter Umständen um Größenordnungen mehr S-Locks und das wiederum kann die Rate von Deadlocks und Lock Timeouts um ein Vielfaches nach oben treiben.&lt;/p&gt;
&lt;p&gt;Bei &amp;ldquo;uns&amp;rdquo; ist es nun so, daß wir in der Produktion ein reines Open Source Umfeld haben. Wir wissen also nicht nur, welche Anwendungen bei uns auf Datenstrukturen in der Datenbank zugreifen, sondern wir kontrollieren auch, wie sie es tun. Wir können erzwingen, daß alle Operationen auf Daten in der Datenbank durch bestimmte Routinen in bestimmten Bibliotheken erfolgen und daß dort bestimmte Dinge erzwungen werden können.&lt;/p&gt;
&lt;p&gt;Wir haben uns also ein System gebaut, daß FK-Constraints außerhalb der Schemadefinition nachbaut. Unsere FK-Constraints können daher Instanzengrenzen überbrücken. Wir können außerdem optional entscheiden, daß wir die Constraintprüfungen nicht live vornehmen wollen, sondern daß wir die Tests stattdessen in Intervallen im Batch auf den bestehenden Daten vornehmen (ähnlich einem fsck).&lt;/p&gt;
&lt;p&gt;Da wir ziemlich intensiv Replikation einsetzen, brauchen wir das auch nicht auf einer produktiven Datenbank zu tun, sondern können das auf Kopien von Instanzen machen, die offline genommen worden sind. Und wir müssen das nicht oft tun, denn wenn wir verifiziert haben, daß der Code, der Änderungen an den Daten vornimmt, diese Änderungen korrekt durchführt, dann können Verletzungen der Constraints nur noch dann vorkommen, wenn Ausnahme-Betriebszustände erreicht wurden.&lt;/p&gt;
&lt;h2 id=&#34;on-delete-cascade-ist-noch-mal-ein-extraproblem&#34;&gt;
    &lt;a href=&#34;#on-delete-cascade-ist-noch-mal-ein-extraproblem&#34;&gt;
	ON DELETE CASCADE ist noch mal ein Extraproblem
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Schließlich ist es so, daß FK-Constraints auch mit triggerhaften Aktionen verknüpft sein können. ON DELETE CASCADE zum Beispiel ist so eine Aktion: Sie bewirkt, daß alle von einer &lt;code&gt;a.aid&lt;/code&gt; abhängigen Zeilen in &lt;code&gt;b&lt;/code&gt; gelöscht werden, wenn &lt;code&gt;a.aid&lt;/code&gt; gelöscht wird.&lt;/p&gt;
&lt;p&gt;Solche Kaskaden sind aus mehreren Gründen schädlich und man sollte diese Art von Definition grundsätzlich nicht verwenden, selbst wenn man FK-Constraints ansonsten einsetzt oder einsetzen muß: Solche Definitionen fördern schlechten und schwer zu wartenden Code.&lt;/p&gt;
&lt;p&gt;Statt die Datenstrukturen im Code aufzuräumen und etwa abhängige Records explizit zu löschen, wird man einfach ein &lt;code&gt;DELETE FROM a WHERE a.aid = ?&lt;/code&gt; programmieren und die FK-Constraints implizit die Arbeit tun lassen. Implizite Aktion macht aber die Funktion des Programmes opak: Dem nächsten Entwickler, der auf den Code schaut, wird nicht klar sein, daß dies eine teure Operation ist, die sehr große Folge-Aktionen und Folgekosten in anderen Tabellen nach sich zieht. Die Wirkung von Statements ist auch nicht mehr auf eine einzelne Tabelle beschränkt, sondern das harmlose kleine DELETE kann eine Spur der Verwüstung durch die gesamte Datenbank ziehen (insbesondere bei Vorhandensein von selbstreferentiellen Strukturen mit FK-Constraints).&lt;/p&gt;
&lt;p&gt;Korrekt wäre die Definition einer FK-Constraint, die die Löschung der 1-Seite einer 1:n-Beziehung verhindert solange noch n-Records existieren, die sich auf den zu löschenden 1-Record beziehen. Der Entwickler ist dann gezwungen, den entsprechenden Löschcode in der Anwendung explizit hinzuschreiben, oder, wenn er schlauer ist, die passende Funktion aufzurufen, die die Löschung für ihn vornimmt. In jedem Fall ist aber durch den Blick auf den Code allein sofort klar, was dort passiert und wie groß der Einschlag ist, den man spürt, wenn dieser Code auf die Datenbank trifft.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CGI Programmierung</title>
      <link>https://blog.koehntopp.info/1996/11/27/cgi-programmierung.html</link>
      <pubDate>Wed, 27 Nov 1996 01:02:03 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/1996/11/27/cgi-programmierung.html</guid>
      <description>&lt;h1 id=&#34;der-apache-www-server&#34;&gt;
    &lt;a href=&#34;#der-apache-www-server&#34;&gt;
	Der Apache WWW-Server
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Der Apache WWW-Server ist ein Server der zweiten Generation.
Das bedeutet, er entstand auf der Grundlage der Erfahrungen, die beim Betrieb von WWW-Servern unter sehr hoher Last gemacht wurden,
und er bietet erweiterte Möglichkeiten zur dynamischen Erzeugung von Seiten über CGI (&lt;em&gt;Common Gateway Interface&lt;/em&gt;) und
über eine servereigene Programmierschnittstelle (&lt;em&gt;Server API&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Der Server selbst ist auf praktisch jeder modernen UNIX-Plattform einsetzbar,
und Portierungen auf Windows NT und OS/2 sind ebenfalls verfügbar.&lt;/p&gt;
&lt;h2 id=&#34;apache-übersetzen&#34;&gt;
    &lt;a href=&#34;#apache-%c3%bcbersetzen&#34;&gt;
	Apache übersetzen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wie es sich für ein frei verfügbares UNIX-Programm gehört, ist der Server in Quelltextform erhältlich.
Zusätzlich werden auf &lt;a href=&#34;http://www.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.apache.org/&lt;/a&gt;

 auch Binärversionen
für die verbreitesten UNIX-Versionen bereitgestellt.
Ist die eigene UNIX-Version nicht unter diesen zu finden oder möchte man den Server mit experimentellen Optionen  betreiben,
muss man ihn sich selbst übersetzen.
Zum Glück ist das nicht sehr schwierig.&lt;/p&gt;
&lt;p&gt;Apache kommt, wie üblich, als mit &lt;code&gt;gzip&lt;/code&gt; gepacktes
&lt;code&gt;tar&lt;/code&gt;-Archiv. Nach dem Auspacken mit&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/tmp$ gzip -dc apache*tar.gz | tar xvf -
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;entsteht ein Verzeichnis mit dem Namen &lt;code&gt;apache_x.y.z&lt;/code&gt;, wobei &lt;code&gt;x.y.z&lt;/code&gt; die Versionsnummer des Servers angibt.
Es enthält die folgenden Unterverzeichnisse:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;cgi-bin&lt;/dt&gt;
&lt;dd&gt;Dieses Verzeichnis enthält einen Satz Beispielprogramme zur CGI-Programmierung in Form von Scriptdateien.&lt;/dd&gt;
&lt;dt&gt;cgi-src&lt;/dt&gt;
&lt;dd&gt;Dieses Verzeichnis enthält weitere Beispielprogramme zur CGI-Programmierung, die in C geschrieben wurden.
Diese Programme müssen zunächst compiliert werden, bevor sie im Verzeichnis &lt;code&gt;cgi-bin&lt;/code&gt; installiert werden können.&lt;/dd&gt;
&lt;dt&gt;conf&lt;/dt&gt;
&lt;dd&gt;Dieses Verzeichnis enthält Beispiel-Konfigurationsdateien.
Die Namen dieser Konfigurationsdateien enden auf &lt;code&gt;-dist&lt;/code&gt;.
Zum Gebrauch muss die jeweilige Konfigurationsdatei kopiert und unbedingt für den lokalen Bedarf angepasst werden.&lt;/dd&gt;
&lt;dt&gt;icons&lt;/dt&gt;
&lt;dd&gt;Die eingebaute Apache-Funktion zur Anzeige von Verzeichnissen kann Dateien mit dateitypspezifischen Icons anzeigen.
Dieses Verzeichnis enthält einen Satz Beispiel-Icons, die vom Server dazu verwendet werden.&lt;/dd&gt;
&lt;dt&gt;logs&lt;/dt&gt;
&lt;dd&gt;Dieses Verzeichnis ist zunächst leer.
Der Server wird später im Betrieb seine Logbücher hier ablegen.
Diese Logbücher können je nach Serverauslastung sehr umfangreich werden.&lt;/dd&gt;
&lt;dt&gt;src&lt;/dt&gt;
&lt;dd&gt;Dieses Verzeichnis enthält den C-Quelltext des Servers.
Es wird für den Betrieb nicht benötigt.&lt;/dd&gt;
&lt;dt&gt;support&lt;/dt&gt;
&lt;dd&gt;Dieses Verzeichnis enthält weitere C-Quelltexte zu Hilfsprogrammen für den Serverbetrieb.
Sie müssen compiliert werden, wenn man Eigenschaften des Servers für Fortgeschrittene nutzen möchte:
Benutzeridentifikation mit Paßworten,
DBM-Benutzerdatenbanken für sehr große Benutzerzahlen und verschiedene andere.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;konfigurationsdatei-anpassen&#34;&gt;
    &lt;a href=&#34;#konfigurationsdatei-anpassen&#34;&gt;
	Konfigurationsdatei anpassen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Im &lt;code&gt;src&lt;/code&gt;-Verzeichnis befindet sich die Datei &lt;code&gt;Configuration&lt;/code&gt;.
Dies ist die einzige Datei, die angepasst werden muss,
um den Apache-Server für eine unterstützte Plattform zu übersetzen.
In dieser Datei ist auch einzustellen, welche Module in den Server eingebunden werden
sollen.&lt;/p&gt;
&lt;p&gt;Folgende Einstellungen sind mit einem Texteditor an dieser Datei
vorzunehmen:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;CC=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Wahl des C-Compilers.
Der Server kann entweder mit dem normalen Systemcompiler &lt;code&gt;cc&lt;/code&gt; oder mit dem GNU-C-Compiler &lt;code&gt;gcc&lt;/code&gt; übersetzt werden,
wenn dieser auf dem System vorhanden ist.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CFLAGS=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Optionen für den Aufruf des C-Compilers.
Mit dieser Variable können die Optionen für den Lauf des Compilers festgelegt werden.
&lt;p&gt;Normalerweise wird man hier den Optimierungslevel des Compilers angeben, also beispielsweise &lt;code&gt;-O2&lt;/code&gt;.
Für den späteren Betrieb des Servers mit &lt;em&gt;Server Side Includes&lt;/em&gt; kann hier die Option &lt;code&gt;-DXBITHACK&lt;/code&gt; mit  angegeben werden.
Für schnelleren Betrieb auf Kosten der Lesbarkeit von Logfiles kann hier die Option &lt;code&gt;-DMINIMAL_DNS&lt;/code&gt; mit angegeben werden.
Die Option &lt;code&gt;-DMAXIMAL_DNS&lt;/code&gt; führt dagegen für alle Clients eine doppelte Abfrage des Nameservers durch,
was Fälschungen von Hostnamen erschwert, aber sehr langsam ist.&lt;/p&gt;
&lt;p&gt;Für den normalen Betrieb sollten diese Optionen zunächst einmal weggelassen werden.
Sie sind nicht unmittelbar notwendig und haben Nebeneffekte, die verstanden sein müssen, bevor die Optionen sinnvoll einsetzbar sind.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;LFLAGS=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Optionen für den Aufruf des Linkers.
Mit dieser Variable können die Optionen für den Lauf des Linkers festgelegt werden.
Normalerweise ist diese Variable leer.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;EXTRA_LIBS=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Optionen für das Linken zusätzlicher Bibliotheken.
Mit dieser Variable können zusätzliche Bibliotheken zum Linken des Programmes angegeben werden.
Normalerweise ist diese Variable leer.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;AUX_*=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Betriebssystemspezifische Optionen und Bibliotheken.
Diese Variablen stehen in Blöcken nach Betriebssystemen sortiert beisammen.
Sie legen fest, für welche Betriebssystemversion der Server übersetzt werden soll.
Im Auslieferungszustand ist der Server für SunOS 4 konfiguriert.
Diese Einstellung &lt;strong&gt;muss&lt;/strong&gt; für das Zielbetriebssystem angepaßt werden.
Dazu ist die Zeile für SunOS 4 zu deaktivieren und die Zeile für das gewünschte Betriebssystem zu aktivieren.
Um den Apache-Quelltext zum Beispiel für die Übersetzung auf Solaris 2 zu konfigurieren,
muss der Block&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-make&#34; data-lang=&#34;make&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# For SunOS 4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;AUX_CFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -DSUNOS4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# For Solaris 2.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;#AUX_CFLAGS= -DSOLARIS2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;#AUX_LIBS= -lsocket -lnsl
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;folgendermaßen geändert werden:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-make&#34; data-lang=&#34;make&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# For SunOS 4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;#AUX_CFLAGS= -DSUNOS4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# For Solaris 2.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;AUX_CFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -DSOLARIS2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;AUX_LIBS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -lsocket -lnsl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Weiter unten in der Konfigurationsdatei befindet sich der Abschnitt zur Konfiguration der Module,
aus denen der Server zusammengesetzt wird.
Die Einstellungen in diesem Bereich sind in der Regel für den Normalbetrieb korrekt und brauchen nicht  verändert zu werden.
Die Kommentare in diesem Abschnitt der Konfigurationsdatei geben weitere Hinweise.&lt;/p&gt;
&lt;h2 id=&#34;den-server-übersetzen&#34;&gt;
    &lt;a href=&#34;#den-server-%c3%bcbersetzen&#34;&gt;
	Den Server übersetzen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Nachdem die Konfigurationdatei angepasst ist, müssen die Informationen aus dieser Datei in den C-Quelltext des Programmes eingearbeitet werden.
Dies geschieht automatisch durch den Aufruf des Scriptes &lt;code&gt;Configure&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/src$ ./Configure
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Using &amp;#39;Configuration&amp;#39; as config file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Danach kann der Server übersetzt werden.
Der Übersetzungsprozeß wird durch das UNIX-Werkzeug &lt;code&gt;make&lt;/code&gt; automatisch gesteuert.
Es genügt, im &lt;code&gt;src&lt;/code&gt;-Verzeichnis &lt;code&gt;make&lt;/code&gt; aufzurufen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/src$ make
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;gcc -c -O2 -DLINUX alloc.c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nach erfolgreichem Abschluss des Übersetzungsvorgangs wird im &lt;code&gt;src&lt;/code&gt;-Verzeichnis eine Datei &lt;code&gt;httpd&lt;/code&gt; hinterlassen,
die ausführbar ist und mit dem &lt;code&gt;file&lt;/code&gt;-Kommando als Programm identifiziert wird.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/src$ ls -l ./httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-rwxr-xr-x   1 root     root        82260 Nov  4 10:42 ./httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/src$ file ./httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;./httpd: ELF 32-bit LSB executable i386 (386 and up) Version 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;die-hilfsprogramme-übersetzen&#34;&gt;
    &lt;a href=&#34;#die-hilfsprogramme-%c3%bcbersetzen&#34;&gt;
	Die Hilfsprogramme übersetzen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Für den einfachen Serverbetrieb genügt es, das Serverprogramm &lt;code&gt;httpd&lt;/code&gt; zur Verfügung zu haben.
Für den fortgeschrittenen Betrieb ist es jedoch nützlich,
auch die optionalen Hilfsprogramme in den Verzeichnissen &lt;code&gt;cgi-src&lt;/code&gt; und &lt;code&gt;support&lt;/code&gt; zu übersetzen und zu installieren.
Zum Glück sind diese Programme kaum systemspezifisch und können mit einem einfachen Aufruf von &lt;code&gt;make&lt;/code&gt; in den betreffenden Verzeichnissen übersetzt werden:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/cgi-src$ make
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;gcc -c -g query.c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/cgi-src$ cd ../support/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/tmp/apache_1.0.3/support$ make
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;gcc -g htpasswd.c -o htpasswd 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Eventuell bei der Übersetzung auftretende Warnungen sind normal und können ignoriert werden.&lt;/p&gt;
&lt;h2 id=&#34;den-server-installieren&#34;&gt;
    &lt;a href=&#34;#den-server-installieren&#34;&gt;
	Den Server installieren
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Neben dem eigentlichen Serverprogramm &lt;code&gt;httpd&lt;/code&gt; werden zum Betrieb des Servers noch verschiedene zusätzliche
Verzeichnisse benötigt.
Alle diese Dateien und Verzeichnisse sollen in einem gemeinsamen Sammelverzeichnis installiert werden,
das in der Terminologie von Apache als &lt;code&gt;ServerRoot&lt;/code&gt; bezeichnet wird.
Viele Serverbetreiber wählen als &lt;code&gt;ServerRoot&lt;/code&gt; das Verzeichnis &lt;code&gt;/var/httpd&lt;/code&gt;.
Dieser Text geht ebenfalls davon aus, daß mit dieser &lt;code&gt;ServerRoot&lt;/code&gt; installiert wird.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;var
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;`-- httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    |-- cgi-bin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    |-- conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    |-- icons
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    `-- logs            
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Verzeichnisstruktur ServerRoot: &lt;code&gt;/var/httpd&lt;/code&gt; und die Unterverzeichnisse&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;home
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;`-- www
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    |-- icons
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    |-- pd-software
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    `-- texte
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Verzeichnisstruktur DocumentRoot: &lt;code&gt;/home/www&lt;/code&gt; und die Unterverzeichnisse&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Außerdem wird der Server in Zukunft auf einen weiteren Verzeichnisbaum zugreifen, der die HTML-Dokumente enthält,
die geservt werden sollen.
Diese zweite Verzeichnishierarchie wird als &lt;em&gt;DocumentRoot&lt;/em&gt; bezeichnet.
Im Gegensatz zur ServerRoot ist die Verzeichnisstruktur der DocumentRoot selbst vollkommen frei  wählbar.
Die in der Abbildung gegebene Aufteilung ist nur ein Beispiel.&lt;/p&gt;
&lt;p&gt;Beide Verzeichnishierarchien sind unterschiedlich und sollen sich nicht überlappen.
Auf gar keinen Fall sollte die &lt;code&gt;ServerRoot&lt;/code&gt; unterhalb der &lt;code&gt;DocumentRoot&lt;/code&gt; liegen,
denn sonst könnte man über den WWW-Server auf seine Konfigurationsdateien und Passworte zugreifen,
und das ist eine ausgesprochen schlechte Idee.
Auch andersherum sollte die &lt;code&gt;DocumentRoot&lt;/code&gt; nicht unterhalb der &lt;code&gt;ServerRoot&lt;/code&gt; liegen, obwohl das nicht unmittelbar schädlich ist.
Viele Serverbetreiber wählen als DocumentRoot das Verzeichnis &lt;code&gt;/home/www&lt;/code&gt;, und das ist auch das Verzeichnis, das in diesem Text verwendet wird.&lt;/p&gt;
&lt;p&gt;Zur Installation ist es notwendig, die Verzeichnisse für die ServerRoot und die DocumentRoot anzulegen und ihnen die  notwendigen Rechte zu geben.
Zunächst wird das ServerRoot-Verzeichnis angelegt und der Server selber in ihm installiert:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var# mkdir httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var# chown root.root httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var# chmod 755 httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var# cp /tmp/apache_1.0.3/src/httpd httpd/httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var# chown root.root httpd/httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var# chmod 111 httpd/httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Danach müssen die vorgefertigten Dateien aus den Verzeichnissen &lt;code&gt;cgi-bin&lt;/code&gt;, &lt;code&gt;conf&lt;/code&gt; und &lt;code&gt;icons&lt;/code&gt; übernommen werden.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-comsole&#34; data-lang=&#34;comsole&#34;&gt;/var# cd httpd
/var/httpd# mkdir cgi-bin conf icons logs support
/var/httpd# chown root.root cgi-bin conf icons logs support
/var/httpd# chmod 755 cgi-bin conf icons logs support
/var/httpd# cp /tmp/apache_1.0.3/cgi-bin/* cgi-bin/
/var/httpd# cp /tmp/apache_1.0.3/icons/* icons/
/var/httpd# cp /tmp/apache_1.0.3/conf/* conf/
/var/httpd# cp /tmp/apache_1.0.3/support/htpasswd support/
/var/httpd# cp /tmp/apache_1.0.3/support/httpd_monitor support/
/var/httpd# cp /tmp/apache_1.0.3/support/unescape support/&amp;lt;/small&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Schließlich muss auch die &lt;code&gt;DocumentRoot&lt;/code&gt; noch angelegt werden.
Dokumente auf dem WWW-Server sollen unter Umständen auch durch normale Benutzer erzeugt werden dürfen.
Es ist also sinnvoll, eine Benutzergruppe &lt;code&gt;webmaster&lt;/code&gt; anzulegen und dieser Benutzergruppe Schreibrechte an der DocumentRoot zu geben.
Dies ist recht einfach auf die folgende Weise möglich:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/home# echo &amp;#34;webmaster::60001:&amp;#34; &amp;gt;&amp;gt; /etc/group
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/home# mkdir www
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/home# chown kris.webmaster www
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/home# chmod 775 www
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Unterhalb dieses Verzeichnisses kann dann die benötigte Dokumentenstruktur nach Bedarf durch beliebige Benutzer der Gruppe &lt;code&gt;webmaster&lt;/code&gt; angelegt werden.
Benutzer werden der Benutzergruppe &lt;code&gt;webmaster&lt;/code&gt; zugefügt, indem ihre Benutzernamen im vierten (letzten) Feld der entsprechenden Zeile in der Datei &lt;code&gt;/etc/group&lt;/code&gt; eingetragen werden.
Die betreffenden Benutzer müssen sich neu einloggen, damit die Änderung wirksam wird.&lt;/p&gt;
&lt;h1 id=&#34;apache-konfigurieren&#34;&gt;
    &lt;a href=&#34;#apache-konfigurieren&#34;&gt;
	Apache konfigurieren
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Dieser Abschnitt beschreibt die Konfiguration des WWW-Servers gerade weit genug, um den Server in Betrieb nehmen zu können.
Eine vollständige Beschreibung der Apache-Konfiguration befindet sich im Apache Referenzhandbuch (&lt;code&gt;manual.ps&lt;/code&gt;), das Bestandteil der Serverdistribution ist.&lt;/p&gt;
&lt;h2 id=&#34;aufrufoptionen&#34;&gt;
    &lt;a href=&#34;#aufrufoptionen&#34;&gt;
	Aufrufoptionen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Der Apache WWW-Server versteht nur wenige Aufrufoptionen.
Die eigentliche Konfiguration des Servers erfolgt über Konfigurationsdateien,
und die Aufrufoptionen des Servers beschränken sich darauf, dem Server mitzuteilen, wo sich diese  Konfigurationsdateien befinden.
Die Optionen sind im Einzelnen:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;-d documentroot&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Setzt den ursprünglichen Wert der Variablen &lt;code&gt;DocumentRoot&lt;/code&gt; auf &lt;code&gt;documentroot&lt;/code&gt;.
Dies kann in der Konfigurationsdatei mit dem Kommando &lt;code&gt;DocumentRoot&lt;/code&gt; überschrieben werden.
Der Defaultwert ist &lt;code&gt;/usr/local/etc/httpd&lt;/code&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;-f config&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Führt die Kommandos in der Datei &lt;em&gt;config&lt;/em&gt; beim Start des Servers aus.
Wenn &lt;em&gt;config&lt;/em&gt; nicht mit einem &lt;code&gt;/&lt;/code&gt; beginnt, wird der Pfadname relativ zur ServerRoot interpretiert.
Der Defaultwert ist &lt;code&gt;conf/httpd.conf&lt;/code&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Server wird im Debugmodus gestartet.
Er erzeugt keine Kindprozesse und löst sich auch nicht von der Console, um in den Hintergrundmodus zu gehen.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Druckt die Versionsnummer des &lt;code&gt;httpd&lt;/code&gt; und beendet sich dann.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;-?&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Druckt eine Liste der Optionen des Servers und beendet sich dann.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Um den Server zu starten, ist es also notwendig, die benötigten Konfigurationdateien zu erzeugen.
Der Server kann dann entweder mit dem Kommando&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;~# /var/httpd/httpd -f /var/httpd/conf/httpd.conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;oder mit dem Kommando&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;~# /var/httpd/httpd -d /var/httpd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;aktiviert werden.&lt;/p&gt;
&lt;h2 id=&#34;minimale-konfigurationsdateien&#34;&gt;
    &lt;a href=&#34;#minimale-konfigurationsdateien&#34;&gt;
	Minimale Konfigurationsdateien
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Der Server liest beim Start drei Konfigurationsdateien ein.
Jede dieser Dateien kann Schlüsselworte enthalten, die die Werte bestimmter Variablen festlegen und so den Betrieb des Servers steuern.
Die Pfadnamen dieser Dateien werden wie üblich relativ zur &lt;code&gt;ServerRoot&lt;/code&gt; interpretiert, wenn sie nicht mit einem &lt;code&gt;/&lt;/code&gt; beginnen.
Standardmäßig sind dies die folgenden Dateien:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;conf/httpd.conf&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Diese Datei enthält globale Steuerparameter für den
WWW-Server.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;conf/srm.conf&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Diese Datei steuert das &amp;ldquo;Server Ressource Managment&amp;rdquo;.
Das heisst, sie legt fest, welche URLs auf welche Pfade im Dateisystem abgebildet werden,
und ob es sich bei den durch URLs referenzierten Dokumenten um statische Dateien oder um dynamisch erzeugte Dokumente handelt.
Diese Variable kann mit dem Schlüsselwort &lt;code&gt;RessourceConfig&lt;/code&gt; überschrieben werden.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;conf/access.conf&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Mit Hilfe dieser Datei können global Zugriffsrechte für bestimmte Verzeichnisse vergeben werden.
Mit dem Schlüsselwort &lt;code&gt;AccessConfig&lt;/code&gt; kann eine alternative Konfigurationsdatei bestimmt werden.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Weiterhin legt der Server drei Dateien im Verzeichnis &lt;code&gt;logs/&lt;/code&gt; an.
Einige dieser Dateien sind Logbücher, die je nach Serverlast sehr schnell sehr groß werden können.
Es ist notwendig, diese Dateien regelmäßig zu sichern und den Server danach mit einem Signal zu wecken,
damit er neue Logdateien aufsetzt. Die Dateien sind:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;logs/httpd.pid&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Diese Datei wächst nicht und braucht auch nicht gesichert zu werden.
Sie enthält in ASCII die PID des Serverprozesses.
Dadurch ist es leicht möglich, den Server mit dem Kommando&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;~# kill -HUP `cat /var/httpd/logs/httpd.pid`
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;zu wecken.
Der Hauptprozeß des Servers wird alle seine Kindprozesse von der Änderung informieren,
so daß ein einziges Signal zur Steuerung des Servers ausreichend ist.&lt;/p&gt;
&lt;p&gt;Mit dem Schlüsselwort &lt;code&gt;PidFile&lt;/code&gt; ist es möglich, diesen Pfadnamen zu ändern.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;logs/error_log&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;In dieser ständig wachsenden Datei werden alle Fehler beim Zugriff auf Komponenten des Servers mitgeloggt.
Insbesondere finden sich hier auch die Fehlerausgaben von CGI-Scripten.
Sollten solche Scripte also einmal nicht funktionieren, kann man dieser Datei die dabei entstehenden Meldungen entnehmen.
&lt;p&gt;Mit dem Schlüsselwort &lt;code&gt;ErrorLog&lt;/code&gt; kann eine andere Logdatei festgelegt werden.
Für virtuelle Hosts können unterschiedliche Logdateien bestimmt werden.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;logs/access_log&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;In dieser sehr schnell wachsenden Datei wird jeder Zugriff auf den Server geloggt.
Es ist möglich, diese Datei zur Erzeugung von Zugriffstatistiken auszuwerten.
&lt;p&gt;Mit dem Schlüsselwort &lt;code&gt;TransferLog&lt;/code&gt; kann ein anderer Dateiname festgelegt werden.
Für virtuelle Hosts können unterschiedliche Logdateien bestimmt werden.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Um den Server zu konfigurieren, kopiert man sich zweckmäßigerweise die mitgelieferten Beispiel-Konfigurationsdateien
und paßt sie für die eigene Konfiguration an:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var/httpd/conf# cp access.conf-dist access.conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var/httpd/conf# cp httpd.conf-dist httpd.conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var/httpd/conf# cp srm.conf-dist srm.conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;confhttpdconf&#34;&gt;
    &lt;a href=&#34;#confhttpdconf&#34;&gt;
	conf/httpd.conf
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die mit dem Server ausgelieferte beispielhafte Konfigurationsdatei &lt;code&gt;conf/httpd.conf&lt;/code&gt; enthält eine Reihe von Schlüsselworten zur Konfiguration des WWW-Servers.
Im Einzelnen:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Schlüsselwort legt fest, auf welchem TCP-Port der Server seine Dienste anbieten soll.
In UNIX sind die Ports mit Portnummern kleiner 1024 geschützt und nur Programmen mit Systemverwaltungsrechten zugänglich.
Der Server muss also vom Systemverwalter gestartet werden, wenn er auf dem HTTP-Standardport 80 serven soll.
&lt;p&gt;Für Server, die mit Benutzerrechten gestartet werden, hat es sich eingebürgert, den frei verfügbaren Port 8080 zu verwenden.
Die Konfigurationsdatei enthält dann eine Anweisung der Art &lt;code&gt;Port 8080&lt;/code&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;User&lt;/code&gt; und &lt;code&gt;Group&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Wenn der Server durch einen Systemverwalter gestartet wird, verwendet er die Systemverwalterrechte nur,
um sich an den angegebenen Port zu binden.
Alle anderen Dinge, insbesondere den Zugriff auf Dateien und das Starten von externen Programmen,
erledigt der Server nicht unter dieser Benutzerkennung, um böse Überraschungen zu vermeiden.
&lt;p&gt;Mit den Anweisungen &lt;code&gt;User&lt;/code&gt; und &lt;code&gt;Group&lt;/code&gt; wird der Server stattdessen auf eine Benutzer- und Gruppennummer konfiguriert,
die ungefährlicher ist.
Die Angabe dieser Werte kann numerisch in der Form &lt;code&gt;#zahl&lt;/code&gt; erfolgen, oder der Name eines Benutzers oder einer Benutzergruppe kann direkt gegeben werden.
Beispiel:&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;User nobody
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Group #60001
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;ServerAdmin&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Schlüsselwort teilt dem Server die Mailadresse der
für die Serververwaltung zuständigen Person mit. Der
Server nennt diese Adresse in Fehlermeldungen als Adresse eines
Ansprechpartners. Zukünftige Versionen des Servers werden
selbstständig Problemreports an diese Adresse senden.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;ServerRoot&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Legt das ServerRoot-Verzeichnis fest. In unserer
Beispielkonfiguration geschähe dies mit der Anweisung
&lt;code&gt;ServerRoot /var/httpd&lt;/code&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;PidFile&lt;/code&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;code&gt;ErrorLog&lt;/code&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;code&gt;TransferLog&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Diese drei Schlüsselworte bestimmen, wie bereits im
Abschnitt oben beschrieben, die Lage der verschiedenen Logdateien.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;ServerName&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Ein Webserver muss gelegentlich wissen, unter welchem kanonischen Namen er selbst anzusprechen ist.
Apache versucht, dieses Namen automatisch zu ermitteln, aber wenn dies nicht gelingt
oder wenn man sicher gehen will, ist es notwendig, dem Server
seinen eigenen Namen in der Konfigurationsdatei mitzuteilen. Das
erfolgt dann mit diesem Schlüsselwort. Der Parameter ist ein
voll qualifizierter Domainname, zum Beispiel in &lt;code&gt;ServerName white.koehntopp.de&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;confsrmconf&#34;&gt;
    &lt;a href=&#34;#confsrmconf&#34;&gt;
	conf/srm.conf
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Mit dieser Konfiguration legt der Serverbetreiber fest, wie der
Server die verschiedenen Dokumententypen behandeln soll, die auf
seinem Server verfügbar sind. Diese Datei definiert also die
Zuordnung von Dateiendungen zu MIME-Typen, die Namen von
Indexdateien für Verzeichnisse und den Umgang mit
Landessprachen und dergleichen.&lt;/p&gt;
&lt;p&gt;Minimal sollte die Datei die folgenden Anweisungen
enthalten:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;DocumentRoot&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Schlüsselwort legt die &lt;code&gt;DocumentRoot&lt;/code&gt; des Servers
fest. In unserer Beispielkonfiguration ist das: &lt;code&gt;DocumentRoot /home/www&lt;/code&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;ScriptAlias&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Schlüsselwort ist nur dann notwendig, wenn der Server in der Lage sein soll, CGI-Scripte zur dynamischen Erzeugung
von Seiten auszuführen.
Die Anweisung hat die Form&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;ScriptAlias &amp;lt;url-pfad&amp;gt; &amp;lt;realer Pfad&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;und sie verbindet den Pfad &lt;code&gt;url-pfad&lt;/code&gt; mit dem
wirklichen Pfad &lt;code&gt;realer Pfad&lt;/code&gt;, d.h. immer dann, wenn ein
Request für eine Seite unterhalb von &lt;code&gt;url-pfad&lt;/code&gt; auf dem
Server eingeht, wird das zugehörige Programm in &lt;code&gt;realer Pfad&lt;/code&gt; gestartet und muss die angeforderte Seite
berechnen.&lt;/p&gt;
&lt;p&gt;Um das CGI-Verzeichnis &lt;code&gt;/var/httpd/cgi-bin&lt;/code&gt; mit dem URL-Pfad &lt;code&gt;/cgi-bin&lt;/code&gt; zu verbinden, muss also die Anweisung&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;ScriptAlias /cgi-bin/ /var/httpd/cgi-bin/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;gegeben werden. Ein Request für die URL &lt;code&gt;/cgi-bin/dummy.pl&lt;/code&gt; startet dann das Programm
&lt;code&gt;/var/httpd/cgi-bin/dummy.pl&lt;/code&gt;, das eine Seite erzeugen muss.&lt;/p&gt;
&lt;p&gt;Es ist wichtig, daß das Verzeichnis mit den CGI-Programmen &lt;strong&gt;nicht&lt;/strong&gt; unterhalb der &lt;code&gt;DocumentRoot&lt;/code&gt; liegt.
Überlappen sich die Verzeichnisse, kann es zu seltsamen Effekten kommen,
weil der Server sich entscheiden muss, ob er das Script als Text ausliefert,
oder ob er es startet und die Ausgabe des Scriptes ausliefert.&lt;/p&gt;
&lt;p&gt;Die beispielhafte &lt;code&gt;srm.conf&lt;/code&gt; enthält weitere Anweisungen, die hier zunächst nicht behandelt werden sollen.&lt;/p&gt;
&lt;h3 id=&#34;confaccessconf&#34;&gt;
    &lt;a href=&#34;#confaccessconf&#34;&gt;
	conf/access.conf
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die Konfigurationsdatei &lt;code&gt;conf/access.conf&lt;/code&gt; regelt, wer
auf welche Dateien des Servers zugreifen darf. Es ist möglich,
einzelne Dateien oder ganze Teilbäume in der Verbreitung zu
beschränken, so daß man nur von bestimmten Rechnern aus
auf die Dateien zugreifen darf oder daß man sich als Benutzer
zunächst mit einem Passwort gegenüber dem Server
identifizieren muss, bevor man auf Seiten zugreifen kann. Auch
Kombinationen von Schutzmechanismen sind möglich.&lt;/p&gt;
&lt;p&gt;Da sich die Konfigurationsanweisungen in dieser Datei immer auf
Verzeichnisse beziehen, ist ihr Inhalt konsequent in&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;directory /pfad/*/name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/directory&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;gegliedert. Dabei ist zu beachten, daß die &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt;-Anweisungen vielleicht wie HTML-Tags
aussehen, aber keine sind. Sie müssen auf jeden Fall einzeln
in einer Zeile stehen und dürfen auch keine optionalen
Parameter wie HTML-Attribute haben. Die Pfade, die in &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt;-Anweisungen genannt werden, sind immer
physikalische Pfade des Dateisystems und keine URL-Pfade.&lt;/p&gt;
&lt;p&gt;Innerhalb eines &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt;-Abschnittes
können dann mit verschiedenen Anweisungen Optionen und
Zugriffsrechte für die in diesem Abschnitt spezifizierten
Verzeichnisse festgelegt werden.&lt;/p&gt;
&lt;p&gt;Unsere Beispielkonfiguration soll ohne weitere Erklärungen
zunächst einmal die folgenden Anweisungen enthalten:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;Directory /var/httpd/cgi-bin&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Options Indexes FollowSymLinks
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/Directory&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;Directory /home/www&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Options Indexes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  AllowOverride None
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/Directory&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;cgi-programmierung&#34;&gt;
    &lt;a href=&#34;#cgi-programmierung&#34;&gt;
	CGI-Programmierung
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Oftmals möchte man HTML-Seiten mit dynamisch erzeugtem
Inhalt haben. Solche Seiten sind nicht fest in Verzeichnissen des
Servers abgelegt, sondern werden beim Abruf durch ein Programm
erzeugt. Das erzeugende Programm muss vom Server auf eine
bestimmte Weise aufgerufen werden, damit es weiß, welche Art
von Seite es erzeugen soll und es muss seine Ausgabe auf eine
bestimmte Weise erzeugen, damit der Server diese Ausgabe als eine
WWW-Seite interpretieren kann. Die Norm, nach der das externe
Programm und der WWW-Server zusammenspielen, wird als das
&lt;em&gt;Common Gateway Interface&lt;/em&gt; (&lt;em&gt;CGI&lt;/em&gt;) bezeichnet.&lt;/p&gt;
&lt;h2 id=&#34;aktivierung-von-cgi-programmen-durch-apache&#34;&gt;
    &lt;a href=&#34;#aktivierung-von-cgi-programmen-durch-apache&#34;&gt;
	Aktivierung von CGI-Programmen durch Apache
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Grundsätzlich kennt der Apache WWW-Server vier verschiedene
Möglichkeiten, externe Programme zur Erzeugung von WWW-Seiten
einzusetzen:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;CGI-Pfade mit &lt;code&gt;ScriptAlias&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Apache sieht wie alle ernstzunehmenden WWW-Server
Möglichkeiten vor, mit denen man URL-Pfade mit
Scriptverzeichnissen verbinden kann. In Apache geschieht dies, wie
weiter oben
beschrieben, mit der Anweisung &lt;code&gt;ScriptAlias&lt;/code&gt;.
&lt;p&gt;Zugriffe auf Seiten unterhalb der durch den &lt;code&gt;ScriptAlias&lt;/code&gt;
spezifizierten URL bewirken, daß das angegebene Programm
gestartet wird und die Seite berechnet.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Programme mit der Endung &lt;code&gt;.cgi&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Anstatt CGI-Scripte in bestimmten Verzeichnissen
unterzubringen, kann Apache solche Scripte auch an einer bestimmten
Endung erkennen, unabhängig davon, in welchem Verzeichnis sie
sich befinden. Standardmäßig verwendet man für
solche Scripte die Endung &lt;code&gt;.cgi&lt;/code&gt;, aber es kann auch jede
beliebige andere noch nicht vergebene Dateiendung konfiguriert
werden.
&lt;p&gt;Verantwortlich für den Start von Scripten mit der Endung
&lt;code&gt;.cgi&lt;/code&gt; ist das Apache-Modul &lt;code&gt;mod_cgi&lt;/code&gt;. Es bewirkt,
daß alle Dateien, die über die Erkennung von
Dateiendungen mit dem MIME-Type &lt;code&gt;application/x-httpd-cgi&lt;/code&gt;
gekennzeichnet werden, nicht als statische Texte ausgeliefert
werden. Der Server versucht stattdessen die Datei als Programm zu
starten und liefert die Ausgabe des Programms an den Abrufer
zurück. Mit der Anweisung&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;AddType application/x-httpd-cgi .cgi
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;in der &lt;code&gt;conf/srm.conf&lt;/code&gt;-Konfigurationsdatei wird dem
Server mitgeteilt, welche Dateiendungen diesen MIME-Type haben. Im
Beispiel wird die Standardzuordnung definiert, die
&lt;code&gt;.cgi&lt;/code&gt;-Dateien als ausführbar markiert, aber es ist
prinzipiell möglich, andere und auch mehrere Dateiendungen zu
CGI-Endungen zu erklären. Bis auf die bequemere Installation
(kein besonderes Verzeichnis notwendig) unterscheidet sich dieses
Verfahren nicht vom Programmstart mit &lt;code&gt;ScriptAlias&lt;/code&gt;.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Server Side Includes (SSI)&lt;/dt&gt;
&lt;dd&gt;Manchmal möchte man nicht eine ganze WWW-Seite durch ein
Script berechnen lassen, sondern nur einfache Textersetzungen auf
einer Seite vornehmen oder nur Teile einer Seite von einem Script
erzeugen lassen. Solche Seiten sind ein typischer Anwendungsfall
für SSI. SSI-Dateien werden vom Server nicht unmittelbar
ausgeliefert, sondern der Server erwartet in der Datei
HTML-Kommentare. Einige, spezielle Kommentare werden vom Server als
Steueranweisungen interpretiert. Der Server ersetzt in diesem Fall
den gesamten betroffenen Kommentar durch das Ergebnis der
Steueranweisung.
&lt;p&gt;SSI wird durch das Apache-Module &lt;code&gt;mod_include&lt;/code&gt; verwaltet.
Es wird vom Server auf alle Dateien mit dem MIME-Type
&lt;code&gt;text/x-server-parsed-html&lt;/code&gt; angewendet. Wieder kann man mit der
&lt;code&gt;AddType&lt;/code&gt;-Anweisung in der Ressourcenkonfiguration
bestimmten Dateiendungen diesen MIME-Type zuordnen:&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;AddType text/x-server-parsed-html .shtml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Wie im Beispiel gezeigt, wird standardmäßig die
Dateiendung &lt;code&gt;.shtml&lt;/code&gt; verwendet, um Seiten mit SSI zu
markieren. Wenn die Servererweiterung &lt;code&gt;XBITHACK&lt;/code&gt; bei der
Übersetzung des Servers aktiviert war und in der
Ressourcenkonfiguration durch die Anweisung&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;XBitHack on
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;aktiviert ist, dann werden auch normale &lt;code&gt;.html&lt;/code&gt;-Dateien
als SSI-Dateien erkannt, sobald das &lt;code&gt;x&lt;/code&gt;-Recht für User
an der betreffenden Datei gesetzt ist.&lt;/p&gt;
&lt;p&gt;Falls die Variable auf den Wert &lt;code&gt;full&lt;/code&gt; statt auf &lt;code&gt;on&lt;/code&gt; gesetzt wird, testet Apache außerdem noch das
&lt;code&gt;x&lt;/code&gt;-Recht für Gruppen an der Datei. Ist es gesetzt, wird
ein &lt;code&gt;Last-Modified&lt;/code&gt;-Header mit dem Dateidatum erzeugt. Ist
es nicht gesetzt, wird auch kein &lt;code&gt;Last-Modified&lt;/code&gt;-Header
erzeugt. Auf diese Weise kann man das Verhalten von Caches und
Proxies auf dem Weg zum Client beeinflussen.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Server Module (AAPI)&lt;/dt&gt;
&lt;dd&gt;In besonderes komplizierten Anwendungsfällen oder wenn es
ganz besonders auf Geschwindigkeit ankommt, ist es nicht mehr
ausreichend, den Server durch externe Programme zu erweitern. In
diesem Fall muss die Erweiterung des Servers um weitere
Eigenschaften stattdessen Bestandteil des Servers selbst werden.
&lt;p&gt;Apache ist ein modularer Server, und da er im Quelltext
vorliegt, ist sehr leicht möglich, den Server durch weitere
Module zu erweitern. Module lassen sich besonders leicht
einfügen, wenn sie sich an die vom Server bereitgestellte
Programmierschnittstelle halten, das &lt;em&gt;Apache API&lt;/em&gt;. Solche
Module lassen sich außerdem auch mit dem experimentellen
Modul &lt;code&gt;mod_dld&lt;/code&gt; zur Laufzeit nachladen und ohne erneute
Übersetzung des Servers einbinden.&lt;/p&gt;
&lt;p&gt;Auch andere Server haben Modulschnittstellen, die leider
meistens zueinander inkompatibel sind. Bekannt ist vor allen Dingen
die &lt;em&gt;Netscape Server API&lt;/em&gt; zur Programmierung von Modulen
(&lt;em&gt;Plugins&lt;/em&gt;) für die Netscape Serverfamilie.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;einfache-cgi-programme&#34;&gt;
    &lt;a href=&#34;#einfache-cgi-programme&#34;&gt;
	Einfache CGI-Programme
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Einfache CGI-Programme werden über einen normalen Link
aktiviert und übernehmen keine Eingabeparameter. Sie
können aber Informationen aus anderen Datenquellen beziehen,
etwa aus den Logbuchdateien des Servers oder aus anderen Dateien
auf dem Serverrechner.&lt;/p&gt;
&lt;p&gt;Das folgende Beispiel zeigt
das einfachste CGI-Programm überhaupt. Dieses Programm tut
nichts weiter, als ein Dokument mit dem MIME-Type
&lt;code&gt;text/plain&lt;/code&gt; zu erzeugen und dann seine Ablaufumgebung
auszudrucken. Es eignet sich damit ausgezeichnet als
&lt;em&gt;Hello, World!&lt;/em&gt;-Programm und dient gleichzeitig zum Erkunden der
Ablaufumgebung für CGI-Programme:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#! /bin/sh --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Content-Type: text/plain&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Pfad:&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Aktuelles Verzeichnis:&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;UID/GID:&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;id
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Umgebungsvariablen:&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;env &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Prozessliste:&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ps alxwww
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Dieses einfache CGI-Programm ist das CGI-Äquivalent von &amp;ldquo;Hello, World&amp;rdquo;.
Zusätzlich druckt es noch Informationen über die Ablaufumgebung des Scriptes aus.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Das CGI-Programm ist in der Scriptsprache der UNIX-Shell
&lt;code&gt;/bin/sh&lt;/code&gt; geschrieben, aber jede andere Programmiersprache ist
ebenso geeignet. CGI-Programme müssen ihre Ausgabe auf der
Standardausgabe liefern und sie müssen der eigentlich
nutzbaren Ausgabe einen Absatz voranstellen, der zwingend den MIME-Typen der Ausgabe festlegt und weitere optionale Angaben
über das erzeugte Dokument enthalten darf. Dieser Absatz
muss durch eine Leerzeile vom nutzbaren Teil der Ausgabe
getrennt sein.&lt;/p&gt;
&lt;p&gt;Um das Programm ausprobieren zu können, muss es als
CGI-Programm auf dem Server installiert werden. Das bedeutet:&lt;/p&gt;
&lt;p&gt;Entweder muss es als Datei mit einem beliebigen Namen im
&lt;code&gt;cgi-bin&lt;/code&gt;-Verzeichnis des Servers installiert werden, oder es
muss als Datei mit der Endung &lt;code&gt;.cgi&lt;/code&gt; in einem
Verzeichnis der &lt;code&gt;DocumentRoot&lt;/code&gt; installiert werden. In beiden
Fällen muss die Datei als für das Betriebssystem
ausführbar installiert werden, damit der Server das Programm
starten kann.&lt;/p&gt;
&lt;p&gt;In unserer Beispielkonfiguration kann das Programm wie folgt
installiert werden:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var/httpd# cp /tmp/hello cgi-bin/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var/httpd# chmod 755 cgi-bin/hello
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Mit einem Browser kann nun die URL
&lt;code&gt;http://server/cgi-bin/hello&lt;/code&gt; abgerufen werden, um das Script zu
starten. Seine Ausgabe ist etwas länglich, aber sehr
informativ: Wir erfahren den Pfadnamen, der vom Server und von
unseren eigenen CGI-Programmen durchsucht wird, um externe
Programme zu starten, und das Script nennt uns das aktuelle
Verzeichnis, in dem unsere CGI-Programme ablaufen. Außerdem
bekommen wir mitgeteilt, mit welchen Benutzerrechten das Script
abläuft und welche Umgebungsvariablen ihm zur Verfügung
stehen. Letztere Information ist besonders aufschlussreich,
denn offenbar definiert das Common Gateway Interface eine ganze
Liste von Umgebungsvariablen, die dem externen Programm vom
WWW-Server zur Verfügung gestellt werden.&lt;/p&gt;
&lt;p&gt;Weiter unten sehen wir eine leicht
gekürzte, beispielhafte Ausgabe des Scriptes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Pfad:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/bin:/usr/bin:/usr/local/bin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Aktuelles Verzeichnis:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/var/httpd/cgi-bin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;UID/GID:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;uid=65534(nobody) gid=65535(nogroup) groups=65535(nogroup)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Umgebungsvariablen:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;DOCUMENT_ROOT=/home/www
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;GATEWAY_INTERFACE=CGI/1.1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HOSTTYPE=i386
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HTTP_ACCEPT=image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    image/png, image/tiff, multipart/x-mixed-replace, */*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HTTP_ACCEPT_LANGUAGE=de, en, fr, es, it
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HTTP_HOST=white
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HTTP_PRAGMA=no-cache
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HTTP_USER_AGENT=OmniWeb/2.0.1 OWF/1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;OSTYPE=Linux
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;PATH=/bin:/usr/bin:/usr/local/bin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;QUERY_STRING=
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;REMOTE_ADDR=193.102.57.1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;REMOTE_HOST=black
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;REQUEST_METHOD=GET
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SCRIPT_FILENAME=/var/httpd/cgi-bin/hello
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SCRIPT_NAME=/cgi-bin/hello
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SERVER_ADMIN=kris@koehntopp.de
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SERVER_NAME=white.koehntopp.de
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SERVER_PORT=80
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SERVER_PROTOCOL=HTTP/1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SERVER_SOFTWARE=Apache/1.0.3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SHELL=/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SHLVL=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;TERM=dumb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;_=/usr/bin/env
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Prozessliste:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;In der Ausgabe des &amp;ldquo;Hello, World&amp;rdquo;-Programmes ist die umfangreiche Liste der durch den Server bereitgestellten CGI-Variablen erkennbar.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Bedeutung der verschiedenen Umgebungsvariablen eines
CGI-Programmes wird folgenden Abschnitt erklärt. Die meisten Programme werten jedoch nur die
Variable &lt;code&gt;QUERY_STRING&lt;/code&gt; oder eine der (im Beispiel nicht
erzeugten) Variablen &lt;code&gt;PATH_INFO&lt;/code&gt; und
&lt;code&gt;PATH_TRANSLATED&lt;/code&gt; aus.&lt;/p&gt;
&lt;h2 id=&#34;umgebung-von-cgi-programmen&#34;&gt;
    &lt;a href=&#34;#umgebung-von-cgi-programmen&#34;&gt;
	Umgebung von CGI-Programmen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Webserver unter UNIX versorgen ihre CGI-Programme mittels
Umgebungsvariablen mit den verschiedensten Fakten über den
Aufrufer. Unter anderen Betriebssystemen werden andere Mechanismen
zur Übermittlung der Information verwendet, aber die Art und
die Namen der übermittelten Funktionen bleibt gleich.&lt;/p&gt;
&lt;h3 id=&#34;standard-variablen&#34;&gt;
    &lt;a href=&#34;#standard-variablen&#34;&gt;
	Standard-Variablen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Der Client, den der Anwender benutzt, um das CGI-Programm auf
dem Server zu aktivieren, liefert dem Server eine ganze Reihe von
Informationen, die dieser auch dem CGI-Programm selbst zur
Verfügung stellt. Das CGI-Programm kann diese Informationen
auswerten und eventuell für die Gestaltung der Seite
verwenden.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;SERVER_SOFTWARE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Name und die Versionsnummer des Servers, der das
CGI-Programm gestartet hat.  Beispiel: Apache/1.0.3&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SERVER_NAME&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Hostname des Servers, der das CGI-Programm gestartet hat.
Ist dieser Name nicht verfügbar, wird hier eine IP-Nummer
übergeben.  Beispiel: white.koehntopp.de&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SERVER_PORT&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Portnummer des Servers, der das CGI-Programm gestartet hat.
Beispiel: 80&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SERVER_ADMIN&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Mailadresse des Serveradministrators. Das CGI-Programm kann
in Notfällen Fehlermeldungen an diese Adresse mailen.
Beispiel: &lt;a href=&#34;mailto:user@example.com&#34;&gt;user@example.com&lt;/a&gt;

&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;GATEWAY_INTERFACE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Version der CGI-Spezifikation, nach diese
Umgebungsvariablen erzeugt wurden.
Beispiel: CGI/1.1&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SERVER_PROTOCOL&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Name und die Versionsnummer des Protokolls, mit dem der
Request empfangen wurde, der das CGI-Programm aktiviert hat.
Beispiel: HTTP/1.0&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;REQUEST_METHOD&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Request-Methode, die für das Starten des CGI-Programms
verantwortlich war. Diese Methode legt fest, auf welche Weise das
CGI-Programm an seine Eingabeparameter kommt.
Beispiel: &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt; oder &lt;code&gt;POST&lt;/code&gt;.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Bei jedem Datentausch zwischen einem WWW-Browser und Server
werden fast immer auch optionale Informationen in Form von
zusätzlichen Request-Headerzeilen ausgetauscht. Anstatt
für alle Eventualitäten vorauszuplanen und Header zu
definieren, hat man in der CGI-Spezifikation festgelegt, daß
solche zusätzlichen Headerzeilen in Uppercase mit dem Prefix
&lt;code&gt;HTTP_&lt;/code&gt; versehen werden sollen und an das CGI-Programm
weitergegeben werden. Wenn der Browser also die optionale
HTTP-Informationszeile &lt;code&gt;Bla: Fasel&lt;/code&gt; einliefert, dann wird dem
CGI-Programm die Umgebungsvariable &lt;code&gt;HTTP_BLA&lt;/code&gt; mit dem Wert
&lt;code&gt;Fasel&lt;/code&gt; vorbelegt übergeben.&lt;/p&gt;
&lt;p&gt;Die folgenden Variablen findet man in nahezu jeder
CGI-Anfrage:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;HTTP_REFERER&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die URL des Dokumentes, das auf das CGI-Programm verwiesen hat.
Auf dieser Seite hat der Benutzer also ein Link angeklickt, der auf
das Programm verwiesen hat, oder ein Formular abgesendet, das das
CGI-Programm aktiviert hat.
Beispiel: &lt;a href=&#34;http://www.example.com/cgistarter.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.example.com/cgistarter.html&lt;/a&gt;

&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;HTTP_HOST&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Viele Serverrechner betreiben nicht nur einen einzigen
Webserver, sondern eine ganze Palette von Servern für
unterschiedliche Anbieter unter verschiedenen Namen. Diese Variable
enthält, wenn sie vorhanden ist, den Namen, unter dem der
Server angesprochen wurde.
Beispiel: &lt;a href=&#34;https://www.example.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.example.com&lt;/a&gt;

&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;HTTP_USER_AGENT&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Typbezeichnung und Versionsnummer der Browser-Software.
Einige CGI-Programme werten diese Variable aus, um die
Fähigkeiten des Browsers zu bestimmen und je nach Bedarf die
Ausgabe anzupassen (Tabellen, Frames, Javascript, ActiveX, Java).
Beispiel: OmniWeb/2.0.1 OWF/1.0&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;HTTP_ACCEPT&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Eine Liste aller MIME-Types, die der Client als Antworttyp akzeptiert.
Beispiel: text/plain, text/html, image/*&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Und schließlich gibt es noch eine ganze Gruppe von
Variablen, die direkt Informationen über den Request
enthalten, der das CGI-Programm gestartet hat:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;PATH_INFO&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;CGI-Programme können nach dem Pfadnamen zum Aufruf des
Scriptes noch weitere Pfadkomponenten enthalten. Zum Beispiel
könnte das Beispielprogramm aus dem Beispiel oben mit der URL
&lt;code&gt;http://server/cgi-bin/hello/more/info&lt;/code&gt; aufgerufen werden.
Die Variable hält in diesem Fall dann die &amp;ldquo;überstehenden&amp;rdquo;
Komponenten des Pfades zur Auswertung durch das Script bereit.
Beispiel: &lt;code&gt;/more/info&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;PATH_TRANSLATED&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Falls das CGI-Programm mit einem verlängerten CGI-Pfad
aufgerufen wurde, kann dieser Pfad vom WWW-Server auf die
übliche Weise in einen wirklichen Dateinamen übersetzt
werden. Das Ergebnis dieser Übersetzung ist dann in dieser
Variable zu finden.
Beispiel: &lt;code&gt;/home/www/more/info&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SCRIPT_NAME&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Teil der URL, der zum Aufruf des CGI-Programmes
geführt hat, ist in dieser Variablen in URL-Form zu finden.
Beispiel: &lt;code&gt;/cgi-bin/hello&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SCRIPT_FILENAME&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Information aus &lt;code&gt;SCRIPT_NAME&lt;/code&gt; wird für das
CGI-Programm ebenfalls in wirkliche Dateinamen übersetzt
bereitgehalten.
Beispiel: &lt;code&gt;/var/httpd/cgi-bin/hello&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;QUERY_STRING&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Diese Variable enthält eine Liste von Parametern, die dem
CGI-Programm mitgegeben worden sind. Die Parameter liegen in
codierter Form vor (Siehe den folgenden Abschnitt) und müssen durch das
CGI-Programm decodiert werden, bevor sie verwendet werden
können.
Beispiel: &lt;code&gt;name=Otto+Normaluser&amp;amp;phone=441777&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;REMOTE_HOST&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Name des Rechners, der den Request gemacht hat, soweit er verfügbar ist.
Beispiel: &lt;code&gt;mahaki.koehntopp.de&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;REMOTE_ADDRESS&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die IP-Nummer des Rechners, der den Request eingeliefert hat.
Beispiel: &lt;code&gt;192.103.57.2&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;AUTH_TYPE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Methode, mit der die Useridentität in der Variablen
&lt;code&gt;REMOTE_USER&lt;/code&gt; verifiziert worden ist, falls eine
Verifikation überhaupt stattgefunden hat.
Beispiel: Basic&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;REMOTE_USER&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die verifizierte Identität des Benutzers, der den Request
eingeliefert hat, wenn eine Verifikation überhaupt
stattgefunden hat.
Beispiel: &lt;code&gt;marit&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CONTENT_TYPE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der MIME-Type der Daten, die mit einem PUT- oder POST-Request
eingeliefert worden sind.
Beispiel: &lt;code&gt;text/plain&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CONTENT_LENGTH&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Die Länge der Daten in Bytes, die mit einem PUT- oder
POST-Request eingeliefert worden sind.
Beispiel: 17321&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;apache-spezialvariablen&#34;&gt;
    &lt;a href=&#34;#apache-spezialvariablen&#34;&gt;
	Apache-Spezialvariablen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Apache stellt zusätzlich zu den im CGI-Standard definierten
Variablen noch einige zusätzliche Informationen bereit.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;DOCUMENT_ROOT&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Diese Variable enthält den Pfad zur &lt;code&gt;DocumentRoot&lt;/code&gt;
aus der Serverkonfiguration.
Beispiel: &lt;code&gt;/home/www&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;REDIRECT_...&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Apache ist in der Lage, nach Maß zugeschnittene
Fehlermeldungen zu erzeugen. Geschickterweise erzeugt man diese
Fehlermeldungen durch ein CGI-Script. Damit das richtig
funktioniert, muss Information über den alten Request
vorhanden sein, der den Fehler hervorgerufen hat. Apache stellt
also alle Variablen des alten Requests mit dem zusätzlichen
Prefix &lt;code&gt;REDIRECT_&lt;/code&gt; in der Fehlerbehandlung zur
Verfügung.
&lt;p&gt;Außerdem tauchen zwei zusätzliche neue Variablen auf,
nämlich &lt;code&gt;REDIRECT_URL&lt;/code&gt;, die URL, die den Fehler
hervorgerufen hat, und &lt;code&gt;REDIRECT_STATUS&lt;/code&gt;, der
HTTP-Statuscode, der Auskunft über die Art des Fehlers
gibt.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;zusätzliche-variablen&#34;&gt;
    &lt;a href=&#34;#zus%c3%a4tzliche-variablen&#34;&gt;
	Zusätzliche Variablen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Mit dem Schlüsselwort &lt;code&gt;PassEnv&lt;/code&gt; ist es möglich,
weitere Variablen aus der Umgebung des Serverprozesses in die
Umgebung des CGI-Scriptes weiterzugeben. Die Anweisung&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;PassEnv HOSTNAME
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;würde zum Beispiel bewirken, daß die
Umgebungsvariable &lt;code&gt;HOSTNAME&lt;/code&gt; aus der Serverumgebung auch in
CGI-Programmen sichtbar wäre, wenn sie überhaupt
definiert ist.&lt;/p&gt;
&lt;p&gt;Mit dem Schlüsselwort &lt;code&gt;SetEnv&lt;/code&gt; ist es außerdem
möglich, gezielt Variablen in der Umgebung des CGI-Programmes
zu erzeugen. Die Anweisung&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SetEnv DEBUG_ZONE parser
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;würde für alle CGI-Programme die Umgebungsvariable
&lt;code&gt;DEBUG_ZONE&lt;/code&gt; mit dem Wert &lt;code&gt;parser&lt;/code&gt; belegen. Dies ist,
wie der Name der Variablen schon andeuten soll, ausgesprochen
nützlich, um Debugging in CGI-Scripten zu aktivieren.&lt;/p&gt;
&lt;h2 id=&#34;parameterübergabe-an-cgi-programme&#34;&gt;
    &lt;a href=&#34;#parameter%c3%bcbergabe-an-cgi-programme&#34;&gt;
	Parameterübergabe an CGI-Programme
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;CGI-Programme können durch direkte Links oder durch
Formulare (siehe folgendes Kapitel)
aktiviert werden. In beiden Fällen ist es möglich, dem
gestarteten CGI-Programm Parameter mitzugeben. Für den
Programmierer des CGI-Programmes sind dabei zwei Dinge interessant:
die HTTP-&lt;em&gt;Methode&lt;/em&gt;, mit der die Daten übergeben werden,
und die &lt;em&gt;Codierung&lt;/em&gt; der übergebenen Daten.&lt;/p&gt;
&lt;h3 id=&#34;http-methoden&#34;&gt;
    &lt;a href=&#34;#http-methoden&#34;&gt;
	HTTP-Methoden
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wie die meisten Protokolle, die im Internet eingesetzt werden,
ist auch HTTP ein Protokoll, das Daten in ASCII und
zeilenorientiert übermittelt. Auf diese Weise ist ein Client
oder Server für das Protokoll schnell mit Hilfe der
C-Bibliothek programmiert, und das Programm lässt sich
auch ohne Gegenstelle schnell mit &lt;code&gt;telnet&lt;/code&gt; testen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;GET /cgi-bin/hello/more/info HTTP/1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Accept: text/html, image/gif, image/jpeg
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;User-Agent: Mozilla/2.02 (Windows; I; 32bit)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;Leerzeile&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Ein Beispiel für einen HTTP-Request: Ein Netscape-Client fordert den URL-Pfad
&lt;code&gt;/cgi-bin/hello/more/info&lt;/code&gt; an.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ein Request, den ein HTTP-Client, etwa ein WWW-Browser, an den
Server sendet, sieht beispielweise so wie oben aus. Das Schlüsselwort
&lt;code&gt;GET&lt;/code&gt; signalisiert, daß eine Seite vom WWW-Server
abgeholt werden soll, daß also in der Terminologie von HTTP
die &lt;code&gt;GET&lt;/code&gt;-Methode verwendet werden soll. Dahinter werden der
URL-Pfad und die benutzte Protokollversion angegeben.&lt;/p&gt;
&lt;p&gt;Die folgenden Zeilen des Requests bis zur ersten Leerzeile
können aus beliebig vielen Parametern bestehen, die dem
&lt;code&gt;GET&lt;/code&gt;-Request noch mitgegeben werden. Der Browser teilt dem
Server so mit, welche Datentypen er in der Antwort unterstützt
und um welche Programmversion welchen Herstellers es sich bei dem
Browser handelt. Prinzipiell ist der Request durch die
Einführung neuer Zeilen beliebig erweiterbar.&lt;/p&gt;
&lt;p&gt;Der Server beantwortet einen solchen Request wie unten gezeigt auf eine ganz
ähnliche Weise: Auch er erzeugt zunächst eine
formalisierte Antwortzeile, in der er die verwendete
Protokollversion, einen Statuscode und einen Freitext, der den
Statuscode erläutert, zurückgibt. Danach folgt wieder ein
relativ frei formatierte Headerblock, der Informationen über
das gelieferte Dokument enthält, und dann, nach einer
Leerzeile, das eigentliche Dokument.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;HTTP/1.0 200 OK
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Date: Mon, 04-Nov-1996 19:54:32 GMT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Server: Apache 1.0.3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Mime-Version: 1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Last-Modified: Mon, 04-Nov-1996 19:54:32 GMT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Content-Type: text/plain
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;Leerzeile&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Ein Beispiel für eine
HTTP-Response. Der Server beantwortet den Request zunächst mit
einem Headerblock mit Metainformationen über die
gewünschten Daten. Nach einer Leerzeile kommen dann die
angeforderten Informationen.&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&#34;die-get-methode&#34;&gt;
    &lt;a href=&#34;#die-get-methode&#34;&gt;
	Die &lt;code&gt;GET&lt;/code&gt;-Methode
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Die &lt;code&gt;GET&lt;/code&gt;-Methode kann nicht nur verwendet, um
Informationen von einem Server anzufordern, sondern sie kann
zugleich auch Informationen zum Server übertragen, falls die
angeforderte URL ein CGI-Programm bezeichnet.&lt;/p&gt;
&lt;p&gt;Eine solche URL hat die Form&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;protokoll://server/path/file/extra_daten?query_string
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Informationen aus &lt;code&gt;extra_daten&lt;/code&gt; werden dem
CGI-Programm in den Variablen &lt;code&gt;PATH_INFO&lt;/code&gt; und
&lt;code&gt;PATH_TRANSLATED&lt;/code&gt; zur Verfügung gestellt, wie weiter oben
beschrieben. Die Informationen aus dem &lt;code&gt;query_string&lt;/code&gt;
tauchen im CGI-Programm dagegen in der gleichnamigen Variablen auf.
Sie liegen in einer codierten Form vor, die als &lt;em&gt;urlencoded&lt;/em&gt;
bezeichnet wird und die im folgenden Abschnitt beschrieben wird.&lt;/p&gt;
&lt;p&gt;Daten, die in &lt;code&gt;GET&lt;/code&gt;-Methoden codiert werden, sind in der
URL sichtbar. Solche Anfragen an CGI-Programme lassen sich also in
Bookmarks oder Hotlists mit Parametern abspeichern. Das ist sehr
nützlich, wenn man Benutzern vorgefertigte Anfragen an
Suchmaschinen oder andere Roboter präsentieren möchte.
Solche URLs können aber sehr lang und sehr hässlich
werden, wenn viele Parameter zu übergeben sind. Für diese
Zwecke ist die im Folgenden beschriebene &lt;code&gt;POST&lt;/code&gt;-Methode
besser geeignet.&lt;/p&gt;
&lt;h4 id=&#34;die-post-methode&#34;&gt;
    &lt;a href=&#34;#die-post-methode&#34;&gt;
	Die &lt;code&gt;POST&lt;/code&gt;-Methode
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Die &lt;code&gt;POST&lt;/code&gt;-Methode sendet die Parameter für das
CGI-Programm in einer gesonderten Übertragung an den Server.
Die Daten werden für das Programm zur Standardeingabe. Da die
Daten nicht Bestandteil der URL sind, besteht das Problem der zu
langen Eingaben hier nicht. Auf der anderen Seite ist es nicht
möglich, &lt;code&gt;POST&lt;/code&gt;-Anfragen mit Parametern in Hotlists zu
speichern. Die übertragenen Daten sind auch hier wieder &lt;em&gt;urlencoded&lt;/em&gt;,
obwohl es prinzipiell nicht unbedingt notwendig
wäre.&lt;/p&gt;
&lt;h3 id=&#34;url-encoding&#34;&gt;
    &lt;a href=&#34;#url-encoding&#34;&gt;
	URL-Encoding
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die Daten, die einem CGI-Programm übergeben werden, sind
unabhängig von der verwendeten Transfermethode in jedem Fall
urlencoded gesendet. Die Codierung wurde notwendig, weil man vor
der Erfindung der &lt;code&gt;POST&lt;/code&gt;-Methode mehrere Variablen mit
Zeichen aller Art an den Server senden wollte und die Daten dazu in
die mittels eines &lt;code&gt;GET&lt;/code&gt; angeforderte URL eincodiert werden
mussten. Eine solche URL darf bestimmte Zeichen nicht
enthalten: Unter anderem kann eine URL keine Leerzeichen
enthalten.&lt;/p&gt;
&lt;p&gt;Die Trennung zwischen eigentlicher URL und zusätzlichen
Daten für einen &lt;code&gt;QUERY_STRING&lt;/code&gt; erfolgt wie oben schon
angedeutet mit einem Fragezeichen (&lt;code&gt;?&lt;/code&gt;). Die Daten im
&lt;code&gt;QUERY_STRING&lt;/code&gt; können aus mehreren Feldern der Form
&lt;code&gt;name=wert&lt;/code&gt; bestehen. Die einzelnen Felder werden durch
Und-Zeichen (&lt;code&gt;&amp;amp;&lt;/code&gt;) voneinander getrennt. Ein &lt;code&gt;QUERY_STRING&lt;/code&gt;
kann also so aussehen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;name1=wert1&amp;amp;name2=wert2&amp;amp;name3=wert3...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Um jetzt innerhalb eines Strings in urlencoding trotzdem
Fragezeichen, Undzeichen und andere Sonderzeichen verwenden zu
können, bedient man sich folgender Ersetzungsregeln:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Leerzeichen werden durch Pluszeichen (&lt;code&gt;+&lt;/code&gt;) dargestellt.
Der String &amp;ldquo;Dies ist ein Test&amp;rdquo; wird also zu &amp;ldquo;Dies+ist+ein+Test&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Andere Zeichen, die in einer URL nicht mehr vorkommen
dürfen, werden durch das Zeichen Prozent (%) gefolgt vom
zweistelligen hexadezimalen Zeichencode des Zeichens dargestellt.
Der String &amp;ldquo;#$%&amp;rdquo; wird also zu &amp;ldquo;%23%24%25&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jedes CGI-Programm muss in irgendeiner Form Funktionen zum
Decodieren von Daten enthalten, die urlencoded vorliegen.&lt;/p&gt;
&lt;h1 id=&#34;formulare-mit-html&#34;&gt;
    &lt;a href=&#34;#formulare-mit-html&#34;&gt;
	Formulare mit HTML
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Natürlich ist es möglich, Eingaben für
CGI-Programme zusammenzustellen, indem man von Hand einen
&lt;code&gt;GET&lt;/code&gt;-Request zusammenbaut. Schöner und bunter erzeugt man
solche Requests jedoch mit HTML-Formularen, den &lt;code&gt;FORMS&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;der-form-tag&#34;&gt;
    &lt;a href=&#34;#der-form-tag&#34;&gt;
	Der &lt;code&gt;&amp;lt;FORM&amp;gt;&lt;/code&gt;-Tag
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Man kann Teile einer HTML-Seite zu Formularen erklären,
indem man sie in die speziellen Tags &lt;code&gt;&amp;lt;FORM&amp;gt;&lt;/code&gt; und
&lt;code&gt;&amp;lt;/FORM&amp;gt;&lt;/code&gt; einschließt. Innerhalb dieses Bereiches
dürfen dann zusätzliche Tags verwendet werden, um
Bedienelemente und Eingabefelder zu definieren. Eine einzige
HTML-Seite kann mehrere Forms enthalten, und diese verschiedenen
Forms können unterschiedliche CGI-Programme starten, wenn dies
notwendig sein sollte.&lt;/p&gt;
&lt;p&gt;Der &lt;code&gt;&amp;lt;FORM&amp;gt;&lt;/code&gt;-Tag muss in jedem Fall ein
&lt;code&gt;ACTION=&lt;/code&gt;-Attribut haben. Dieses Attribut gibt die URL eines
CGI-Programmes an, das aktiviert werden soll, wenn das Formular
abgeschickt wird. Optional kann der &lt;code&gt;&amp;lt;FORM&amp;gt;&lt;/code&gt;-Tag noch
mit einem Attribut &lt;code&gt;METHOD=&lt;/code&gt; ausgezeichnet werden, das die
Methode der Parameterübergabe spezifiziert. Mögliche
Werte für diese Methode sind &lt;code&gt;GET&lt;/code&gt; oder &lt;code&gt;POST&lt;/code&gt;.
Fehlt die Angabe einer Methode, wird &lt;code&gt;GET&lt;/code&gt; angenommen.
Das folgende Beispiel zeigt ein
leeres Formular, das unser Beispielprogramm &lt;code&gt;hello&lt;/code&gt; aufrufen
soll.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Testformular&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;h1&amp;gt;Testformular&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;form action=&amp;#34;http://server/cgi-bin/hello&amp;#34; method=&amp;#34;get&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Hier Formulardaten einfügen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Dieses leere Formular ist der
Ausgangspunkt für die Gestaltung von HTML-Seiten mit
Formularen.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;der-input-tag&#34;&gt;
    &lt;a href=&#34;#der-input-tag&#34;&gt;
	Der &lt;code&gt;&amp;lt;INPUT&amp;gt;&lt;/code&gt;-Tag
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Innerhalb des Formularteils einer HTML-Seite kann normaler
HTML-Code stehen. Außerdem ist eine Reihe von
zusätzlichen Tags erlaubt, die die Bedienelemente des
Formulars definieren. Der vielseitigste Tag zur Definition dieser
Bedienelemente ist &lt;code&gt;&amp;lt;INPUT&amp;gt;&lt;/code&gt;. Mit ihm lassen sich
außer Feldern zur Eingabe von Texten und Paßworten auch
Check- und Radiobuttons erzeugen. Außerdem kann er versteckte
Eingabefelder definieren und Dateiauswahlboxen zum Upload von
Dateien auf den Server starten.&lt;/p&gt;
&lt;h3 id=&#34;text--und-paßwortfelder&#34;&gt;
    &lt;a href=&#34;#text--und-pa%c3%9fwortfelder&#34;&gt;
	Text- und Paßwortfelder
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die Formen des &lt;code&gt;&amp;lt;INPUT&amp;gt;&lt;/code&gt;-Tags zur Erzeugung von
Text- und Paßwortfeldern sind identisch. Die Tags werden vom
Browser auch identisch dargestellt. Der einzige Unterschied ist,
daß ein Textfeld die Benutzereingaben anzeigt, während
ein Paßwortfeld sie zwar aufnimmt, aber die Eingabe verbirgt.
&lt;strong&gt;Warnung:&lt;/strong&gt; Ein Paßwortfeld verbirgt die Daten zwar bei
der Eingabe, aber der Transport über das Internet erfolgt
offen und unverschlüsselt, wenn nicht besondere Vorkehrungen
zur sicheren Kommunikation getroffen werden.&lt;/p&gt;
&lt;p&gt;Die volle Form eines &lt;code&gt;&amp;lt;INPUT&amp;gt;&lt;/code&gt;-Tags lautet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type={feldtyp} name={variablenname} 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       value={defaultwert} size={feldbreite} maxlength={eingabelänge}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Bis auf die Felder &lt;code&gt;TYPE=&lt;/code&gt; und &lt;code&gt;NAME=&lt;/code&gt; sind die
Attribute des Tags optional. Sie bedeuten im Einzelnen:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;TYPE=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Typ des Feldes bestimmt das Aussehen des Kontrollelementes
auf der HTML-Seite. Er kann für die hier diskutierten
Eingabefelder entweder &lt;code&gt;TEXT&lt;/code&gt; oder &lt;code&gt;PASSWORD&lt;/code&gt;
sein.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;NAME=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Der Name des Feldes bestimmt den Namen der Variablen, die
später dem CGI-Programm übergeben wird. Der Name dieser
Variablen ist nicht frei wählbar, sondern wird vom
Programmierer des CGI-Programmes festgelegt. Es ist sehr wichtig,
hier Groß- und Kleinschreibung des Namens genau zu
beachten.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;VALUE=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Wenn das optionale Attribut &lt;code&gt;VALUE=&lt;/code&gt; vorhanden und mit
einem Wert belegt ist, wird dieser Wert als Defaultwert des Feldes
vorgegeben. Fehlt das Attribut, ist das Eingabefeld zu Beginn
leer.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;SIZE=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Attribut legt fest, wie viele Zeichen Breite das
Eingabefeld am Bildschirm haben soll. Der Defaultwert ist 20
Zeichen.
Ältere CGI-Formulare haben die Form &lt;code&gt;SIZE=x,y&lt;/code&gt;
verwendet, um mehrzeilige Eingabefelder zu erzeugen. Das ist zwar
immer noch prinzipiell möglich, aber der weiter unten
diskutierte Tag &lt;code&gt;&amp;lt;TEXTAREA&amp;gt;&lt;/code&gt; bietet sehr viel bessere
Editiermöglichkeiten.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;MAXLENGTH=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Attribut legt fest, wie lang die Eingabe im Textfeld
wirklich sein darf. Dies ist unabhängig von der mit
&lt;code&gt;SIZE=&lt;/code&gt; festgelegten sichtbaren Breite des Textfeldes.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Die folgende Abbildung zeigt
das mögliche Aussehen eines &lt;code&gt;&amp;lt;INPUT TYPE=&amp;quot;text&amp;quot;&amp;gt;&lt;/code&gt;-Tags.&lt;/p&gt;
&lt;p&gt;Source:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;text&amp;#34; value=&amp;#34;info&amp;#34; size=&amp;#34;23&amp;#34; name=&amp;#34;zeile&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Aussehen:
&lt;input type=&#34;text&#34; value=&#34;info&#34; size=&#34;23&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ein Beispiel mit einem &lt;code&gt;&amp;lt;INPUT TYPE=&amp;quot;text&amp;quot;&amp;gt;&lt;/code&gt;-Tag.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;check--und-radioboxes&#34;&gt;
    &lt;a href=&#34;#check--und-radioboxes&#34;&gt;
	Check- und Radioboxes
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wenn man dem Benutzer keine Eingabe in freier Form erlauben
möchte, bietet es sich für kleine Mengen
auszuwählender Optionen an, je nach Art der Auswahl entweder
Checkboxen oder Radioboxen zu definieren.&lt;/p&gt;
&lt;p&gt;Checkboxen sind kleine Kästchen, die der Benutzer ankreuzen
kann und die eine Option entweder ein- oder ausschalten. Radioboxen
bieten dagegen eine Eins-aus-n-Auswahl an: Unter einer Menge von
Optionen ist nur genau eine auswählbar.&lt;/p&gt;
&lt;p&gt;In beiden Fällen sieht der &lt;code&gt;&amp;lt;INPUT&amp;gt;&lt;/code&gt;-Tag zur
Erzeugung dieser Auswahl so aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type={typ} name={variablenname} value={wert} checked&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Außer dem Attribut &lt;code&gt;CHECKED&lt;/code&gt; sind alle Attribute
dieses Tags vorgeschrieben und dürfen nicht weggelassen
werden. Sie bedeuten:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;TYPE=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Attribut ist entweder &lt;code&gt;CHECKBOX&lt;/code&gt; oder &lt;code&gt;RADIO&lt;/code&gt; und legt damit den Typ des Knopfes fest.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;NAME=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Attribut bestimmt wie immer den Namen der Variable, die dem CGI-Programm übergeben wird.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;VALUE=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses Attribut ist im Gegensatz zu &lt;code&gt;TEXT&lt;/code&gt;-Eingaben &lt;strong&gt;nicht&lt;/strong&gt; optional.
Ist die entsprechende Box selektiert, wird die Eingabevariable des CGI-Programmes
mit dem hier angegebenen Wert belegt, sonst ist sie leer.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;CHECKED&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Dieses optionale Attribut markiert den Defaultwert der Box. Ist es vorhanden, erscheint die Box angeklickt.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Das folgende Beispiel zeigt das mögliche Aussehen dieser Tags.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;checkbox&amp;#34; value=&amp;#34;doit&amp;#34; name=&amp;#34;check1&amp;#34;&amp;gt;A
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;checkbox&amp;#34; value=&amp;#34;again&amp;#34; name=&amp;#34;check2&amp;#34; checked&amp;gt;B
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;radio&amp;#34; value=&amp;#34;eins&amp;#34; name=&amp;#34;radio1&amp;#34;&amp;gt;A
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;radio&amp;#34; value=&amp;#34;zwei&amp;#34; name=&amp;#34;radio1&amp;#34;&amp;gt;B
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;radio&amp;#34; value=&amp;#34;drei&amp;#34; name=&amp;#34;radio1&amp;#34; checked&amp;gt;C
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;input type=&#34;checkbox&#34; value=&#34;doit&#34; name=&#34;check1&#34;&gt;A
&lt;input type=&#34;checkbox&#34; value=&#34;again&#34; name=&#34;check2&#34; checked&gt;&lt;/p&gt;
&lt;p&gt;&lt;input type=&#34;radio&#34; value=&#34;eins&#34; name=&#34;radio1&#34;&gt;A
&lt;input type=&#34;radio&#34; value=&#34;zwei&#34; name=&#34;radio1&#34;&gt;B
&lt;input type=&#34;radio&#34; value=&#34;drei&#34; name=&#34;radio1&#34; checked&gt;C&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ein Beispiel mit Radio- und Checkboxes.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ein wichtiger Unterschied zwischen Checkboxen und Radioboxen
existiert: Checkboxen müssen immer verschiedene
&lt;code&gt;NAME=&lt;/code&gt;-Attribute haben, denn jede Checkbox existiert für
sich alleine und unabhängig von anderen Checkboxen.&lt;/p&gt;
&lt;p&gt;Radioboxen treten dagegen in Gruppen auf und innerhalb einer
Gruppe von Radioboxen kann immer nur eine selektiert sein. Eine
Gruppe von Radioboxen wird durch gleiche &lt;code&gt;NAME=&lt;/code&gt;-Attribute
definiert.&lt;/p&gt;
&lt;h3 id=&#34;versteckte-eingabefelder&#34;&gt;
    &lt;a href=&#34;#versteckte-eingabefelder&#34;&gt;
	Versteckte Eingabefelder
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Mit einem Eingabefeld vom Typ &lt;code&gt;HIDDEN&lt;/code&gt; lassen sich versteckte Eingabefelder anlegen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;INPUT TYPE=&amp;#34;HIDDEN&amp;#34; NAME={variablennamen} VALUE={wert}&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Solche Eingabefelder sind nicht sichtbar und auch nicht
veränderbar. Sie werden in jedem Fall unverändert an das
CGI-Programm übergeben. Versteckte Eingabefelder sind
nützlich, wenn man ein CGI-Programm mit mehreren Funktionen
hat, bei dem über ein Eingabefeld eine Funktion
ausgewählt werden muss, oder wenn man einen Zustand in
einer dynamisch erzeugten Seite über eine Transaktion hinweg
retten muss.&lt;/p&gt;
&lt;h3 id=&#34;dateiupload&#34;&gt;
    &lt;a href=&#34;#dateiupload&#34;&gt;
	Dateiupload
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Es ist möglich, über ein Eingabefeld vom Typ
&lt;code&gt;FILE&lt;/code&gt; ganze Dateien auf den WWW-Server zu uploaden. Es ist
dringend angeraten, für eine solche Transaktion ein Formular
mit der Methode &lt;code&gt;POST&lt;/code&gt; zu verwenden. Außerdem
muss dem Formular mit dem Attribut
&lt;code&gt;ENCTYPE=multipart/form-data&lt;/code&gt; klargemacht werden, auf welche
Weise der Upload zu geschehen hat.
&lt;em&gt;Hinweis:&lt;/em&gt; &lt;code&gt;FILE&lt;/code&gt; ist eine Netscape-Erweiterung.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;FORM ACTION=&amp;#34;URL&amp;#34; METHOD=&amp;#34;POST&amp;#34; ENCTYPE=&amp;#34;multipart/form-data&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Dateinamen angeben: &amp;lt;INPUT TYPE=&amp;#34;FILE&amp;#34; NAME=&amp;#34;upload&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/FORM&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;absenden-und-rücksetzen&#34;&gt;
    &lt;a href=&#34;#absenden-und-r%c3%bccksetzen&#34;&gt;
	Absenden und Rücksetzen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Mit den gezeigten Tags lassen sich zwar unfangreiche Formulare
erzeugen, aber diese Formulare können noch nicht in Betrieb
genommen werden, denn es fehlt ein Knopf zum Absenden des
Formulars. HTML sieht für diesen Zweck Eingabefelder vom Typ
&lt;code&gt;SUBMIT&lt;/code&gt; vor und bietet außerdem noch Eingabefelder
vom Typ &lt;code&gt;RESET&lt;/code&gt; an, mit dem sich ein Formular auf den
Startzustand zurücksetzen lässt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;INPUT TYPE=&amp;#34;SUBMIT&amp;#34; VALUE=&amp;#34;Formular absenden&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;INPUT TYPE=&amp;#34;RESET&amp;#34; VALUE=&amp;#34;Eingabe löschen&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Jedes Formular muss einen &lt;code&gt;SUBMIT&lt;/code&gt;-Button haben, und
ein Formular kann nur einen &lt;code&gt;SUBMIT&lt;/code&gt;-Button haben.
Das folgende Beispiel zeigt
mögliche Darstellungen dieser Knöpfe.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;Formular absenden&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;input type=&amp;#34;reset&amp;#34; value=&amp;#34;Eingabe löschen&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;input type=&#34;submit&#34; value=&#34;Formular absenden&#34; /&gt;
&lt;input type=&#34;reset&#34; value=&#34;Eingabe löschen&#34; /&gt;
&lt;p&gt;&lt;em&gt;Ein Beispiel mit &lt;code&gt;SUBMIT&lt;/code&gt; und &lt;code&gt;RESET&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;der-textarea-tag&#34;&gt;
    &lt;a href=&#34;#der-textarea-tag&#34;&gt;
	Der &lt;code&gt;&amp;lt;TEXTAREA&amp;gt;&lt;/code&gt;-Tag
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Felder zur freien Texteingabe lassen sich mit dem Tag
&lt;code&gt;&amp;lt;TEXTAREA&amp;gt;&lt;/code&gt; definieren. Der Tag hat diese Form:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;TEXTAREA NAME={variablenname} ROWS={zeilen} COLS={spalten}&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Textvorgabe
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/TEXTAREA&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Attribute &lt;code&gt;ROWS=&lt;/code&gt; und &lt;code&gt;COLS=&lt;/code&gt; sind optional.
Die Attribute bedeuten:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;NAME=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Das Attribut legt wie üblich den Namen der CGI-Variablen  fest.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;ROWS=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Das Attribut bestimmt die Höhe des Eingabefeldes in Zeilen.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;COLS=&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Das Attribut bestimmt die Breite des Eingabefeldes in Spalten.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Das Ergebnis dieses Tags sieht dann möglicherweise so aus
wie im folgenden Beispiel:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;textarea name=&amp;#34;text&amp;#34; rows=5 cols=20&amp;gt;Beispieltext&amp;lt;/textarea&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;textarea name=&#34;text&#34; rows=5 cols=20&gt;Beispieltext&lt;/textarea&gt;
&lt;p&gt;&lt;em&gt;Ein Beispiel mit &lt;code&gt;TEXTAREA&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Es ist angeraten, &lt;code&gt;&amp;lt;TEXTAREA&amp;gt;&lt;/code&gt; zusammen mit der
Methode &lt;code&gt;POST&lt;/code&gt; zu verwenden.&lt;/p&gt;
&lt;h2 id=&#34;der-select-tag&#34;&gt;
    &lt;a href=&#34;#der-select-tag&#34;&gt;
	Der &lt;code&gt;&amp;lt;SELECT&amp;gt;&lt;/code&gt;-Tag
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Größere Auswahlen von vorgegebenen Werten erzeugt man
wegen des großen Platzverbrauches und im Interesse der
Übersichtlichkeit besser nicht mit Checkboxen oder
Radiobuttons, sondern mit dem &lt;code&gt;&amp;lt;SELECT&amp;gt;&lt;/code&gt;-Tag. Je nach
Konfiguration erzeugt dieser Tag ein Popup-Menü oder eine
Auswahlbox für Mehrfachauswahlen.&lt;/p&gt;
&lt;p&gt;Das Format dieses Tags ist&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;SELECT NAME={variablenname} SIZE={größe} MULTIPLE&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;OPTION SELECTED VALUE={wert}&amp;gt;Option 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;OPTION ...&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;/SELECT&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Der &lt;code&gt;&amp;lt;SELECT&amp;gt;&lt;/code&gt;-Tag erfordert nur die Angabe des
Variablennamens mit &lt;code&gt;NAME=&lt;/code&gt;, die anderen Attribute sind
optional. Ein &lt;code&gt;&amp;lt;SELECT&amp;gt;&lt;/code&gt;-Container kann beliebig viele
&lt;code&gt;&amp;lt;OPTION&amp;gt;&lt;/code&gt;-Tags enthalten. Diese können optional
&lt;code&gt;SELECTED&lt;/code&gt; sein und es kann optional ein &lt;code&gt;VALUE=&lt;/code&gt;
festgelegt werden, mit dem die Variable belegt wird, wenn dieses
Element ausgewählt ist.&lt;/p&gt;
&lt;p&gt;Wenn das optionale Attribut &lt;code&gt;MULTIPLE&lt;/code&gt; angegeben ist, ist
die Mehrfachauswahl von Optionen möglich.&lt;/p&gt;
&lt;h1 id=&#34;perl&#34;&gt;
    &lt;a href=&#34;#perl&#34;&gt;
	Perl
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;CGI-Programme können in jeder beliebigen Programmiersprache
geschrieben werden, solange sie in der Lage ist, einen
&lt;code&gt;QUERY_STRING&lt;/code&gt; zu decodieren. Programmiersprachen, die eine
ausgereifte Stringbehandlung und eine automatische
Speicherverwaltung haben, sind besonders geeignet, denn
CGI-Programme benutzen diese Spracheigenschaften meistens sehr
intensiv. Ein Datenbankinterface oder andere Möglichkeiten,
große Datenmengen zu durchsuchen, sind ein zusätzliches
Plus, denn oft müssen CGI-Programme vorhandene Daten für
die Darstellung im Web aufbereiten.&lt;/p&gt;
&lt;p&gt;Die Programmiersprache Perl ist besonders geeignet zur
Programmierung von CGI-Scripten, denn sie macht gerade die
Bearbeitung von Texten und Dateien besonders einfach.
Ursprünglich war Perl eine Sprache zur Reportgenerierung aus
beliebig formatierten Systemlogbüchern. Daher stammen Perls
umfangreiche Einbaufunktionen zum Suchen und Ersetzen von Texten
und zur Formatierung von Reports. Die Weiterentwicklung hat Perl zu
einem sehr mächtigen Werkzeug zur Systemprogrammierung und -steuerung in UNIX gemacht: Gerade die Systemverwalter
größerer Installationen wissen Perl zu nutzen, um
Wartungsabläufe auf ihren Systemen zu automatisieren. Auch die
weite Verfügbarkeit von Perl auf praktisch allen Plattformen,
die ausreichend Speicher zur Verfügung stellen, macht die
Sprache für diese Zwecke interessant.&lt;/p&gt;
&lt;p&gt;Mit dem Aufkommen des World Wide Web hat Perl eine
Leistungsfähigkeit als Sprache zur schnellen Entwicklung von
CGI-Programmen demonstriert. Ein sehr großer Teil aller
CGI-Programme ist zunächst als Perl-Script entwickelt worden.
Oft ist die Leistung diesr Scripte schon ausreichend, so daß
eine Portierung in eine compilierte Sprache sich erübrigt.&lt;/p&gt;
&lt;h2 id=&#34;einfache-perl-programme&#34;&gt;
    &lt;a href=&#34;#einfache-perl-programme&#34;&gt;
	Einfache Perl-Programme
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das berüchtigte &amp;ldquo;Hello, World!&amp;quot;-Programm sieht in Perl so
aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, World\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Es sieht aus wie eine Kreuzung zwischen einem Shellscript und
einem C-Programm. In der Tat ist Perl eine interpretierte Sprache,
denn Perlprogramme müssen nicht compiliert werden, sondern
können wie Shellscripte direkt aufgerufen werden. Genau wie
bei UNIX-Shellscripten gibt die erste Zeile des Programms an,
daß es sich um ein Script handelt und unter welchem Pfad der
Interpreter für diese Scripte zu finden ist. Für das
Script selbst ist eine Zeile, die mit einem &lt;code&gt;#&lt;/code&gt; beginnt, ein
Kommentar, so daß das Script selbst seinen eigenen Aufruf als
Kommentar interpretiert.&lt;/p&gt;
&lt;p&gt;Perlprogramme sind jedoch schneller als Shell-Scripte, denn der
Interpreter übersetzt das Programm beim Aufruf in eine interne
Form und bestimmt auch schon die Adressen der verschiedenen
Funktionen und Variablen. In der Tat steht ein Perlprogramm einem
C-Programm in der Geschwindigkeit nicht viel nach. Seine
Ausführungsgeschwindigkeit ist der von P-Code vergleichbar,
wie ihn einige Microsoft-Compiler zu Speicherersparniszwecken
erzeugen.&lt;/p&gt;
&lt;p&gt;Die Anweisung &lt;code&gt;print&lt;/code&gt; druckt ihr Argument, einen String
nach den Konventionen von C. Wie in C werden Anweisungen in Perl
mit einem Semikolon beendet.&lt;/p&gt;
&lt;h2 id=&#34;benutzereingaben-lesen&#34;&gt;
    &lt;a href=&#34;#benutzereingaben-lesen&#34;&gt;
	Benutzereingaben lesen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die nächste Stufe der Komplexität nach &amp;ldquo;Hello,
World!&amp;rdquo; besteht in der Regel darin, den Namen der zu
grüßenden Person einzulesen und diese Person namentlich
zu begrüßen. Das erfordert die Verwendung von
Operationen zur Eingabe von Daten und natürlich Variablen.&lt;/p&gt;
&lt;p&gt;In Perl gibt es nur einen Typ von Variablen. Sie können
entweder Strings, Integer oder Fließkommazahlen speichern und
sie müssen nicht vereinbart werden. Perl-Variablen können
jedoch in Form von einfachen Werten (&lt;em&gt;Skalaren&lt;/em&gt;), numerisch
indizierten Feldern (&lt;em&gt;Arrays&lt;/em&gt;) oder beliebig indizierten
Tabellen (&lt;em&gt;assoziativen Feldern, Hashtables&lt;/em&gt;) auftreten.
Skalare werden durch das Zeichen Dollar (&lt;code&gt;$&lt;/code&gt;)
gekennzeichnet, so daß &lt;code&gt;$name&lt;/code&gt; eine skalare Variable
mit dem Namen &lt;code&gt;name&lt;/code&gt; bezeichnet. Diese Variable wird ins
Leben gerufen, indem ihr einfach ein Wert zugewiesen wird.&lt;/p&gt;
&lt;p&gt;Um nach einem Namen zu fragen, muss ein Prompt ausgegeben
werden und auf irgendeine Weise eine Eingabe eingelesen werden. Den
Prompt können wir bereits drucken, mit &lt;code&gt;print&lt;/code&gt;. Eine
Eingabe einzulesen, ist ebenfalls sehr einfach, denn wie in C
stehen uns die vordefinierten Filehandles &lt;code&gt;&amp;lt;STDIN&amp;gt;&lt;/code&gt;,
&lt;code&gt;&amp;lt;STDOUT&amp;gt;&lt;/code&gt; und &lt;code&gt;&amp;lt;STDERR&amp;gt;&lt;/code&gt; zur
Verfügung. Perl ist auf Stringverarbeitung optimiert: Um eine
Zeile der Eingabe einzulesen, genügt es, einer Variablen das
Filehandle zuzuweisen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Wie ist Ihr Name? &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Das Ergebnis ist, daß der Skalar &lt;code&gt;$name&lt;/code&gt; eine
Eingabezeile inklusive des Zeilenendezeichens enthält. Wir
können dieses letzte Zeichen abschneiden, indem wir die
Funktion &lt;code&gt;chop()&lt;/code&gt; verwenden, die das letzte Zeichen eines
Strings zurückliefert und als Seiteneffekt den String um
dieses Zeichen kürzt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;chop($name);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Wie in Shell auch können Variablen in Stringkonstanten
verwendet werden: Sie werden vor der Ausgabe durch ihren Wert
ersetzt:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, $name!\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Und wie in Shell auch muss das Dollarzeichen in einem
String durch einen Backslash geschützt werden, wenn es
ausgegeben werden soll.&lt;/p&gt;
&lt;p&gt;Hier noch einmal das ganze Programm:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Wie ist Ihr Name? &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;chop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, $name!\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;variablen-und-konstanten&#34;&gt;
    &lt;a href=&#34;#variablen-und-konstanten&#34;&gt;
	Variablen und Konstanten
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;notation-von-skalaren&#34;&gt;
    &lt;a href=&#34;#notation-von-skalaren&#34;&gt;
	Notation von Skalaren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wie bereits erklärt, unterscheidet Perl nicht nach
verschiedenen Datentypen, und Variablen müssen nicht
vereinbart werden. Einer skalaren Variable kann so ziemlich jeder
Wert zugewiesen werden, der sich in Perl darstellen
lässt. Das können Zahlen wie 42 oder 3.1415926e00
sein oder Zeichenketten beliebiger Länge. Anders als Shell hat
Perl keine Probleme mit binären Zeichen in Strings, ja nicht
einmal Nullbytes machen Schwierigkeiten. Es ist kein Problem, in
Perl Binärprogramme in Strings einzulesen, zu patchen und
wieder zurückzuschreiben.&lt;/p&gt;
&lt;p&gt;Perl wandelt skalare Werte intern automatisch in Zeichenketten
oder in Fließkommazahlen um, je nachdem, welche Art von
Operation mit dem Wert durchgeführt wird. Die Sprache kennt
keine Ganzzahloperationen und arbeitet auch intern niemals mit
ganzen Zahlen, sondern immer mit doppelt genauen
Fließkommazahlen. Zahlen können in Perl wie in C notiert
werden, die folgende Abbildung
gibt einen Überblick.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Format&lt;/th&gt;
          &lt;th&gt;Notation&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Fließkomma&lt;/td&gt;
          &lt;td&gt;1.24&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;7.24e17&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Ganzzahl&lt;/td&gt;
          &lt;td&gt;17&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Ganzzahl (oktal)&lt;/td&gt;
          &lt;td&gt;0377&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Ganzzahl (hex)&lt;/td&gt;
          &lt;td&gt;0xff&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;Zahlenformate in Perl.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wie in der UNIX-Shell kann und muss man auch in Perl
gelegentlich Zeichenketten in Anführungszeichen
einschließen, etwa wenn sie Leerzeichen oder Sonderzeichen
enthalten. In jedem Fall kann man einzelnen Sonderzeichen ihre
Sonderbedeutung nehmen, indem man ihnen einen Backslash
voranstellt. Das gilt natürlich auch für den Backslash
(und die verschiedenen Sorten Anführungszeichen) selbst.&lt;/p&gt;
&lt;p&gt;Einfache Anführungszeichen wirken so, als sei jedes
einzelne Zeichen in der Zeichenkette von einem Backslash
geschützt. Innerhalb der Zeichenkette darf jedes beliebige
Zeichen auftauchen, auch Zeilenumbrüche, wenn sich die
Zeichenkette über mehrere Zeilen erstreckt. Beispiele:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;Hello, World!&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;Don\&amp;#39;t do that, Dave!&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# Der Leerstring.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;Dies ist der Backslash: \\.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;multiline
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;string&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Doppelte Anführungszeichen funktionieren eher so wie
Strings in Shell und C: Innerhalb solcher Zeichenketten werden
Variablen ersetzt, und einige Sonderzeichen können durch
Backslash-Sequenzen notiert werden (siehe die folgende Tabelle).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Aufwachen!\007&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Spalte1\tSpalte2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Zeichen&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Bedeutung&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;\n&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Newline&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\r&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Return&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\t&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Tab&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\f&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Formfeed&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\b&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Backspace&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\v&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Vertical Tab&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\a&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Bell&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\e&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Escape&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\007&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Zeichen mit dem oktalen Zahlencode 7&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0x7f&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Zeichen mit dem hex Zahlencode 0x7f&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\cC&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Controlzeichen, hier Control-C&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Backslash&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\l&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Folgendes Zeichen in Kleinschrift wandeln&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\L&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Alle folgenden Zeichen bis \E in Kleinschrift wandeln&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\u&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Folgendes Zeichen in Großschrift wandeln&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\U&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Alle folgenden Zeichen bis \E in Großschrift wandeln&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\E&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Beende \L oder \U&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;Controlzeichen in Perl.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;operationen-mit-skalaren&#34;&gt;
    &lt;a href=&#34;#operationen-mit-skalaren&#34;&gt;
	Operationen mit Skalaren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Perl kennt dieselben numerischen Operationen auf Skalaren, die C auch kennt: &lt;code&gt;+, -, *, /&lt;/code&gt; und &lt;code&gt;%&lt;/code&gt;.
Außerdem ist noch eine Potenzoperation &lt;code&gt;**&lt;/code&gt; definiert.
Numerische Vergleiche werden mit den Operatoren &lt;code&gt;&amp;lt;, &amp;lt;=, ==, &amp;gt;=, &amp;gt;&lt;/code&gt; und &lt;code&gt;!=&lt;/code&gt; vorgenommen.&lt;/p&gt;
&lt;p&gt;Außerdem ist auf Strings die Konkatenation definiert; dazu
wird der Operator Punkt (&lt;code&gt;.&lt;/code&gt;) verwendet. Strings können
mit dem Operator &lt;code&gt;x&lt;/code&gt; auch vervielfacht werden. Strings
werden alphabetisch verglichen, dafür stehen die Operatoren
&lt;code&gt;lt, le, eq, ge, gt&lt;/code&gt; und &lt;code&gt;ne&lt;/code&gt; zur Verfügung. Die
numerischen Operatoren würden &lt;code&gt;7 &amp;lt; 30&lt;/code&gt; als wahr
bewerten, aber &lt;code&gt;7 lt 30&lt;/code&gt; ist falsch.&lt;/p&gt;
&lt;p&gt;Skalare können einfach zugewiesen werden, Perl verhält
sich dabei im Wesentlichen wie C. Der einzige Unterschied ist,
daß Variablen nicht deklariert werden müssen, sondern
nach Bedarf ins Leben gerufen werden. Wie in C existiert zu jedem
arithmetischen Operator auch ein zugehöriger rechnender
Zuweisungsoperator, d.h. man kann &lt;code&gt;+=, -=, *=, /=&lt;/code&gt; und so
weiter verwenden. Ebenso wie in C sind &lt;code&gt;++&lt;/code&gt; und &lt;code&gt;-&lt;/code&gt;
als Pre- und Postoperatoren erlaubt.&lt;/p&gt;
&lt;p&gt;Wird ein Skalar benutzt, bevor er einen Wert zugewiesen bekommen
hat, liefert Perl den speziellen Wert &lt;em&gt;undef&lt;/em&gt;. Dieser Wert
sieht aus wie der Leerstring oder wie eine numerische Null, je
nachdem, in welchem Kontext er verwendet wird. &lt;em&gt;undef&lt;/em&gt; kann
jedoch mit dem Prädikat &lt;code&gt;defined()&lt;/code&gt; abgefragt werden.
Das ist nützlich im Zusammenhang mit Dateien, die am Dateiende
&lt;em&gt;undef&lt;/em&gt; zurückliefern.&lt;/p&gt;
&lt;h3 id=&#34;arrays&#34;&gt;
    &lt;a href=&#34;#arrays&#34;&gt;
	Arrays
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Außer skalaren Werten kann Perl noch Felder und
assoziative Felder bearbeiten. Genau wie bei Strings gibt es auch
bei diesen Datentypen keine Größenbegrenzungen, und
genau wie gewöhnliche Variablen müssen auch die beiden
Arten von Feldern in Perl nicht deklariert werden, sondern
können einfach benutzt werden.&lt;/p&gt;
&lt;p&gt;So wie skalare Variable durch ein &lt;code&gt;$&lt;/code&gt; bezeichnet werden,
kennzeichnet Perl Felder mit einem &lt;code&gt;@&lt;/code&gt; und Hashlisten mit
einem &lt;code&gt;%&lt;/code&gt;-Zeichen. Demnach bezeichnet &lt;code&gt;$name&lt;/code&gt; einen
Skalar mit dem Namen &lt;code&gt;name&lt;/code&gt; und &lt;code&gt;@name&lt;/code&gt; ein Feld
desselben Namens. Perl unterhält unterschiedliche
Namensräume für alle drei Sorten von Objekten, so
daß &lt;code&gt;$name&lt;/code&gt;, &lt;code&gt;@name&lt;/code&gt; und &lt;code&gt;%name&lt;/code&gt;
unterschiedliche Objekte bezeichnen.&lt;/p&gt;
&lt;p&gt;Ebenso wie skalare Konstanten in Perl notiert werden
können, existieren auch Notationen für Felder:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# Ein Feld mit dem drei Werten 1, 2 und 3.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;huhu&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;du&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;da&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Ein Feld mit drei Strings.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Es ist auch möglich, gemischte Felder zu notieren, und die
Feldelemente brauchen keine Konstanten zu sein:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Der Wert von $name und 42.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$vorname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$nachname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$strasse&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$hausnr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Zwei Werte.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Das leere (nullelementige) Feld.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Um große Listen von aufzählenden Zahlenwerten zu
notieren, existiert in Perl außerdem noch eine
Abkürzung:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# Die ganzen Zahlen von 1 bis 10.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;11.9&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;15.9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Die Zahlen 11.9, 12.9, .., 15.9.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Die Zahlen 2, 3, 5, 6, 7, 8 und 9.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Der Bereich von $start bis $stop.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Solche Listen zählen immer nur aufsteigend. Wenn der rechte
Wert kleiner ist als der linke Wert, entsteht die leere Liste. Der
Operator &lt;code&gt;print&lt;/code&gt; kann ebenfalls Listen drucken; die Ausgabe
erfolgt ohne Leerzeichen zwischen den Listenelementen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Der Name ist &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Der Name ist $name\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# schöner&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;operationen-mit-arrays&#34;&gt;
    &lt;a href=&#34;#operationen-mit-arrays&#34;&gt;
	Operationen mit Arrays
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Arrays werden in Perl genauso zugewiesen wie Skalare,
nämlich mit &lt;code&gt;=&lt;/code&gt;. Perl erkennt, ob es sich um eine
Zuweisung von Arrays oder Skalaren handelt, indem es die linke
Seite der Zuweisung analysiert und feststellt, ob es sich dabei um
einen skalaren oder um einen Arraykontext handelt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@lall&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Das Feld @lall besteht jetzt aus 3 Elementen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@bla&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@lall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# In Perl können ganze Felder zugewiesen werden.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# 1 wird zu (1) und dann zugewiesen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In der Elementliste auf der rechten Seite der Zuweisung
können auch wieder Arrays als Elemente auftauchen. Sie werden
bei der Zuweisung durch ihre Elemente ersetzt. Auf diese Weise ist
es möglich, vorne und hinten in das Feld Elemente
einzufügen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@lall&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@bla&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@lall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# wird zu (0..4).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Enthält eine Liste nur Variablen, kann sie auch als linke
Seite einer Zuweisung verwendet werden. Auf diese Weise kann man
bequem beliebig viele Elemente eines Feldes permutieren. Wenn die
linke Liste einer Zuweisung weniger Elemente hat als das Feld auf
der rechten Seite, werden die überzähligen Elemente
verworfen. Es ist aber auch möglich, als letztes Element der
linken Seite ein Feld zu verwenden, das diese Elemente dann
aufnimmt:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# $a und $b vertauschen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# $b ist $d, $e ist verloren.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# $b[0] ist $d, $b[1] ist $e.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Wird ein Feld in einem skalaren Kontext verwendet, wird die
Länge des Feldes für das Feld eingesetzt. Die Länge
eines Feldes &lt;code&gt;@name&lt;/code&gt; kann aber auch mit der Variablen
&lt;code&gt;$#name&lt;/code&gt; abgefragt werden.&lt;/p&gt;
&lt;p&gt;Auf die Elemente eines Feldes &lt;code&gt;@name&lt;/code&gt; kann durch
Indizierung wie in C zugegriffen werden. Die Elemente eines Feldes
sind Skalare, daher sind sie mit dem Prefix &lt;code&gt;$&lt;/code&gt; zu versehen.
Es ist möglich, beliebigen einzelnen Feldelementen Werte
zuzuweisen. Perl vergrößert das Feld nach Bedarf,
eventuell vorhandene Lücken werden mit &lt;em&gt;undef&lt;/em&gt;
aufgefüllt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# das erste Element des Feldes @name.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Anders als in C kann in Perl auch auf eine Liste von
Arrayelementen zugegriffen werden. Dies wird als eine
&lt;em&gt;array slice&lt;/em&gt; bezeichnet. In diesem Fall handelt es sich um einen
Arraykontext, daher also das Prefix &lt;code&gt;@&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# entspricht ($fasel[0], $fasel[1])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Feldelemente tauschen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@fasel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Mit den Operatoren &lt;code&gt;push&lt;/code&gt; und &lt;code&gt;pop&lt;/code&gt; kann Perl ein
Array wie einen Stack verwenden. Es ist möglich, mehrere Werte
(oder ganze Felder) auf einmal zu pushen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@einStack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$einWert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@einStack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$einWert&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@einStack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Während &lt;code&gt;push&lt;/code&gt; und &lt;code&gt;pop&lt;/code&gt; die rechte Seite
eines Arrays bearbeiten (d.h. an den hohen Indizes manipulieren),
verändern &lt;code&gt;shift&lt;/code&gt; und &lt;code&gt;unshift&lt;/code&gt; die linke Seite
des Feldes. &lt;code&gt;shift&lt;/code&gt; entspricht dabei dem gleichnamigen
Shell-Operator, und &lt;code&gt;unshift&lt;/code&gt; ist seine Umkehrung.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reverse&lt;/code&gt; liefert die Elemente eines Feldes in
umgekehrter Reihenfolge, &lt;code&gt;sort&lt;/code&gt; liefert sie alphabetisch
sortiert, und &lt;code&gt;chop&lt;/code&gt; ist auch auf alle Elemente eines Feldes anwendbar.&lt;/p&gt;
&lt;p&gt;Dateihandles wie &lt;code&gt;&amp;lt;STDIN&amp;gt;&lt;/code&gt; können auch Arrays
zugewiesen werden. Sie lesen dann die ganze Datei auf einmal ein
und weisen jede Zeile einem Feldelement zu.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@lines&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@reverselines&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@lines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@sortlines&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@lines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@sortlines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@reverselines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;kontrollstrukturen&#34;&gt;
    &lt;a href=&#34;#kontrollstrukturen&#34;&gt;
	Kontrollstrukturen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In Perl werden wie in C Blöcke von Anweisungen gebildet,
indem man die Anweisungen in geschweifte Klammern
einschließt. Diese Anweisungen werden linear
ausgeführt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisung_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisung_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisung_n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Wie in C ist es möglich, Bedingungen zu formulieren. Anders
als in C &lt;strong&gt;müssen&lt;/strong&gt; die geschweiften Klammern immer
vorhanden sein, auch dann, wenn nur eine Anweisung von der
Bedingung abhängig ist. Der &lt;code&gt;else&lt;/code&gt;-Block kann
weggelassen werden. Mit Hilfe von &lt;code&gt;elsif&lt;/code&gt; können
Entscheidungen kaskadiert werden, ohne daß sich die
Einrücktiefe bis ins Unendliche steigert.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bedingung&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;elsif&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;neue_bedingung&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In Perl werden Bedingungen als Strings berechnet. Bedingungen
sind genau dann falsch, wenn sie entweder genau den String
&lt;code&gt;0&lt;/code&gt; oder den leeren String ergeben. Alle anderen Werte (1, 17,
0.000, 00) sind wahr.&lt;/p&gt;
&lt;p&gt;Eine etwas seltsame Konstruktion in Perl ist die
&lt;code&gt;unless&lt;/code&gt;-Anweisung, die im Prinzip ein &lt;code&gt;if&lt;/code&gt; ohne
&lt;code&gt;then&lt;/code&gt; darstellt (Die Anweisung &lt;code&gt;die&lt;/code&gt; beendet ein
Perl-Programm mit einer Fehlermeldung).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Wie ist Dein Name? &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;unless&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;eq&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Kristian&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;die&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zugriff verweigert.\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Eine andere seltsame Konstruktion ist das einzelnen Anweisungen
nachgestellte &lt;code&gt;if&lt;/code&gt; oder &lt;code&gt;unless&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;die&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zugriff verweigert.\n&amp;#34;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;unless&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;eq&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Kristian&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Perl ist in der Lage, einen Block von Anweisungen zu
wiederholen, solange eine Bedingung wahr (&lt;code&gt;while&lt;/code&gt;) oder
falsch (&lt;code&gt;until&lt;/code&gt;) ist. Ebenso ist eine zu C analoge
&lt;code&gt;for&lt;/code&gt;-Anweisung zum Zählen vorhanden. Die Syntax ist in
allen Fällen wie in C, nur daß die geschweiften Klammern
nicht entfallen dürfen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bedingung&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;until&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bedingung&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zählanweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;arbeits_anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Zusätzlich ist Perl in der Lage, einen Block für jedes
Element eines Feldes auszuführen. Das ist bequemer, als erst
die Länge eines Feldes zu bestimmen und es dann
durchzuzählen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$zähler&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@eineListe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Schleifen können mit &lt;code&gt;last&lt;/code&gt; und &lt;code&gt;next&lt;/code&gt;
vorwärts und rückwärts kurzgeschlossen werden, d.h.
&lt;code&gt;last&lt;/code&gt; entspricht dem &lt;code&gt;break&lt;/code&gt; in C und &lt;code&gt;next&lt;/code&gt;
entspricht dem &lt;code&gt;continue&lt;/code&gt; von C.&lt;/p&gt;
&lt;p&gt;Blöcke können in Perl mit einem Label markiert werden.
&lt;code&gt;last&lt;/code&gt; und &lt;code&gt;next&lt;/code&gt; können mithilfe dieser Labels
mehrere Ebenen auf einmal verlassen oder kurzschließen.&lt;/p&gt;
&lt;h2 id=&#34;assoziative-arrays&#34;&gt;
    &lt;a href=&#34;#assoziative-arrays&#34;&gt;
	Assoziative Arrays
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Assoziative Arrays&lt;/em&gt; oder &lt;em&gt;Hashlisten&lt;/em&gt; sind
programmtechnisch eine Verallgemeinerung von Arrays. Statt
ganzzahliger Ausdrücke kann in einer Hashliste ein beliebiger
String als Index verwendet werden. Über diesen String kann
jederzeit auf dem mit dem String assoziierten Wert zugegriffen
werden. Man kann sich eine solche Hashliste auch als Tabelle mit
zwei Spalten vorstellen: Jedem String aus der linken Spalte (den
&lt;em&gt;Schlüsseln&lt;/em&gt;) ist der zugehörige String auf der
rechten Seite (ein &lt;em&gt;Wert&lt;/em&gt;) zugeordnet. Anders als in einer
richtigen Tabelle oder in einem Array haben die Elemente in einer
Hashliste aber keine vorgegebene Ordnung. Würde man sie
aufzählen (z.B. in einer &lt;code&gt;foreach&lt;/code&gt;-Schleife),
bekäme man irgendeine Reihenfolge.&lt;/p&gt;
&lt;p&gt;In Perl werden assoziative Felder durch ein Prozentzeichen
(&lt;code&gt;%&lt;/code&gt;) markiert. In einem Arraykontext werden sie wie ein
normales Array mit einer geraden Anzahl von Feldern behandelt. Die
geraden Positionen dieses Arrays beginnend bei 0 sind mit
Schlüsseln belegt, die ungeraden Positionen mit den zu diesen
Schlüsseln gehörenden Werten. Die Funktion
&lt;code&gt;keys()&lt;/code&gt; liefert die Schlüssel eines solchen Feldes und die
Funktion &lt;code&gt;values()&lt;/code&gt; die Werte.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;%vorname_von&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Köhntopp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Kristian&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;Seeger&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Martin&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;Rump&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Birgit&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Reihenfolge ist zufällig!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%vorname_von&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# Köhntopp, Seeger, Rump&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%vorname_von&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Kristian, Martin, Birgit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Der Zugriff auf einzelne Elemente erfolgt wie bei Feldern durch
Indizierung, aber der Indexoperator besteht hier aus den
geschweiften Klammern.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Reihenfolge ist zufällig&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%vorname_von&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Der Vorname von $i ist $vorname_von{$i}.\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;keys&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%vorname_von&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Der Vorname von $i ist $vorname_von{$i}.\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Einzelne Elemente lassen sich mit dem Operator &lt;code&gt;delete&lt;/code&gt;
aus dem Feld löschen (man kann auch das ganze Feld
löschen).&lt;/p&gt;
&lt;h2 id=&#34;eingabe-und-ausgabe&#34;&gt;
    &lt;a href=&#34;#eingabe-und-ausgabe&#34;&gt;
	Eingabe und Ausgabe
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;standardeingabe&#34;&gt;
    &lt;a href=&#34;#standardeingabe&#34;&gt;
	Standardeingabe
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wie bereits gezeigt, kann man eine Zeile der Eingabe einlesen,
indem man das Filehandle der Eingabe an eine skalare Variable
zuweist. Wenn keine Eingabezeile mehr verfügbar ist, wird der
Wert &lt;em&gt;undef&lt;/em&gt; zugewiesen. Weist man ein Filehandle stattdessen
an ein Array zu, wird die gesamte Datei bis zum Dateiende
zugewiesen und jedem Arrayelement eine Zeile zugeordnet.&lt;/p&gt;
&lt;p&gt;Oft möchte man eine Datei zeilenweise durchlesen und
für jede Zeile einer Operation ausführen. Für die
Standardeingabe sieht das so aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Zeile drucken&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Schleife beendet sich am Dateiende, da der Wert &lt;em&gt;undef&lt;/em&gt;
zum Leerstring expandiert und dieser String als false-Wert gilt.
Leere Eingabezeilen bestehen aber immerhin noch aus einem
Newline-Zeichen, sind also keine Leerstrings.&lt;/p&gt;
&lt;p&gt;In Perl ist es so, daß für viele Operatoren die
Variable &lt;code&gt;$_&lt;/code&gt; als Defaultvariable angenommen wird, wenn
keine Variable angegeben wird. Tatsächlich kann man das
Beispiel auch so schreiben:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Zeile drucken&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In diesem Fall wird statt der Variablen &lt;code&gt;$i&lt;/code&gt; die
Standardvariable &lt;code&gt;$_&lt;/code&gt; verwendet.&lt;/p&gt;
&lt;h3 id=&#34;argv-und-env&#34;&gt;
    &lt;a href=&#34;#argv-und-env&#34;&gt;
	&lt;code&gt;@ARGV&lt;/code&gt; und &lt;code&gt;%ENV&lt;/code&gt;
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die Kommandozeilenparameter eines Perlprogrammes stehen in der
vordefinierten Arrayvariablen &lt;code&gt;@ARGV&lt;/code&gt; zur Verfügung.
Das spezielle Dateihandle &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; interpretiert diese
Namen der Reihe nach als Dateinamen und liest alle diese Dateien
durch. Das Programm&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Zeile drucken&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;entspricht also dem UNIX-Kommando &lt;code&gt;cat&lt;/code&gt;. Es kann
&lt;code&gt;perlcat a b c&lt;/code&gt; aufgerufen werden und gibt nacheinander die
Inhalte aller drei Dateien als eine Datei auf der Standardausgabe
aus.&lt;/p&gt;
&lt;p&gt;Im assoziativen Array &lt;code&gt;%ENV&lt;/code&gt; stellt Perl alle
Umgebungsvariablen zur Verfühgung. Die Schlüssel sind
jeweils der Name, die Werte sind die Werte der
Umgebungsvariablen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Finde den Pfad des Homeverzeichnisses&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# des Benutzers.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$ENV&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;HOME&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;printf&#34;&gt;
    &lt;a href=&#34;#printf&#34;&gt;
	&lt;code&gt;printf&lt;/code&gt;
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wem die Ausgabe von Variablen mit &lt;code&gt;print&lt;/code&gt; zu langweilig
oder zu umständlich ist, der kann statt dessen &lt;code&gt;printf&lt;/code&gt;
verwendet. Diese Anweisung akzeptiert einen Formatstring wie die
gleichnamige C-Funktion und eine Liste von Variablen, die
entsprechend dem Formatstring formatiert werden.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;printf &amp;#34;%10s %05d %7.2f\n&amp;#34;, $s, $i, $f;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;reguläre-ausdrücke&#34;&gt;
    &lt;a href=&#34;#regul%c3%a4re-ausdr%c3%bccke&#34;&gt;
	Reguläre Ausdrücke
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Viele Perl-Anweisungen und Funktionen machen von regulären
Ausdrücken Gebrauch. Ein regulärer Ausdruck ist ein
Suchmuster, das gegen eine Zeichenkette verglichen wird und
entweder paßt oder nicht. Oft kommt es nur darauf an, ob der
Ausdruck paßt oder nicht, manchmal möchte man auch noch
wissen, welcher Teil der Zeichenkette genau gepasst hat, etwa
um ihn zu ersetzen.&lt;/p&gt;
&lt;p&gt;Reguläre Ausdrücke werden von vielen UNIX-Programmen
verwendet, darunter &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;sed&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;,
&lt;code&gt;ed&lt;/code&gt;, &lt;code&gt;vi&lt;/code&gt;, &lt;code&gt;emacs&lt;/code&gt; und die verschiedenen Shells.
Jedes dieser Programme hat eine leicht unterschiedliche Art der
Notation für reguläre Ausdrücke, und auch die
Leistungsfähigkeit unterscheidet sich gelegentlich etwas.
Perls reguläre Ausdrücke sind eine Obermenge aller dieser
Verfahren: Jeder reguläre Ausdruck, der in einem der genannten
Werkzeuge formuliert werden kann, kann auch in Perl formuliert
werden, muss aber evtl. leicht umformuliert werden.&lt;/p&gt;
&lt;p&gt;In Perl werden reguläre Ausdrücke notiert, indem sie
in Schrägstriche (&lt;em&gt;slashes&lt;/em&gt;) eingeschlossen werden. Die
einfachste Form von regulären Ausdrücken sieht so
aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/abc/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;$_&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Im Beispiel wird die Einbauvariable &lt;code&gt;$_&lt;/code&gt; gegen den
regulären Ausdruck getestet und wenn eine Übereinstimmung
erzielt wird, wird der String gedruckt. Die volle Syntax des &lt;i&gt;
match&lt;/i&gt;-Operators lautet&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$variable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=~&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;m/regexp/o&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptionen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dieser Ausdruck vergleicht den Inhalt der Variablen
&lt;code&gt;$variable&lt;/code&gt; gegen den regulären Ausdruck &lt;code&gt;regexp&lt;/code&gt;.
Dabei kann der Ablauf des Matchvorgangs mit einigen einbuchstabigen
Operationen beeinflusst werden (die wichtigste Option ist
&lt;code&gt;i&lt;/code&gt;, ignore case). Auch die Trennzeichen (Slashes) können
durch andere, frei gewählte Trennzeichen ersetzt werden. Der
Match selbst ergibt einen Wahrheitswert, ,,1`` oder den
Leerstring.&lt;/p&gt;
&lt;p&gt;Perl kennt die folgenden Regeln zur Konstruktion von
regulären Ausdrücken:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Alle Zeichen, denen im folgenden keine besondere Bedeutung
zugewiesen wird, stehen in einem regulären Ausdruck für
sich selbst. Der reguläre Ausdruck &lt;code&gt;a&lt;/code&gt; paßt also
auf einen String, der &lt;code&gt;a&lt;/code&gt; enthält.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Das Zeichen Punkt steht für ein einzelnes, beliebiges
Zeichen außer Newline. Der reguläre Ausdruck &lt;code&gt;.&lt;/code&gt;
paßt also auf alle Strings, die mindestens ein beliebiges
Zeichen außer Newline enthalten.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Eine in eckige Klammern eingeschlossene Zeichenmenge steht
für ein einzelnes Zeichen aus dieser Menge. Beginnt die Menge
mit einem Dach, steht die Menge für ein einzelnes Zeichen, das
nicht in der Menge ist. Der Ausdruck &lt;code&gt;[abc]&lt;/code&gt; paßt also
entweder auf das Zeichen &lt;code&gt;a&lt;/code&gt; oder das Zeichen &lt;code&gt;b&lt;/code&gt;
oder das Zeichen &lt;code&gt;c&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perl kennt einige vordefinierte Zeichenklassen (und deren
Negationen), die oft benötigt werden:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Kürzel&lt;/th&gt;
          &lt;th&gt;Bedeutung&lt;/th&gt;
          &lt;th&gt;Kürzel&lt;/th&gt;
          &lt;th&gt;Bedeutung&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;\d (digits)&lt;/td&gt;
          &lt;td&gt;[0-9]&lt;/td&gt;
          &lt;td&gt;\D (not digits)&lt;/td&gt;
          &lt;td&gt;[^0-9]&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\w (words)&lt;/td&gt;
          &lt;td&gt;[a-zA-Z0-9_]&lt;/td&gt;
          &lt;td&gt;\W (not words)&lt;/td&gt;
          &lt;td&gt;[^a-zA-Z0-9_]&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;\s (space)&lt;/td&gt;
          &lt;td&gt;[ \r\t\n\f]&lt;/td&gt;
          &lt;td&gt;\S (not space)&lt;/td&gt;
          &lt;td&gt;[^ \r\n\t\f]&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mehrere Teilausdrücke können einfach
aneinandergereiht werden. Der resultierende Ausdruck paßt
dann auf eine Folge von Zeichen, auf die jeweils die
Teilausdrücke passen würden. Im Klartext bedeutet das,
daß etwa &lt;code&gt;abc&lt;/code&gt; auf ein &lt;code&gt;a&lt;/code&gt; gefolgt von einem
&lt;code&gt;b&lt;/code&gt; gefolgt von einem &lt;code&gt;c&lt;/code&gt; paßt, und daß
etwa &lt;code&gt;a.c&lt;/code&gt; auf ein &lt;code&gt;a&lt;/code&gt; gefolgt von einem beliebigen
Zeichen außer Newline gefolgt von &lt;code&gt;c&lt;/code&gt; paßt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Der Stern &lt;code&gt;*&lt;/code&gt; paßt auf null oder mehr
Wiederholungen des folgenden Zeichens. Der Ausdruck &lt;code&gt;ab*c&lt;/code&gt;
paßt also auf &lt;code&gt;ac&lt;/code&gt;, &lt;code&gt;abc&lt;/code&gt;, &lt;code&gt;abbc&lt;/code&gt; und so
weiter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Das Pluszeichen &lt;code&gt;+&lt;/code&gt; paßt auf eine oder mehr
Wiederholungen des folgenden Zeichens. Der Ausdruck &lt;code&gt;ab+c&lt;/code&gt;
paßt also auf &lt;code&gt;abc&lt;/code&gt;, &lt;code&gt;abbc&lt;/code&gt; und so weiter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Das Fragezeichen &lt;code&gt;?&lt;/code&gt; paßt auf eine oder eine
Wiederholung des folgenden Zeichens. Der Ausdruck &lt;code&gt;ab?c&lt;/code&gt;
paßt also auf &lt;code&gt;ac&lt;/code&gt; oder &lt;code&gt;abc&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hinter einem Zeichen kann in geschweiften Klammer ein
genereller Multiplikator &lt;code&gt;{n.m}&lt;/code&gt; angegeben werden. Der Ausdruck paßt
dann auf &lt;code&gt;n&lt;/code&gt; bis &lt;code&gt;m&lt;/code&gt; Wiederholungen dieses Zeichens.
Wird nur eine Zahl angegeben, paßt der Ausdruck auf genau
&lt;code&gt;n&lt;/code&gt; Wiederholungen des Zeichens. Wird die zweite Grenze
&lt;code&gt;m&lt;/code&gt; weggelassen, wird für sie unendlich eingesetzt.&lt;/p&gt;
&lt;p&gt;Der Stern ist also ein Kürzel für &lt;code&gt;{0,}&lt;/code&gt;, das Pluszeichen
steht für &lt;code&gt;{1,}&lt;/code&gt; und das Fragezeichen für &lt;code&gt;{0,1}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mit runden Klammern &lt;code&gt;()&lt;/code&gt; können Teile eines Ausdruckes markiert werden. Diese Markierungen stehen im selben
Ausdruck unter den Namen &lt;code&gt;\1&lt;/code&gt;, &lt;code&gt;\2&lt;/code&gt; und so weiter zur
Verfügung. Der reguläre Ausdruck &lt;code&gt;a(.+)b\1c&lt;/code&gt; paßt also auf einen String, der ein
&lt;code&gt;a&lt;/code&gt; gefolgt von einer Anzahl beliebiger Zeichen, gefolgt von
einem &lt;code&gt;b&lt;/code&gt; gefolgt von exakt demselben String wie zwischen
&lt;code&gt;a&lt;/code&gt; und &lt;code&gt;b&lt;/code&gt; gefolgt von einem &lt;code&gt;c&lt;/code&gt;
enthält. Passend wäre also &lt;code&gt;addbddc&lt;/code&gt; oder
&lt;code&gt;ahallobhalloc&lt;/code&gt;, aber nicht &lt;code&gt;addbhalloc&lt;/code&gt;. Letzterer
String würde aber auf den Ausdruck &lt;code&gt;a.+b.+c&lt;/code&gt; passen.&lt;/p&gt;
&lt;p&gt;Nach einem Match (und bis zum nächsten Gebrauch des
Match-Operators) stehen die markierten Teilstrings in den
besonderen Perl-Variablen &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt; und so weiter
zur Verfügung.&lt;/p&gt;
&lt;p&gt;Außerdem binden die Klammern Teilausdrücke zusammen:
&lt;code&gt;abc*&lt;/code&gt; paßt auf &lt;code&gt;ab&lt;/code&gt;, &lt;code&gt;abc&lt;/code&gt;,
&lt;code&gt;abcc&lt;/code&gt; und so weiter, während &lt;code&gt;(abc)*&lt;/code&gt; auf den
leeren String, &lt;code&gt;abc&lt;/code&gt;, &lt;code&gt;abcabc&lt;/code&gt; und so weiter
paßt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Und schließlich lassen sich mit dem Pipelinezeichen noch
Alternativen deklarieren. Der Ausdruck &lt;code&gt;lall|laber&lt;/code&gt;
paßt entweder auf den String &lt;code&gt;lall&lt;/code&gt; oder auf den
String &lt;code&gt;laber&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ein Dach markiert den Anfang eines Strings und ein
Dollarzeichen das Ende eines Strings. Der Ausdruck
&lt;code&gt;^x$&lt;/code&gt; paßt also auf einen String, der genau nur
aus dem Zeichen &lt;code&gt;x&lt;/code&gt; besteht.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Außer dem m-Operator zum Matchen kennt Perl auch noch
einen s-Operator zum Suchen und Ersetzen in einem String:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;variable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;~ s/alt/neu/optionen&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Diese Operation ersetzt in der Variablen &lt;code&gt;$variable&lt;/code&gt; alle
Vorkommen des regulären Ausdrucks &lt;code&gt;alt&lt;/code&gt; durch
&lt;code&gt;neu&lt;/code&gt;. Der Ausdruck &lt;code&gt;neu&lt;/code&gt; darf dabei ebenfalls
Klammermarkierungen enthalten. So würde &lt;code&gt;s/a(.+)b/x\1y/&lt;/code&gt;
in einem String ein Vorkommen von paarigen
&lt;code&gt;a&lt;/code&gt; und &lt;code&gt;b&lt;/code&gt; durch passende &lt;code&gt;x&lt;/code&gt; und &lt;code&gt;y&lt;/code&gt;
ersetzen, ohne daß der Text dazwischen irgendwie
beeinflusst wäre.&lt;/p&gt;
&lt;p&gt;Außer der Option &lt;code&gt;i&lt;/code&gt; (ignore case) kennt der
s-Operator auch noch die Option &lt;code&gt;g&lt;/code&gt; (global search and
replace), die nicht nur ein einzelnes Vorkommen von &lt;code&gt;alt&lt;/code&gt;
ersetzt, sondern alle.&lt;/p&gt;
&lt;h3 id=&#34;split-und-join&#34;&gt;
    &lt;a href=&#34;#split-und-join&#34;&gt;
	&lt;code&gt;split()&lt;/code&gt; und &lt;code&gt;join()&lt;/code&gt;
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die Perlfunktion &lt;code&gt;split()&lt;/code&gt; kann dazu verwendet werden,
einen Skalar mit Hilfe eines regulären Ausdrucks in ein Feld
zu zerlegen. &lt;code&gt;split()&lt;/code&gt; nimmt dazu den String und wendet den
regulären Ausdruck wiederholt auf den String an. Alle Teile
des Strings, die auf den regulären Ausdruck passen, werden zu
Trennzeichen, und die Teile des Strings, die nicht auf den Ausdruck
passen, werden zu Feldelementen.&lt;/p&gt;
&lt;p&gt;Eine Zeile der Paßwortdatei in UNIX sieht zum Beispiel so
aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;kris:_:100:20:Kristian Köhntopp:/home/kris:/bin/bash&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Mit dem Aufruf &lt;code&gt;split(/:/, $line);&lt;/code&gt; wendet Perl den
regulären Ausdruck &lt;code&gt;/:/&lt;/code&gt; auf diese Zeile an. Der
Ausdruck paßt auf alle Doppelpunkte, diese werden also
Trennzeichen. Die Worte &lt;code&gt;kris&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;100&lt;/code&gt;,
&lt;code&gt;20&lt;/code&gt;, &lt;code&gt;Kristian Köhntopp&lt;/code&gt;, &lt;code&gt;/home/kris&lt;/code&gt;
und &lt;code&gt;/bin/bash&lt;/code&gt; werden die Feldelemente 0 bis 6 des
Ergebnisfeldes von &lt;code&gt;split&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Wendet man &lt;code&gt;split()&lt;/code&gt; in einem Arraykontext an, bekommt
man das gesamte Feld als Ergebnis (und kann seine Länge mit
&lt;code&gt;$#feld&lt;/code&gt; feststellen). In einem skalaren Kontext bekommt man
von &lt;code&gt;split()&lt;/code&gt; die Länge des Feldes als Ergebnis.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$laenge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/:/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# ergibt 6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;@feld&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/:/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# ergibt $feld[0] = &amp;#34;kris&amp;#34; usw.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                             &lt;span class=&#34;c1&#34;&gt;# $#feld ist auch 6.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Andererseits kann man mit &lt;code&gt;join()&lt;/code&gt; ein Feld mit
beliebigen Trennzeichen zu einem Skalar zusammenfügen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@feld&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;würde das zerlegte Paßwortfeld von oben wieder
zusammensetzen.&lt;/p&gt;
&lt;h2 id=&#34;funktionen&#34;&gt;
    &lt;a href=&#34;#funktionen&#34;&gt;
	Funktionen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Es ist möglich, in Perl eigene Funktionen zu definieren.
Die Syntax ist folgendermaßen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;sub&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;anweisungen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$wert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Diese Anweisungen definieren eine Funktion mit dem Namen
&lt;code&gt;name&lt;/code&gt;, die einen Rückgabewert in &lt;code&gt;$wert&lt;/code&gt; berechnet.
Die Namen von Funktionen sind von den Namen von Skalaren, Arrays
und Hashlisten unabhängig. Funktionen werden mit einem
Undzeichen aufgerufen. Die Funktion &lt;code&gt;name&lt;/code&gt; kann also so
aufgerufen werden:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;# name aufrufen und das Ergebnis verwerfen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$var&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# name aufrufen und das Ergebnis nutzen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Funktionen können mit Argumenten aufgerufen werden. Diese
Argumente stehen im Feld &lt;code&gt;@_&lt;/code&gt; zur Verfügung. Sie
können also mit &lt;code&gt;$_[0]&lt;/code&gt; und so weiter angesprochen
werden.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;sub&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Variablen in Funktionen sind global. Die Variable
&lt;code&gt;$summe&lt;/code&gt; in der Funktion oben würde also eine gleichnamige
Variable anderswo im Programm überschreiben. Mit Hilfe des
Operators &lt;code&gt;local()&lt;/code&gt; ist es möglich, lokale Variablen zu
deklarieren:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;sub&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Auf diese Weise kann man auch die Funktionsparameter in ein
bekanntes Feld umkopieren:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;sub&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@werte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;@_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@werte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;cgi-programme-in-perl&#34;&gt;
    &lt;a href=&#34;#cgi-programme-in-perl&#34;&gt;
	CGI-Programme in Perl
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;cgi-libpl-und-testcgipl&#34;&gt;
    &lt;a href=&#34;#cgi-libpl-und-testcgipl&#34;&gt;
	&lt;code&gt;cgi-lib.pl&lt;/code&gt; und &lt;code&gt;testcgi.pl&lt;/code&gt;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Zur CGI-Programmierung stehen in Perl eine ganze Reihe von
Funktionspaketen zur Verfügung. Ein sehr einfaches
Funktionspaket ist die &lt;code&gt;cgi-lib.pl&lt;/code&gt; von Steven E. Brenner. Dieses Paket kann die
Eingabedaten von GET und POST-Methoden einlesen und decodieren. Es
stellt die Werte der einzelnen Eingabevariablen dann in dem
assoziativen Feld &lt;code&gt;%in&lt;/code&gt; zur Verfügung. Neben dieser
Grundfunktionalität sind zusätzlich noch einige
Hilfsfunktionen zum Debugging vorhanden.&lt;/p&gt;
&lt;p&gt;Der Gebrauch des Paketes ist wie folgt: Im
Bibliotheksverzeichnis von Perl muss die Datei &lt;code&gt;cgi-lib.pl&lt;/code&gt; installiert sein. Das eigene Perlscript muss
dann so anfangen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Paket aktivieren.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;cgi-lib.pl&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;die&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;cgi-lib.pl nicht gefunden.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Einlesen und Zerlegen der GET/POST-Variablen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReadParse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# html-Header erzeugen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PrintHeader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Debugausgabe&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;title&amp;gt;Test CGI&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;h1&amp;gt;Test CGI&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;h2&amp;gt;Eingabevariablen:&amp;lt;/h2&amp;gt;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PrintVariables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\n&amp;lt;h2&amp;gt;Umgebungsvariablen&amp;lt;/h2&amp;gt;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PrintVariables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%ENV&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;hr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;Erzeugt von test-cgi.pl
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;/html&amp;gt;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Das Script muss ausführbar gemacht werden und dann
unter einer passenden URL aufgerufen werden (zum Beispiel: &lt;code&gt;http://white/cgi-bin/testcgi.pl&lt;/code&gt;). Ihm können von einem
Formular oder manuell beliebige Parameter mitgegeben werden. Seine
Ausgabe sieht dann zum Beispiel so aus (mit einigen Parametern
aufgerufen):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Test CGI
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Eingabevariablen:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;lall
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    laber
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;probe
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    hallo
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Umgebungsvariablen
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;DOCUMENT_ROOT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    /home/www
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;GATEWAY_INTERFACE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    CGI/1.1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;... gekürzt ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SERVER_SOFTWARE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Apache/1.0.3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;----------------------------------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Erzeugt von test-cgi.pl
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Das Script funktioniert wie folgt:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Die Anweisung &lt;code&gt;require&lt;/code&gt; aktiviert das Perl
Funktionspaket &lt;code&gt;cgi-lib.pl&lt;/code&gt;. Schlägt das fehl, beendet
die &lt;code&gt;die&lt;/code&gt;-Anweisung das Script mit einer Fehlermeldung.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Der Aufruf der im Paket definierten Unterfunktion &lt;code&gt;&amp;amp;ReadParse&lt;/code&gt; liest die Eingaben der GET- und POST-Methoden
ein und decodiert sie. Die einzelnen Variablenwerte werden im
assoziativen Feld &lt;code&gt;%in&lt;/code&gt; hinterlegt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Die Funktion &lt;code&gt;&amp;amp;PrintHeader&lt;/code&gt; liefert den
benötigten Content-Type-String zurück, der dann mit &lt;code&gt;print&lt;/code&gt; gedruckt wird.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mit einem einfachen, mehrzeiligen &lt;code&gt;print&lt;/code&gt; wird der
Header eines HTML-Dokumentes erzeugt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Die Funktion &lt;code&gt;&amp;amp;PrintVariables&lt;/code&gt; druckt das ihr
übergebene assoziative Array &lt;code&gt;%in&lt;/code&gt; zu Debugzwecken
aus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nach einem Zwischenheader wird dann auch noch das assoziative
Array &lt;code&gt;%ENV&lt;/code&gt; ausgedruckt. Dieses enthält alle
Umgebungsvariablen des Programms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ein Abspann-&lt;code&gt;print&lt;/code&gt; druckt den Seitenfuß.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ein-einfacher-zähler&#34;&gt;
    &lt;a href=&#34;#ein-einfacher-z%c3%a4hler&#34;&gt;
	Ein einfacher Zähler
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;CGI-Scripte können und sollen nicht gecached werden. Es ist
daher möglich, auf diese Weise einen einfachen
Seitenzähler zu realisieren. Das Script muss dazu an
einem geeigneten Ort eine Datei hinterlegen, in der es seine
Aufrufe mitzählt. Die Ausgabe des Scriptes kann eine beliebige
HTML-Seite sein, in der der Zählerstand eingebaut wird.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/perl --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Paket aktivieren.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;cgi-lib.pl&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;die&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;cgi-lib.pl nicht gefunden.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Einlesen und Zerlegen der GET/POST-Variablen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReadParse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# html-Header erzeugen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PrintHeader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Zählerstand einlesen.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;COUNTER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;/tmp/counter&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$counter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;lt;COUNTER&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;COUNTER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Zählerstand merken.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;COUNTER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;gt;/tmp/counter&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;COUNTER&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;$counter\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;COUNTER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Seite ausgeben.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;title&amp;gt;Test CGI&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;h1&amp;gt;Z&amp;amp;auml;hlerseite&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;Diese Seite wurde $counter mal aufgerufen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;/html&amp;gt;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Das Script funktioniert so:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Wie üblich werden die Eingabeparameter eingelesen. Sie
werden in dieser Version des Zählscriptes aber noch nicht
verwendet.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Es wird ein Dateihandle &lt;code&gt;&amp;lt;COUNTER&amp;gt;&lt;/code&gt; zum Lesen
geöffnet und eine Zeile mit einer Zahl eingelesen. Diese Zahl
wird um eins erhöht. Die Datei wird wieder geschlossen.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dasselbe Dateihandle wird noch einmal geöffnet, aber zum
Schreiben. Der aktuelle Zählerstand wird in die Datei
hineingedruckt. Beachte, daß beim Drucken in Filehandles
zwischen dem Filehandle und dem eigentlichen Drucktext &lt;strong&gt;kein&lt;/strong&gt;
Komma gesetzt wird!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Der Seitentext wird ausgegeben.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Aufgaben:&lt;/strong&gt; Erweitere das Script so, daß es mehrere
verschiedene Seiten und Zähler zu diesen Seiten bearbeiten
kann. Die Seitenbezeichnung wird dem Script in der Variablen &lt;code&gt;cn&lt;/code&gt; übergeben.
Beachte die sich ergebenden
Sicherheitsprobleme, wenn Pfadnamen aus Variablen direkt
übernommen werden! Wie können diese vermieden werden?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
