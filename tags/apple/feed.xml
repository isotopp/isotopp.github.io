<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apple on Die wunderbare Welt von Isotopp</title>
    <link>https://blog.koehntopp.info/tags/apple.html</link>
    <description>Recent content in Apple on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>kris-blog@koehntopp.de (Kristian Köhntopp)</managingEditor>

    
    <webMaster>kris-blog@koehntopp.de (Kristian Köhntopp)</webMaster>

    
    <lastBuildDate>Sun, 06 Apr 2025 13:48:13 +0000</lastBuildDate><atom:link href="https://blog.koehntopp.info/tags/apple/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>No LLM for you, come back one year</title>
      <link>https://blog.koehntopp.info/2024/06/22/no-llm-for-you-come-back-one-year.html</link>
      <pubDate>Sat, 22 Jun 2024 05:06:07 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2024/06/22/no-llm-for-you-come-back-one-year.html</guid>
      <description>&lt;p&gt;Es war Samstag, ich las die Nachrichten und ich mußte dazu was im Fedi sagen.
Hier ist der Aufschrieb davon:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RqlQYBcsq54&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;No Soup for you!&lt;/a&gt;

 ist, was Apple der EU sagt:
&lt;a href=&#34;https://www.heise.de/news/Apple-verweist-auf-neue-Regeln-vorerst-keine-Apple-Intelligence-fuer-EU-iPhones-9774039.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apple vs. EU: Apple Intelligence soll vorerst nicht nach Deutschland kommen&lt;/a&gt;

&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aufgrund &amp;ldquo;regulatorischer Unsicherheiten&amp;rdquo; durch den Digital Markets Act (DMA) gehe das Unternehmen davon aus,
bestimmte Funktionen in diesem Jahr nicht mehr für Kunden in Deutschland
und anderen EU-Mitgliedsstaaten einführen zu können,
wie Apple am Freitagabend überraschend in einer Stellungnahme mitteilte.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Dieser Seitenhieb auf den Marktregulator ist amüsant,
aber Apple könnte &amp;ldquo;Apple Intelligence&amp;rdquo; nicht weltweit zeitgleich einführen, selbst wenn Apple das wollte.&lt;/p&gt;
&lt;h1 id=&#34;keine-apple-intelligence-in-der-eu&#34;&gt;
    &lt;a href=&#34;#keine-apple-intelligence-in-der-eu&#34;&gt;
	Keine Apple Intelligence in der EU
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Der wahre Grund ist: Die Features sind unfertig.
Normalerweise liefern iOS Betaversionen relativ vollständige Blicke auf das Release,
alle Features sind vorhanden und funktionieren modulo noch existierende Fehler auf eine Weise,
wie man sie im Produkt-Release später erwarten können wird.
&lt;a href=&#34;https://www.lifewire.com/apple-betas-missing-cool-features-8662016&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;In der iOS 18 Beta ist das nicht der Fall.&lt;/a&gt;

&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But this year, there&amp;rsquo;s less incentive to hop on early because none of the AI tools are there,
and those are surely the features people most want to try out.
The Apple Intelligence features, like better Siri, won&amp;rsquo;t be arriving until later,
perhaps not until after the OS updates have actually launched in the fall.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Das ist einerseits so, weil diese Features nicht auf eine Weise funktionieren können,
dass sie Apples Ansprüchen an Qualität genügen.
&lt;a href=&#34;https://techinformed.com/mcdonalds-ditches-ai-order-system-after-bacon-ice-cream-mix-up/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;McDonalds hat das schon mal ausprobiert.&lt;/a&gt;

&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In one TikTok video –
posted with the caption “Fighting with McDonald’s robot” –
a woman is seen struggling to order vanilla ice cream and a bottle of water,
and instead ends up with multiple sundaes, ketchup sachets, and two portions of butter.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Nun war das keine Apple-KI, aber diese Sorte Problem ist systematisch die Sorte Fehler, die LLMs machen,
und es gibt keinen Grund, warum es bei Apple besser sein sollte.&lt;/p&gt;
&lt;p&gt;Und das ist nur die oberste Lage Probleme.
Ein wichtiger Werbepunkt von Apple ist, dass die KI-Features &amp;ldquo;on device&amp;rdquo; laufen, statt Daten in eine Cloud zu pumpen.
Das geht auch nicht, jedenfalls nicht so, wie der Kunde es erwartet.&lt;/p&gt;
&lt;p&gt;Der aktuelle KI-Hype basiert auf LLMs,
einer besonderen Art neuronaler Netze, die unter anderem Milliarden von &amp;ldquo;Parametern&amp;rdquo; brauchen.
Das sind Haufen von Zahlen, die als Vektoren mit tausenden Dimensionen angeordnet &amp;ldquo;Wissen codieren&amp;rdquo;
und in der Berechnung von Antworten auf Benutzeranfragen verwendet werden.&lt;/p&gt;
&lt;p&gt;Nun, jeder dieser Vektoren braucht eine gewisse Menge Speicherplatz und wenn man &amp;ldquo;Milliarden von Parametern&amp;rdquo; haben will,
dann braucht man schnell auch einmal zweistellige Mengen an Gigabyte RAM zum Ausrechnen der Antwort.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/06/apple-01.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Eine Auswahl von Größenangaben beliebter öffentlicher LLMs.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/06/apple-02.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Standardversion von Metas llama3 mit 70 Milliarden Parametern und 40 GB Größe.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ein Modell mit 8 Milliarden Parametern braucht ca. 5 GB RAM, ein Modell mit 14 Milliarden Parametern ca. 8 GB,
und ein Modell mit 70 Milliarden Parametern je nach Quantisierung zwischen 26 GB und 40 GB.&lt;/p&gt;
&lt;p&gt;Dazu kommt noch einmal Speicher für den Kontext,
der bei großen Kontext-Definitionen schnell noch einmal die Größenordnung des Modells erreicht.&lt;/p&gt;
&lt;p&gt;Apple selbst dokumentiert in
&lt;a href=&#34;https://machinelearning.apple.com/research/introducing-apple-foundation-models&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introducing Apple’s On-Device and Server Foundation Models&lt;/a&gt;


wann sie Modelle lokal rechnen:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the following overview, we will detail how two of these models — a ~3 billion parameter on-device language model,
and a larger server-based language model available with Private Cloud Compute and running on Apple Silicon servers —
have been built and adapted to perform specialized tasks efficiently, accurately, and responsibly.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ein Modell mit 3 Milliarden Parametern wie &lt;a href=&#34;https://ollama.com/library/phi3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Phi3&lt;/a&gt;

 belegt circa 2.5 GB Speicher und
das ist in der Tat eine Größe, die auf einem iPhone mit 6 GB RAM ausgeführt werden kann.
Größere Modelle passen schlicht nicht in den Speicher und werden daher in der Cloud berechnet.&lt;/p&gt;
&lt;p&gt;Die Qualität und Komplexität der Antworten eines LLM ist aber sehr stark von der Anzahl der Parameter des Modells abhängig.
Ein 3b-Modell kann schlicht nicht mit einem 70b- oder gar noch größeren Modellen mithalten.
Das ist aber das, was Benutzer von Online-GPTs wie ChatGPT gewohnt sind.&lt;/p&gt;
&lt;p&gt;Es ist also eher davon auszugehen,
dass wenig Inferenz (das Ausrechnen von Antworten mit einem austrainierten LLM) &amp;ldquo;on device&amp;rdquo; geht,
und viel in die Cloud ausgelagert wird.
Die Rechenzentren dazu gibt es noch nicht, und das Bauen von Rechenzentren dauert in der Regel einige Zeit.
Wir können davon ausgehen, dass die Vorlaufzeit circa 2 Jahre beträgt:
Das Rechenzentrum wird vermutlich sehr uniform bestückt sein, was die Planung vereinfacht.
Die Energiedichte wird sehr hoch sein, und die Hardware wird schwer zu beschaffen sein, was die Planung verkompliziert.&lt;/p&gt;
&lt;p&gt;Die Hardware, die in dieses Rechenzentrum herein kann, wird derzeit meist von Nvidia hergestellt.
Wer Apple kennt, der weiß, wie sehr es die Firma schmerzt, einer Firma wie Nvidia Geld zu geben.
Viel lieber würde Apple den Kram auf eigenen, selbst entworfenen, auf Inferenz spezialisierten Chip laufen lassen.
Auch diese existieren nicht und es würde jedermann überraschen,
wenn es solche Chips vor 2026 gäbe (oder nach 2028 noch nicht gäbe).&lt;/p&gt;
&lt;p&gt;Wir können an dieser Stelle vermutlich glaubhaft herleiten,
dass &amp;ldquo;Apple Intelligence&amp;rdquo; zu diesem Zeitpunkt lediglich lanciert wird, um den Kurs von AAPL zu stabilisieren.
Aber natürlich ist es billig, da noch einmal FOMO gegenüber Kunden in Europa zu pflegen und die EU zu dissen.&lt;/p&gt;
&lt;h1 id=&#34;warum-die-hardware-und-warum-so-viel-speicher&#34;&gt;
    &lt;a href=&#34;#warum-die-hardware-und-warum-so-viel-speicher&#34;&gt;
	Warum die Hardware und warum so viel Speicher?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Die lineare Algebra in Computerspielen und die Mathematik in LLMs sind zum Großteil Matrix-Multiplikationen.
Daher werden Grafikkarten, superschnelle Matrix-Multiplizierer, vielfach für LLMs &amp;ldquo;mißbraucht&amp;rdquo;.
Sie implementieren die benötigte Operation sehr flink, in Hardware und parallel ausführbar.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-P28LKWTzrI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/06/apple-03.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-P28LKWTzrI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nvidia Werbevideo mit den Mythbusters&lt;/a&gt;

,
das die Parallelität von Grafikkarten korrekt veranschaulicht.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Mythbusters haben die Wirkmächtigkeit der parallelen Ausführung für ein Nvidia Werbevideo einmal korrekt visualisiert.&lt;/p&gt;
&lt;p&gt;Zur Geschichte und dem Aufbau von Grafikkarten habe ich vor sieben Jahren einen Link-Artikel geschrieben:
&lt;a href=&#34;https://blog.koehntopp.info/2017/11/25/d-abc-at-scale.html&#34;&gt;d = a*b+c at scale&lt;/a&gt;

,
der die Entwicklung von Grafik-Hardware in den 20 Jahren vor 2017 beschreibt,
weil ich beruflich Anlass hatte, das herauszufinden.
Es ist ein Link-Artikel, ihr müßt die blauen Dinger auch anklicken.&lt;/p&gt;
&lt;p&gt;Wikipedia erklärt
&lt;a href=&#34;https://de.wikipedia.org/wiki/Matrizenmultiplikation#Beispiel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Matrix-Multiplikation als superlange Summe von Produkten&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2024/06/apple-04.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Relevanter Auszug aus der Wikipedia, der Matrix-Multiplikation erläutert.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wir berechnen die Position Zeile 1, Spalte 2 der Ergebnis-Matrix
also durch Multiplikation des Zeilenvektors 1 der Matrix A
mit dem Spaltenvektor 2 der Matrix B,
sodass sich im Beispiel&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;(3, 2, 1) * (2, 1, 0) = (3*2 + 2*1 + 1*0) = 8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ergibt. In &lt;code&gt;d = a*b + c&lt;/code&gt; ist die Zwischensumme &lt;code&gt;c&lt;/code&gt; zunächst 0, und es wird &lt;code&gt;3*2&lt;/code&gt; berechnet.
Das Ergebnis, &lt;code&gt;d = 6&lt;/code&gt; wird im nächsten Schritt als &lt;code&gt;c&lt;/code&gt; verwendet, sodass wir &lt;code&gt;d = 2*1 + 6&lt;/code&gt; erhalten.
Im letzten Schritt wird dies wieder als &lt;code&gt;c&lt;/code&gt; verwendet, sodass wir das Endergebnis &lt;code&gt;d = 1*0 + 8&lt;/code&gt; bekommen.&lt;/p&gt;
&lt;p&gt;Grafikkarten haben spezielle Hardware, die mit einer bestimmten Hardware-Darstellung von Zahlen solche Berechnungen
auf rechteckigen Zahlenfeldern beliebige Größe parallel durchführen können.
&amp;ldquo;NPUs&amp;rdquo;, Neuralprozessoren, tun genau dasselbe.&lt;/p&gt;
&lt;p&gt;In dem Unterrichtsabschnitt &amp;ldquo;Vektor- und Matrizenrechnung&amp;rdquo; in der Schule,
oder gar in &amp;ldquo;Lineare Algebra und Vektorräume&amp;rdquo; an der Uni aufgepasst zu haben zahlt sich also jetzt,
30 Jahre später, groß aus.
Aber keine Angst, es hat sich nichts getan, die Mathematik ist immer noch dieselbe wie damals in der Schule,
und es ist nichts Fieseres dabei als Summen von Produkten: Plus und Malnehmen, komplizierter wird&amp;rsquo;s nicht.&lt;/p&gt;
&lt;h1 id=&#34;ki-und-grafikkarten-laufen-auseinander&#34;&gt;
    &lt;a href=&#34;#ki-und-grafikkarten-laufen-auseinander&#34;&gt;
	KI und Grafikkarten laufen auseinander
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Aber die Matrix-Multiplikation in einer NPU und in einer Grafikkarte laufen langsam auseinander.
Das hat aber nichts mit der Mathematik zu tun, sondern mit der Darstellung von Zahlen.&lt;/p&gt;
&lt;p&gt;Wir können uns einmal Fließkommazahlen im Computer angucken:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://float.exposed/0x400921fb4d12d84a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;3.1415926 als Double (64 Bit)&lt;/a&gt;

:
Stellt man eine beliebte Näherung der Zahl Pi als &lt;code&gt;double&lt;/code&gt; dar, bekommt man dies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 Bit Vorzeichen&lt;/li&gt;
&lt;li&gt;10 Bit Exponenten&lt;/li&gt;
&lt;li&gt;53 Bit &amp;ldquo;Mantisse&amp;rdquo; oder &amp;ldquo;Significand&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;und die Zahl ist nicht der gewünschte Wert, sondern der dichteste Wert, der dargestellt werden kann:
3.14159260000000006841.&lt;/p&gt;
&lt;p&gt;Das ist einen Tick zu groß.
Klickt man den &amp;ldquo;Significand&amp;rdquo; jetzt ein Bit kleiner, bekommt man
&lt;a href=&#34;https://float.exposed/0x400921fb4d12d849&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;3.14159259999999962432&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Das ist das Kreuz mit &lt;em&gt;diskreter Mathematik&lt;/em&gt;: Zwischen den Zahlen,
die wir darstellen können liegen unendlich viele Zahlen, die existieren,
aber nicht diskret in der gewählten Auflösung darstellbar sind.&lt;/p&gt;
&lt;p&gt;In der diskreten Mathematik gibt es eine Schrittweite zwischen zwei darstellbaren Fließkommazahlen.
Diese nennt man &amp;ldquo;eps&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;epsilon&amp;rdquo; ist in der Analysis (eine Disziplin der Mathematik) ein unendlich kleiner Schritt.
In der diskreten Mathematik, also der Mathematik, die sich mit Zahlen in Computern befasst,
gibt es keine unendlich kleinen Schritte.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;eps&amp;rdquo; ist der Schritt, den ein Bit macht.
Bei Fließkommazahlen ist &amp;ldquo;eps&amp;rdquo; variabel, denn es wird mit dem anderen Teil der Fließkommazahl, dem Exponenten skaliert.
Zahlen um 0 herum können sehr genau dargestellt werden,
aber je weiter man von 0 weg kommt, umso größer wird der Exponent und umso größer wird eps.&lt;/p&gt;
&lt;p&gt;In KI-Mathematik normalisieren wir Zahlen oft auf das Intervall von 0 bis 1
oder von -1 bis 1.
Wir brauchen also nicht so große Exponenten und können mit weniger Bits auskommen.&lt;/p&gt;
&lt;p&gt;Das ist wichtig, denn wenn wir von &lt;code&gt;double&lt;/code&gt; auf &lt;code&gt;float&lt;/code&gt; heruntergehen,
dann gehen wir von 64 Bit pro Zahl auf 32 Bit runter – doppelt so viel Modell im selben Speicher!
Ein 32-Bit &lt;code&gt;float&lt;/code&gt; hat bei Werten um Zehntausend herum schon ein eps von 0.01 (bei 10k Euro ein eps von 1 cent).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://float.exposed/0x461c400a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;10000.009765625&lt;/a&gt;

 als &lt;code&gt;float&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Aber für Werte zwischen 0 und 1 sieht es gut aus:
&lt;a href=&#34;https://float.exposed/0x3f000000&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;0.5&lt;/a&gt;

 und am Significand spielen.&lt;/p&gt;
&lt;p&gt;Wir können auch noch weiter heruntergehen:
&lt;a href=&#34;https://float.exposed/b0x3f00&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;0.5&lt;/a&gt;

 als &lt;code&gt;bfloat16&lt;/code&gt;.
Das belegt noch einmal halb so viel Speicher, 16 Bit, verbrennt aber zu viele Bits auf den Exponenten:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 Bit Vorzeichen&lt;/li&gt;
&lt;li&gt;8 Bit Exponent&lt;/li&gt;
&lt;li&gt;7 Bit auf die &amp;ldquo;Mantisse&amp;rdquo;, den &amp;ldquo;Significand&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Wir können auch das 16-Bit &lt;code&gt;half&lt;/code&gt; nehmen:
&lt;a href=&#34;https://float.exposed/0x3800&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;0.5&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Hier werden&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 Bit Vorzeichen&lt;/li&gt;
&lt;li&gt;5 Bit Exponent&lt;/li&gt;
&lt;li&gt;10 Bit Significand&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;verwendet. Je nach Anwendungsfall kann das vorteilhaft sein.&lt;/p&gt;
&lt;p&gt;Ist es schlimm, ein LLM mit weniger Auflösung zu trainieren oder zu benutzen?
Artikel über &amp;ldquo;Quantisierung&amp;rdquo; von LLMs diskutieren das, und auch &lt;em&gt;wann&lt;/em&gt; im Herstellungsprozeß das Modell eingekürzt wird.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@techresearchspace/what-is-quantization-in-llm-01ba61968a51&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;What is Quantization in LLM&lt;/a&gt;


diskutiert ganz allgemein was Quantisierung bei LLMs ist – also mit welchen Zahlen beim Training gerechnet wird
und wann auf Auslieferungs-Zahlenformat umgerechnet wird.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://symbl.ai/developers/blog/a-guide-to-quantization-in-llms/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A Guide to Quanitization in LLMs&lt;/a&gt;


erklärt dasselbe, aber mit mehr Details betreffend die Integer-Formate, also &lt;code&gt;Qx_y&lt;/code&gt;, die man oft sieht.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Quantisierung hat mitunter Auswirkungen auf die Qualität der Antworten, die das LLM generiert,
aber sie spart Speicher und ermöglicht oft erst die Ausführung von LLMs auf Rechnern,
die man im Haus oder gar in der Hand hat.&lt;/p&gt;
&lt;p&gt;Wenn man zig Milliarden Parameter in den verfügbaren Speicher einer Nvidia 4070 Ti quetschen will,
dann braucht man nun einmal kürzere Zahlendarstellungen.
Und wenn es im iPhone passieren soll, dann noch kürzer.&lt;/p&gt;
&lt;p&gt;Damit man von der Beschleunigung einer Nvidia profitiert kann man aber nur Darstellungen nehmen,
die die Nvidia kennt, also in Hardware beschleunigt parallel rechnen kann.
Sonst kann man auch &amp;ldquo;zu Fuß&amp;rdquo;, also mit der CPU, rechnen.&lt;/p&gt;
&lt;p&gt;Das ist das Problem mit dem M1 Apple Silicon, das &lt;code&gt;bfloat16&lt;/code&gt; nicht in Hardware kann, und das ab M2 korrigiert ist.
Ich würde erwarten, dass neuere Apple CPUs auch andere, noch härtere Quantisierungen parallel in Hardware rechnen können,
aber ich habe nicht nachgesehen, was ab wann das wie realisiert wird.&lt;/p&gt;
&lt;h1 id=&#34;qualität-von-kleinen-llms&#34;&gt;
    &lt;a href=&#34;#qualit%c3%a4t-von-kleinen-llms&#34;&gt;
	Qualität von kleinen LLMs
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Apple behauptet, dass ihre 3B Modelle in Benchmarks besser sind als die Konkurrenz:
&lt;a href=&#34;https://machinelearning.apple.com/research/introducing-apple-foundation-models&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introducing Apple’s On-Device and Server Foundation Models&lt;/a&gt;

,
die Benchmarks am Ende.&lt;/p&gt;
&lt;p&gt;Aber 3 Milliarden Parameter sind sehr klein.
Das ist jedoch das, was Apple lokal rechnen kann.
Größere Modelle werden &amp;ldquo;in der Cloud&amp;rdquo; ausgeführt, wo mehr Speicher verfügbar ist.&lt;/p&gt;
&lt;p&gt;Benchmarks bei KI-Anwendungen sind jedoch wenig aussagekräftig, damit ein Endkunde Qualität beurteilen kann.
Sie vergleichen Antworten verschiedener Modelle miteinander, aber die Ergebnisse sind nicht so,
wie ein Mensch Qualität erfahren würde.
Das liegt daran, dass Menschen Antworten von Computern nehmen, um ihre eigenen Entscheidungen zu treffen,
oder um sie mit ihren eigenen Entscheidungen zu vergleichen.&lt;/p&gt;
&lt;p&gt;Menschen haben aber ein Weltmodell.&lt;/p&gt;
&lt;p&gt;Das heißt im Wesentlichen, dass an jeder Entscheidung eine Gewichtung für Fehlschlag und Erfolg hängt,
eine Risikobewertung.
Eine falsche Antwort und eine andere, ebenfalls falsche Antwort sind für einen Menschen also nicht gleich:
Bei einer würde er eine kleine Summe Geld verlieren, bei der anderen sterben.
Im Benchmark aber sind beide gleich &amp;ldquo;falsch&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Der Effekt ist, dass ein schlechtes Modell im Benchmark in der Realität eventuell als besser empfunden werden kann,
weil es nie mörderische Antworten liefert.&lt;/p&gt;
&lt;h1 id=&#34;apple-mit-mehr-ram&#34;&gt;
    &lt;a href=&#34;#apple-mit-mehr-ram&#34;&gt;
	Apple mit mehr RAM
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Wenig überraschend beginnt Apple nun Rechner mit mehr RAM zu bauen,
oder für LLM-Features Geräte mit mehr RAM zu verlangen:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.golem.de/news/apple-8-gbyte-ram-im-macbook-reichen-nicht-mehr-2406-186433.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Golem: 8 GByte RAM im Macbook reichen nicht mehr&lt;/a&gt;

&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Das Unternehmen stellte die Beta der Entwicklungsumgebung XCode 16 vor.
In ihr enthalten ist ein neues Feature: Predictive Code Completion:
Diese nutzt KI, um Codeschnipsel zu analysieren und passende Vorschläge in Echtzeit auszugeben.
Allerdings wird dafür laut Apple ein Mac mit mindestens 16 GByte Arbeitsspeicher benötigt.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;apple-mit-ohne-intelligenz&#34;&gt;
    &lt;a href=&#34;#apple-mit-ohne-intelligenz&#34;&gt;
	Apple mit ohne Intelligenz
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Stellt sich raus, auch der Rest der Welt bekommt zunächst einmal keine Apple Intelligence:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.heise.de/news/Apple-Intelligence-Kommt-die-KI-Siri-erst-mit-iOS-18-4-9793852.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apple Intelligence: Kommt die KI-Siri erst mit iOS 18.4?&lt;/a&gt;

&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Neuen Informationen zufolge soll etwa der mit Künstlicher Intelligenz runderneuerte Sprachassistent Siri
deshalb erst im nächsten Frühjahr in den USA sein Debüt feiern.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;nicht-nvidia-sondern-google&#34;&gt;
    &lt;a href=&#34;#nicht-nvidia-sondern-google&#34;&gt;
	Nicht Nvidia, sondern Google
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Sierk Bornemann weist mich darauf hin, daß Apple in der Tat nicht sehr an Nvidia interessiert ist,
aber augenscheinlich sehr eng mit Google verbandelt ist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Business Insider: &lt;a href=&#34;https://www.businessinsider.com/apple-ai-google-data-centers-2024-6?international=true&amp;amp;r=US&amp;amp;IR=T&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apple&amp;rsquo;s new AI is made in Google data centers&lt;/a&gt;

.
Der Artikel behauptet, daß Apple Google&amp;rsquo;s Rechenzentrum-Hardware und TPUs nutzt, um Modelle zu trainieren.
Dabei scheint der Konsum von TPU-Kapazität Google vor einige technische Probleme gestellt zu haben.&lt;/li&gt;
&lt;li&gt;Ein &lt;a href=&#34;https://x.com/WholeMarsBlog/status/1800317499222921235&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tweet&lt;/a&gt;

 benennt dabei das &amp;ldquo;axlearn&amp;rdquo; Framework,
und zitiert dabei &lt;a href=&#34;https://machinelearning.apple.com/research/introducing-apple-foundation-models&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apple&amp;rsquo;s eigene Dokumentation&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;Und &lt;a href=&#34;https://github.com/apple/axlearn/blob/main/docs/04-infrastructure.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;axlearn&lt;/a&gt;

 ist Open Source
und scheint sehr auf Google TPUs hin optimiert zu sein.&lt;/li&gt;
&lt;li&gt;Auch &lt;a href=&#34;https://blog.trailofbits.com/2024/06/14/understanding-apples-on-device-and-server-foundations-model-release/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Trail of Bits&lt;/a&gt;


stellt heraus, daß Apple ohne &amp;ldquo;Nvidia/CUDA Tax&amp;rdquo; käme, weil das Training mit axlearn auf Google TPUs liefe.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inferenz ist einfacher und verwendet Apple Silicon (also M1-M4).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>x86_64 binaries on M1</title>
      <link>https://blog.koehntopp.info/2023/12/05/x86_64-binaries-on-m1.html</link>
      <pubDate>Tue, 05 Dec 2023 05:06:07 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2023/12/05/x86_64-binaries-on-m1.html</guid>
      <description>&lt;p&gt;I installed a Python 2.7.18 with &lt;code&gt;pyenv&lt;/code&gt; on Apple Silicon,
and I needed that binary to be pure &lt;code&gt;x86_64&lt;/code&gt;.
This was necessary because I needed to load dynamic libraries that were only available in Intel format.&lt;/p&gt;
&lt;p&gt;It is not possible to load &lt;code&gt;x86_64&lt;/code&gt; libraries into an ARM binary.
If you build a multi-arch binary, you need to remember to request Intel every time you run a Python script
which tries to load the Intel-only shared library.
With an Intel-only binary, this will work every time without additional configuration.&lt;/p&gt;
&lt;h1 id=&#34;calling-the-intel-code-in-a-multi-architecture-binary&#34;&gt;
    &lt;a href=&#34;#calling-the-intel-code-in-a-multi-architecture-binary&#34;&gt;
	Calling the Intel code in a multi-architecture binary
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;file&lt;/code&gt; command will tell you if a binary is multi-architecture:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; file /bin/ls
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/bin/ls: Mach-O universal binary with 2 architectures: [x86_64:Mach-O 64-bit executable x86_64] [arm64e:Mach-O 64-bit executable arm64e]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/bin/ls (for architecture x86_64):	Mach-O 64-bit executable x86_64
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/bin/ls (for architecture arm64e):	Mach-O 64-bit executable arm64e
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can manually call the Intel code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; arch -arch x86_64 ls
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Applications		Movies		Music
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you call a binary this way, the first time this will trigger the installation of Rosetta2
(the Intel to ARM JIT compiler) on the Mac.&lt;/p&gt;
&lt;h1 id=&#34;compiling-for-intel-on-m1&#34;&gt;
    &lt;a href=&#34;#compiling-for-intel-on-m1&#34;&gt;
	Compiling for Intel on M1
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;By default, we compile for ARM (M1), and only for this architecture:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; cat hello.c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;int main(void) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;	printf(&amp;#34;Hello!\n&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; cc -o hello hello.c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; file hello
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;hello: Mach-O 64-bit executable arm64
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can call the compiler for Intel, and get an Intel-only binary:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; arch -arch x86_64 cc -o hello hello.c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; file hello
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;hello: Mach-O 64-bit executable x86_64
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./hello
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Hello!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;compiling-python-for-intel-only&#34;&gt;
    &lt;a href=&#34;#compiling-python-for-intel-only&#34;&gt;
	Compiling Python for Intel only
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;pyenv&lt;/code&gt; installation process uses &lt;code&gt;python-build&lt;/code&gt;.
This, by default, uses the &lt;code&gt;readline&lt;/code&gt; and &lt;code&gt;openssl&lt;/code&gt; versions provided by Homebrew to build.
On my system, these are for ARM, so the Python will build and then fail in the linker stage.&lt;/p&gt;
&lt;p&gt;There is an option to force a build ignoring the Homebrew-provided components, &lt;code&gt;PYTHON_BUILD_SKIP_HOMEBREW&lt;/code&gt;.
This is a boolean variable: it is sufficient to set it to any value.
So:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kk:~ kris$ PYTHON_BUILD_SKIP_HOMEBREW=1 arch -arch x86_64 pyenv install 2.7.18
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Downloading openssl-1.1.1v.tar.gz...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-&amp;gt; https://www.openssl.org/source/openssl-1.1.1v.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Installing openssl-1.1.1v...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Installed openssl-1.1.1v to /Users/kris/.pyenv/versions/2.7.18
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Downloading readline-8.0.tar.gz...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-&amp;gt; https://ftpmirror.gnu.org/readline/readline-8.0.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Installing readline-8.0...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Installed readline-8.0 to /Users/kris/.pyenv/versions/2.7.18
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Downloading Python-2.7.18.tar.xz...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-&amp;gt; https://www.python.org/ftp/python/2.7.18/Python-2.7.18.tar.xz
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Installing Python-2.7.18...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;patching file configure
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;patching file configure.ac
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;patching file setup.py
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Installed Python-2.7.18 to /Users/kris/.pyenv/versions/2.7.18
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is indeed the desired binary:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; file ~/.pyenv/versions/2.7.18/bin/python2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/Users/kris/.pyenv/versions/2.7.18/bin/python2: Mach-O 64-bit executable x86_64
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;building-a-virtualenv-for-intel-python-2718&#34;&gt;
    &lt;a href=&#34;#building-a-virtualenv-for-intel-python-2718&#34;&gt;
	Building a &lt;code&gt;virtualenv&lt;/code&gt; for Intel Python 2.7.18
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The virtual environment for Python 2.7 has to be built with an old version of the &lt;code&gt;virtualenv&lt;/code&gt; command,
which is compatible with the old Python:&lt;/p&gt;
&lt;p&gt;We make a &lt;code&gt;testdir&lt;/code&gt;, enter it and set the local Python version to the required version.
We then install an old version of the &lt;code&gt;virtualenv&lt;/code&gt; command, using &lt;code&gt;pip&lt;/code&gt;, globally into the old Python version.
This can then be used to create a virtual environment.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; mkdir testdir
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; testdir
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; pyenv &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; 2.7.18
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; python --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Python 2.7.18
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; which python
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/Users/kris/.pyenv/shims/python
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now the installation of &lt;code&gt;virtualenv&lt;/code&gt; into our Python 2.7.18 instance:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; pip --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;pip 19.2.3 from /Users/kris/.pyenv/versions/2.7.18/lib/python2.7/site-packages/pip (python 2.7)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; pip install --user virtualenv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We now can call this version of &lt;code&gt;virtualenv&lt;/code&gt; for installation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; archaeology
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ~/.local/bin/virtualenv venv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;created virtual environment CPython2.7.18.final.0-64 in 102ms
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; venv/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;(venv) kk:testdir kris$ python --version
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Python 2.7.18
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;(venv) kk:testdir kris$ python
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Python 2.7.18 (default, Dec  5 2023, 12:09:45)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[GCC Apple LLVM 15.0.0 (clang-1500.0.40.1)] on darwin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Type &amp;#34;help&amp;#34;, &amp;#34;copyright&amp;#34;, &amp;#34;credits&amp;#34; or &amp;#34;license&amp;#34; for more information.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;profit&#34;&gt;
    &lt;a href=&#34;#profit&#34;&gt;
	Profit!
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;And that gives us an ancient Python in a foreign machine language, so we can continue with our
software archaeology project.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;(venv) $ arch -arch x86_64 pip install cx_Oracle==7.3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Collecting cx_Oracle==7.3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Successfully built cx-Oracle
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Installing collected packages: cx-Oracle
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Successfully installed cx-Oracle-7.3.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that this will still need an &lt;code&gt;ORACLE_HOME&lt;/code&gt; pointing to your instantclient directory,
and the &lt;code&gt;dylib&lt;/code&gt; files linked from the Python libdir to the instantclient installation.&lt;/p&gt;
&lt;p&gt;So:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ORACLE_HOME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;~/instantclient*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;export ORACLE_HOME=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ORACLE_HOME&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bash_profile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/.pyenv/versions/2.7.18/lib
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in ~/instantclient*/*.dylib*&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt;   ln -s &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With the proper &lt;code&gt;~/instantclient*/network/admin/TNSNAMES.ORA&lt;/code&gt; you can now&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;(venv) $ python2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; import cx_Oracle
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class=&#34;nv&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; cx_Oracle.Connection&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sys&amp;#34;&lt;/span&gt;, &lt;span class=&#34;s2&#34;&gt;&amp;#34;oracle&amp;#34;&lt;/span&gt;, &lt;span class=&#34;s2&#34;&gt;&amp;#34;ORCL&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;cx_Oracle.Connection to sys@ORCL&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>MacOS, vim, git and exit...</title>
      <link>https://blog.koehntopp.info/2023/08/17/macos-vim-git-and-exit.html</link>
      <pubDate>Thu, 17 Aug 2023 01:02:03 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2023/08/17/macos-vim-git-and-exit.html</guid>
      <description>&lt;p&gt;On &lt;code&gt;git commit&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt; invokes an editor (by default: &lt;code&gt;vi&lt;/code&gt;) and allows you to edit a commit message.
If the editor exits with status code 0, the commit message is accepted and used.
If the editor exists with status code &amp;gt;0, this is an error and the commit is aborted.
The commit message is lost.&lt;/p&gt;
&lt;p&gt;On MacOS, calling &lt;code&gt;/usr/bin/vi&lt;/code&gt;, the editor shipped with the OS, starts vim 9.0.1424 in vi mode.
In this mode, if you enter an illegal editor command such as &lt;code&gt;:W&lt;/code&gt;, the editor will exit with status 1.
This will happen even when you enter a legal editor command afterwards.
So&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;:W keks
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;:w keks
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;:q
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;will&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kk:~ kris$ vi
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kk:~ kris$ echo $?
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This does not happen if the same editor is called as &lt;code&gt;vim&lt;/code&gt;.
This does not happen on Ubuntu 22.04, which as vim 8.2.4919 installed – it will exit 0 as &lt;code&gt;vi&lt;/code&gt; or &lt;code&gt;vim&lt;/code&gt;.
This suggests that this behavior of vim 9, when called as &amp;ldquo;vi&amp;rdquo; in compatibility mode, is an &amp;ldquo;improvement&amp;rdquo; that has been added on purpose.
I wonder if that is really the case.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;vim&lt;/code&gt;, the command &lt;code&gt;:&amp;lt;status&amp;gt;cq&lt;/code&gt; to force an exit status.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;:1cq
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kk:~ kris $ echo $?
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also &lt;code&gt;:0cq&lt;/code&gt; to force a zero.
This also works in compatibility mode.
You can, of course, also&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git config --global core.editor &lt;span class=&#34;s2&#34;&gt;&amp;#34;vim&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>MacOS: How to prevent screen blanker</title>
      <link>https://blog.koehntopp.info/2022/07/30/macos-how-to-prevent-screen-blanker.html</link>
      <pubDate>Sat, 30 Jul 2022 05:06:07 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2022/07/30/macos-how-to-prevent-screen-blanker.html</guid>
      <description>&lt;p&gt;When running Keynote, MacOS prevents the screen blanker from kicking in.
I needed a similar thing in one of my Python applications, so I needed to find out how it does that.&lt;/p&gt;
&lt;p&gt;It turns out, there is an API for that:
&lt;a href=&#34;https://developer.apple.com/documentation/foundation/nsprocessinfo/1415995-beginactivitywithoptions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;beginActivity:withOptions:&lt;/code&gt;&lt;/a&gt;

,
which returns an Object token &lt;code&gt;activity&lt;/code&gt;.
Calling &lt;a href=&#34;https://developer.apple.com/documentation/foundation/nsprocessinfo/1411321-endactivity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;endActivity&lt;/code&gt;&lt;/a&gt;


with that Token ends the activity, and resumes the screen blanker countdown.&lt;/p&gt;
&lt;p&gt;There is a list of activity options,
&lt;a href=&#34;https://developer.apple.com/documentation/foundation/nsactivityoptions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;NSActivityOptions&lt;/code&gt;&lt;/a&gt;

.
We are interested into &lt;code&gt;NSActivityIdleDisplaySleepDisabled&lt;/code&gt; and &lt;code&gt;NSActivityUserInteractive&lt;/code&gt;, mostly.&lt;/p&gt;
&lt;p&gt;Interfacing with Objective-C in Python is possible through &lt;code&gt;ctypes&lt;/code&gt;, but that is work.
Work, it turns out, that has already been done in
&lt;a href=&#34;https://github.com/minrk/appnope&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;appnope&lt;/code&gt;&lt;/a&gt;

,
specifically in &lt;a href=&#34;https://github.com/minrk/appnope/blob/c97905ae5d2f5f2ce2fb65ce127a0e5c19ee2c50/appnope/_nope.py#L52-L73&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;_nope.py&lt;/code&gt;&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Integrating that into my PyQt application is trivial.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MacOS: Deleting Relocated Items</title>
      <link>https://blog.koehntopp.info/2020/09/02/macos-relocated-items.html</link>
      <pubDate>Wed, 02 Sep 2020 16:58:53 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2020/09/02/macos-relocated-items.html</guid>
      <description>&lt;p&gt;I had to upgrade my company issued MacBook pro to Catalina for fleet unity reasons. The upgrade left me with a folder &lt;code&gt;Relocated Items&lt;/code&gt; in &lt;code&gt;/Users/Shared/Desktop&lt;/code&gt; and a link to that prominently on my Desktop.&lt;/p&gt;
&lt;p&gt;Deleting that folder moved it to trash. Trying to empty trash then failed. That is because in that folder was several levels deep a folder or link to &lt;code&gt;X11R6&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Apple considers that file outdated, which is why it ended up in &lt;code&gt;Relocated Items&lt;/code&gt;. It also considers this file protected as a system file, so you cannot delete it.&lt;/p&gt;
&lt;p&gt;Not in the GUI nor on the command line, not even as root. In order to delete it you have to boot to single user mode in Recovery and do it there from the command line.&lt;/p&gt;
&lt;p&gt;Step by Step:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Boot to Recovery using Cmd-R. On company systems this is likely protected. In my case I had to select my user and enter a password.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Recovery, start &lt;code&gt;Disk Utility&lt;/code&gt;, select the Mac OS Data Partition (any partition on the system disk will do) and select mount to the right on the &lt;code&gt;Disk Utility&lt;/code&gt; menu. After that all system disk partitions will be mounted and shown no longer greyed out in the Utility.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leave the Utility with Cmd-Q, and from the menu at the top of the screen select Terminal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Terminal, &lt;code&gt;cd /Users/&amp;lt;yourusername&amp;gt;/.Trash&lt;/code&gt;. A &lt;code&gt;ls&lt;/code&gt; should show you &lt;code&gt;Relocated Items&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Delete these using &lt;code&gt;rm -rf &#39;Relocated Items&#39;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reboot using the eponymous item from the Apple Menu.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>ELI5: Epic vs Apple and Google</title>
      <link>https://blog.koehntopp.info/2020/08/14/eli5-epic-vs-apple-and-google.html</link>
      <pubDate>Fri, 14 Aug 2020 10:21:56 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2020/08/14/eli5-epic-vs-apple-and-google.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://twitter.com/jpmens/status/1294156181100007425&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@jpmens asked&lt;/a&gt;

 on Twitter:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/jpmens/status/1294156181100007425&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2020/08/fortnite.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;What is Fortnite? #outingmyself&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Assuming &lt;a href=&#34;https://xkcd.com/1053/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;XKCD 1053&lt;/a&gt;

.&lt;/p&gt;
&lt;h2 id=&#34;fortnite&#34;&gt;
    &lt;a href=&#34;#fortnite&#34;&gt;
	Fortnite
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Fortnite is a game made by Epic Games. They also make the Unreal Engine, which powers many modern computer games. Fortnite together with Roblox and Minecraft it is the set of games played most by people under 20.&lt;/p&gt;
&lt;p&gt;You want to follow &lt;a href=&#34;https://twitter.com/ballmatthew&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Matthew Ball&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Fortnite is a Battle Royal game, a 1st person shooter, in which a matchmaker puts you together with a set of other people of similar skill, drops you into an arena of ever shrinking size. You got to collect ammo and weapons, build fortifications and kill the others.&lt;/p&gt;
&lt;p&gt;Chat, Fun Gizmos and Non-Battle areas exist, and people also use it as a chat and Second Life type of tool to interact with each other (&amp;ldquo;Chat with Avatars&amp;rdquo;). Some of the Gizmos allow you to compose music, emote dances and similar joke things.&lt;/p&gt;
&lt;p&gt;All of these games are &amp;ldquo;Free to Play&amp;rdquo; (Minecraft: You have to buy the game, Fortnite and Roblox: Download and Gameplay is free - you can buy ingame coins and buy Skins or other extras) and not &amp;ldquo;Pay to Win&amp;rdquo;. This makes them popular with the 10-20yo crowd.&lt;/p&gt;
&lt;p&gt;All of these games have very moderate system requirements (Fortnite: Intel Iris Graphics on Mac, GTX 660 on Windows). Minecraft: Any Abacus that runs Java. This again makes them popular with the 10-20yo crowd that often uses pre-owned legacy hardware.&lt;/p&gt;
&lt;p&gt;All of these games have heavy creative options (Minecraft: Modding to Greenland and back, Roblox is a platform for making Minigames, Fortnite has a Creative mode for Socializing and Building) and strong interaction modes.&lt;/p&gt;
&lt;p&gt;This makes it possible for 10-20yo&amp;rsquo;s to interact with people of their age group on their own terms w/o parental supervision, during unstructured play time. This is important to them as part of their &lt;a href=&#34;https://www.amazon.com/-/de/danah-boyd/dp/0300199007&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;social growth process&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Sidenote: While Epic does make games, IMHO their biggest asset is &lt;a href=&#34;https://en.wikipedia.org/wiki/Unreal_Engine#Unreal_Engine_5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Unreal Engine&lt;/a&gt;

 and the tooling that comes with it, which has bascially revolutionized game making.&lt;/p&gt;
&lt;h2 id=&#34;the-conflict&#34;&gt;
    &lt;a href=&#34;#the-conflict&#34;&gt;
	The Conflict
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Apple allows some types of businesses to sell things in-app without charging their legendary 30% premium (eg Supermarkets, Amazon and so on).&lt;/p&gt;
&lt;p&gt;Other businesses (all things software) are banned from direct sales in Apple Apps and are required to handle payments though App Store.&lt;/p&gt;
&lt;p&gt;Apple then takes their 30% cut.&lt;/p&gt;
&lt;p&gt;Epic Games released Fortnite on App Store with Apple and Direct Sales options, direct exactly 30% cheaper.&lt;/p&gt;
&lt;p&gt;Apple banned Fortnite from the App Store.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/TimSweeneyEpic/status/1294076353965428736&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;That is what Epic wanted&lt;/a&gt;

. They are now taking this to court &lt;em&gt;and&lt;/em&gt; are also &lt;a href=&#34;https://www.youtube.com/watch?v=aP6-6Qixaco&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;making fun of Apple&lt;/a&gt;

 for doing this in a big way, typical for Epic and Tim Sweeney.&lt;/p&gt;
&lt;p&gt;Epic Games is not exactly an underdog, even if they position themselves as this in this corporate conflict - they are valued a 17.3 bn USD company, 50% held by Sweeney. But it takes an underdog this size to have a chance to take a bite of out Apple&amp;rsquo;s Lawyers.&lt;/p&gt;
&lt;p&gt;Them winning this is an important step in cracking the App Store monopoly and turning Apple into a better platform. Other companies have taken notice and positioned themselves. Notably all of &lt;a href=&#34;https://en.wikipedia.org/wiki/Match_Group&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Match Group&lt;/a&gt;

, the owner and maker of Tinder, have sided themselves with Epic in this case.&lt;/p&gt;
&lt;p&gt;It is noteworthy that Epic also has the same conflict going on with Google - they did exactly the same thing on the Google Play store, were also delisted yesterday, and are also &lt;a href=&#34;https://www.theverge.com/2020/8/13/21368363/epic-google-fortnite-lawsuit-antitrust-app-play-store-apple-removal&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;suing Google&lt;/a&gt;

 just as they are &lt;a href=&#34;https://www.engadget.com/fortnite-maker-epic-games-sues-apple-195415590.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;suing Apple&lt;/a&gt;

. This is interesting, because OnePlus and LG have been in talks with Epic about preloading Fortnite on the Phone (Ugh, ultimate bloatware!), which is now impossible, because Google prevents this from happening.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>So I am a Windows User now</title>
      <link>https://blog.koehntopp.info/2020/07/07/so-i-am-a-windows-user-now.html</link>
      <pubDate>Tue, 07 Jul 2020 11:15:58 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2020/07/07/so-i-am-a-windows-user-now.html</guid>
      <description>&lt;p&gt;So I am a Windows User now. I have an old MacBook pro, Late-2013 13&amp;quot; Retina, i7, 16 GB, 1 TB SSD, and the battery is done now, after 7 years. Also, the hardware is aging, and I want it refurbished and upgrade the son&amp;rsquo;s equipment (which is the previous 2010 MBP I had at that time).&lt;/p&gt;
&lt;p&gt;Modern Apple is not my thing. I have a company MBP, 2018 Retina 13&amp;quot; Four-Port, i7, 16 GB, and everything about this device is wrong. I cannot for the life of me type on this keyboard, I accidentally hit functions on the touchbar, and the trackpad is so large that I put my hands on it when I don&amp;rsquo;t want to. Also, I had to disable the force-touch functionality because otherwise I would open files instead of selecting them. I have to charge it from the right hand side USB-C connector, because otherwise it would get hot and throttle.&lt;/p&gt;
&lt;p&gt;With this in mind, and the announcement from Apple to move to ARM CPUs plus nailing the device cryptographically shut so that you can&amp;rsquo;t boot other operating systems any more, it was time to move away from MacOS.&lt;/p&gt;
&lt;p&gt;I knew I wanted a device with Touchscreen, a 2-in-1 or detachable, and I have been looking at a number of devices. The Surface Book 3 was my favorite, because you can detach the screen and use it as a tablet, plus it is available with a discrete NVidia graphics card in the keyboard base if you buy the right model. The various Lenovo Yoga variants looked well made and pretty, too.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2020/07/yoga1.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;What is in the box? Machine, USB-C Dongle (HDMI, VGA, USB-A 3.0), Power Supply&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In the end, I chose a Lenovo Yoga C940, i7, 16GB, 1 TB with a NVidia 1650. This came in around 1000 Euro cheaper than the Surface Book 3, which I fully intend to spend on a monitor/docking station. The machine has a 4K touchscreen display (3840 × 2160), a keyboard I can handle, an okay sized touchpad und an awesome (and way too powerful) sound system. The screen is technically glossy, but I seem to be able to work with it just fine.&lt;/p&gt;
&lt;p&gt;The machine came with an older version of Windows 10, which patched and upgraded itself to Build 2004 after an initial configuration. I then went on to upgrade WSL to WSL 2, and started using the Ubuntu 20.04 environment provided by the Microsoft Store.&lt;/p&gt;
&lt;p&gt;This version of WSL 2 does not yet support graphical applications, so I proceeded with installation of VMware workstation  as well. I tried VirtualBox, but all installation attempts of an Ubuntu 20.04 image crashed during installation. VMware Workstation went through at the first attempt and with way less hassle - not unexpected. I have been using VMware Fusion at all times of my Mac carrer in the last 15 years, and it&amp;rsquo;s primary hallmark was &amp;ldquo;It just works, and actually performs quite well&amp;rdquo;, and VMware workstation just did the same.&lt;/p&gt;
&lt;p&gt;I am now in the process of moving all basic applications to Windows, which after 15 years of Mac is quite an adjustment. But at least the communication side of things is somewhat covered: Signal, WhatsApp, Skype (Yes, for Oma), Slack, Discord and Twitter Apps are no problem at all. For email, I had to look around a bit, but I found eM Client to be quite good.&lt;/p&gt;
&lt;p&gt;As a replacement for ReadKit, I need something that can handle around 500 RSS feeds efficiently and ideally synchronizes with a service like Newsblur (or The Old Reader or Feedly), because I also read my RSS on the Cellphone and GrazeTen for Android can sync with these 3 services. What I found to be tolerable seems to be QuiteRSS, but that does not seem to be able to sync at all.&lt;/p&gt;
&lt;p&gt;Since I am over 50, I decided to be less of a speaker and instead encourage others to speak more, hence my need for Office programs can actually be completely covered by Google Office just fine, and LibreOffice seems to work tolerably well, too. Converting all my Keynote Files into Powerpoint/PDF/Slideshare is unfinished, though.&lt;/p&gt;
&lt;p&gt;I am using Gimp and OmniGraffle on the Mac. Gimp is not hard to get, but outside of Visio an OmniGraffle-Replacement seems to be absent.&lt;/p&gt;
&lt;p&gt;In general, the Windows Store seems to be a total loss. It is a source of updates for some onboard applications, so cannot be gotten rid of, but the so called &amp;ldquo;modern Windows&amp;rdquo; applications provided there are usually unmaintained, badly formatted and somewhat broken. In general, it seems that the market share of Windows in terms of licenses sold does in no way reflect the market share of Windows in terms of Developer mindshare, at least judging by the state of the Windows Store.&lt;/p&gt;
&lt;p&gt;On the other hand, working with this piece of hardware and with Windows 10 when it is able to forget it&amp;rsquo;s legacy is a breeze. It&amp;rsquo;s when the varnish wears off and the old XP rears it&amp;rsquo;s head that things get nasty, touch-unfriendly or generally needlessly complicated.&lt;/p&gt;
&lt;p&gt;Python, git and other things are available natively and in WSL just fine, I have PyCharm, Sublime and VScode, and they just work. I got Hugo and Jekyll running in WSL, too. So that part of the system is covered just fine.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2020/07/yoga2.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;5 seconds to the logo, 15 seconds until ready, from a complete cold start&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;And it&amp;rsquo;s fast. I am not speaking just about 12 threads on a NVME disk, I am also speaking about a system that cold-boots faster than a Mac wakes up from deep sleep, and about a graphic subsystem that can handle &amp;ldquo;Assassins Creed: Origins&amp;rdquo; in HD at &amp;ldquo;High&amp;rdquo; with absolutely playable framerates, and that actually manages to drive a Rift S in Elite: Dangerous pretty ok.&lt;/p&gt;
&lt;p&gt;We will see how long it will take me to really convert all the ways I work&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Time Machine Editor</title>
      <link>https://blog.koehntopp.info/2020/05/26/time-machine-editor.html</link>
      <pubDate>Tue, 26 May 2020 15:45:15 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2020/05/26/time-machine-editor.html</guid>
      <description>&lt;p&gt;I have an embedded Mac mini, it drives the local TV screen by doing OpenVPN to Germany, Netflix, Amazon and the local &lt;a href=&#34;https://subsonic.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Subsonic&lt;/a&gt;

. It does not really do much with the local disk, and it does not need to wake up every hour to make a Time Machine backup over the network.&lt;/p&gt;
&lt;p&gt;To change the backup interval, install &lt;a href=&#34;https://tclementdev.com/timemachineeditor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Time Machine Editor&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://tclementdev.com/timemachineeditor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2020/05/tme.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Time Machine Editor can change the Time Machine Backup interval. It has a background daemon that triggers the backups, a GUI application and a command line utility.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Time Machine Editor works with automatic Time Machine backups disabled, which will turn off the local scheduler. It instead installs its own scheduler as a background process, which will then kick off the regular Time Machine backup process, but on the schedule you want. It can control all aspects of Time Machine: remote backups to an external disk as well as local snapshots. It understands applications that prevent display and machine sleep, exclusion times for the night and custom schedules. A command line application, tmectl, allows control of all aspects programmatically as well.&lt;/p&gt;
&lt;p&gt;Because of the way the application is built, it does not require special privileges, and is also not running into System Integrity Protection problems with Catalina.&lt;/p&gt;
&lt;p&gt;The pre-Catalina&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo defaults write /System/Library/LaunchDaemons/com.apple.backupd-auto StartInterval -int &lt;span class=&#34;m&#34;&gt;14400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;does no longer work: It tries to change a &lt;code&gt;plist&lt;/code&gt; in &lt;code&gt;/System&lt;/code&gt; and fails. The approach chosen by Time Machine Editor is cleaner and not subject to these new Apple limitations.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2020/05/tme-before-after.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Energy consumption of the Mac mini before and after installation of Time Machine Editor. I am running a backup every 6h, and that is just fine with this machine and how it is being used.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ignoring Catalina nags</title>
      <link>https://blog.koehntopp.info/2019/10/15/ignoring-catalina-nags.html</link>
      <pubDate>Tue, 15 Oct 2019 11:50:23 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2019/10/15/ignoring-catalina-nags.html</guid>
      <description>&lt;p&gt;Note to self: Ignoring the Catalina Nagscreens is done like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo softwareupdate --ignore &lt;span class=&#34;s2&#34;&gt;&amp;#34;macOS Catalina&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; defaults write com.apple.systempreferences AttentionPrefBundleIDs &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; killall Dock
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And that should make MacOS ignore Catalina until further notice. Further
notice does look like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; /usr/sbin/softwareupdate --reset-ignored
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Catalina: Upgrade carefully.</title>
      <link>https://blog.koehntopp.info/2019/10/08/catalina-upgrade-carefully.html</link>
      <pubDate>Tue, 08 Oct 2019 09:20:08 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2019/10/08/catalina-upgrade-carefully.html</guid>
      <description>&lt;p&gt;Catalina is here. It fixes many things, among them iTunes. On the other
hand, it drops support for 32-Bit MacOS applications.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/catalina.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Consider the upgrade carefully.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; system_profiler SPApplicationsDataType
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;…
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Steam:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;      Version: 1.5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Obtained from: Identified Developer
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Last Modified: 23.08.16, 20:32
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Kind: Intel
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      64-Bit (Intel): No
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Signed by: Developer ID Application: Valve Corporation, Developer ID Certification Authority, Apple Root CA
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Location: /Applications/Steam.app
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;…
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Anything listed with &lt;code&gt;64-Bit (Intel): No&lt;/code&gt; will stop working after the
upgrade. Check before you upgrade, and consider what you will be losing
access to if you perform the upgrade.&lt;/p&gt;
&lt;p&gt;On my box:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apprentice Alf DeDRM Plugin for Calibre&lt;/li&gt;
&lt;li&gt;Civilization V&lt;/li&gt;
&lt;li&gt;CoverScout 3&lt;/li&gt;
&lt;li&gt;Google Music Manager&lt;/li&gt;
&lt;li&gt;Google Photos Backup&lt;/li&gt;
&lt;li&gt;GrandPerspective&lt;/li&gt;
&lt;li&gt;JD-GUI&lt;/li&gt;
&lt;li&gt;Kindle (1.23.1, locked from upgrades)&lt;/li&gt;
&lt;li&gt;Mathematica&lt;/li&gt;
&lt;li&gt;Microsoft Office&lt;/li&gt;
&lt;li&gt;SongGenie 2&lt;/li&gt;
&lt;li&gt;Steam&lt;/li&gt;
&lt;li&gt;TigerVNC&lt;/li&gt;
&lt;li&gt;UnRarX&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of them are unimportant, other things are quite critical, some of them
can&amp;rsquo;t be updated easily.&lt;/p&gt;
&lt;p&gt;At this point, for me this is a hard pass, and a lot of work to be done.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>kauth Handlers in MacOS</title>
      <link>https://blog.koehntopp.info/2018/12/18/kauth-handlers-in-macos.html</link>
      <pubDate>Tue, 18 Dec 2018 09:06:19 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2018/12/18/kauth-handlers-in-macos.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://flylib.com/books/en/3.126.1.140/1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kauth handlers in MacOS&lt;/a&gt;

, from a somewhat outdated MacOS X Internals book.
But a lot of the content is still relevant.
This section is about kauth handlers.
Kauth is a system in MacOS to hook file open and file exec operations.
It is what is being used by all the Corporate Security Malware that the Compliance Guys like to install on your work Mac, and it is one of the most common reasons for MacOS performance problems at work.&lt;/p&gt;
&lt;p&gt;That is, because most Corpsec Malware does install a Kauth handler and then evaluates file open permission synchronously in that handler.
TrendMicro, Cylance, FireEye (xagt) and Websense DLP do this.
File &lt;code&gt;open()&lt;/code&gt; operations are delayed by a factor of 6x to 10x usually:
Unpacking an electron app with 27.000 files on my home Mac takes 3 seconds, and took 27 seconds on my work Mac.&lt;/p&gt;
&lt;p&gt;Usually, these things are also written badly:
Trendmicro for example runs their evaluations in a privileged userland process with ASLR off, so if you craft the right kind of GIF and drop it into &lt;code&gt;$HOME&lt;/code&gt;, it will pop a shell on any Mac running Trendmicro just fine.
That is,  because the offsets are always right &amp;ndash; thanks to ASLR off.&lt;/p&gt;
&lt;p&gt;And Websense DLP did rely on their Kauth handler so much that all files in the installations were world writeable:
&amp;ldquo;protected&amp;rdquo; only by the Kauth handler.
Which made exceptions for Binaries with the right name (among them &amp;ldquo;installd&amp;rdquo;, &amp;ldquo;installer&amp;rdquo;, or &amp;ldquo;shove&amp;rdquo;), so if you rename your cp program to &amp;ldquo;installer&amp;rdquo; you could happily overwrite any of the files &amp;ndash; reboot the box, get your own code executed as root and be done.&lt;/p&gt;
&lt;p&gt;One of the nicest things on the Mac is &lt;a href=&#34;https://www.hopperapp.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HopperApp&lt;/a&gt;

.
This is a very cheap, very well done clone of the basic functionality in IDA Pro, and allows you to have a quick look at the code of these Corpsec kernel extensions and see how they are breaking things, then act on that.
Depending on your alignment you write a report and get a cookie, or you use this for your own purposes.&lt;/p&gt;
&lt;p&gt;In general, a Macbook with Corporate Security Malware is much more easily owned than a stock Apple device.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Watchman</title>
      <link>https://blog.koehntopp.info/2018/02/01/watchman.html</link>
      <pubDate>Thu, 01 Feb 2018 06:06:54 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2018/02/01/watchman.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://facebook.github.io/watchman/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2018/01/watchman-603x640.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Today I was looking for a way to subscribe to file changes in a directory in
MacOS, in order to trigger automatically running commands whenever files
change. Turns out Homebrew has &amp;ldquo;fswatch&amp;rdquo;, which tells you when things
change, but little else.&lt;/p&gt;
&lt;p&gt;Turns out Homebrew has &amp;ldquo;watchman&amp;rdquo;, which does all this, and on multiple
trees, finds changes across restarts and automatically manages a set of
commands for different file endings.&lt;/p&gt;
&lt;p&gt;Also turns out that I know the author. Thanks, Wez!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Knock, Knock</title>
      <link>https://blog.koehntopp.info/2018/01/15/knock-knock.html</link>
      <pubDate>Mon, 15 Jan 2018 20:14:50 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2018/01/15/knock-knock.html</guid>
      <description>&lt;p&gt;What does your Mac do on Startup? &lt;a href=&#34;https://github.com/synack/knockknock&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Knockknock knows&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not properly updated for current versions of MacOS, but it is still
useful. &amp;ldquo;git clone &lt;a href=&#34;https://github.com/synack/knockknock%22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/synack/knockknock&#34;&lt;/a&gt;

 and
&amp;ldquo;/usr/bin/python knockknock.py&amp;rdquo; is sufficient to test.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;TOTAL ITEMS FOUND: 44
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s quite a bit. Apparently, I am starting&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Google Music Manager,&lt;/li&gt;
&lt;li&gt;AirServer,&lt;/li&gt;
&lt;li&gt;Karabiner,&lt;/li&gt;
&lt;li&gt;Alfred 3,&lt;/li&gt;
&lt;li&gt;a Chrome app_mode_loader,&lt;/li&gt;
&lt;li&gt;the Android File Transfer Agent,&lt;/li&gt;
&lt;li&gt;Dropbox, Divvy,&lt;/li&gt;
&lt;li&gt;Expandrive,&lt;/li&gt;
&lt;li&gt;Chrome itself,&lt;/li&gt;
&lt;li&gt;Soundflower,&lt;/li&gt;
&lt;li&gt;an AX88179 USB GBit Ethernet adapter driver,&lt;/li&gt;
&lt;li&gt;Steam Drivers,&lt;/li&gt;
&lt;li&gt;/Library/PrivilegedHelperTools/org.chromium.chromoting.me2me.sh,&lt;/li&gt;
&lt;li&gt;the Steam ipcserver,&lt;/li&gt;
&lt;li&gt;the Expandrive Helper,&lt;/li&gt;
&lt;li&gt;the Skype Helper,&lt;/li&gt;
&lt;li&gt;the OnePasswordNativeMessageHost,&lt;/li&gt;
&lt;li&gt;Expandrive exfs,&lt;/li&gt;
&lt;li&gt;iStatMenus and&lt;/li&gt;
&lt;li&gt;the iStatMenus Agents and Helpers,&lt;/li&gt;
&lt;li&gt;Steamclean,&lt;/li&gt;
&lt;li&gt;the GoogleSoftwareUpdateAgent,&lt;/li&gt;
&lt;li&gt;Tunnelblick LaunchAtLogin.sh,&lt;/li&gt;
&lt;li&gt;and finally an ethcheck Firmware checker.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So much Crap being loaded.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Command line access to the Mac keychain</title>
      <link>https://blog.koehntopp.info/2017/01/26/command-line-access-to-the-mac-keychain.html</link>
      <pubDate>Thu, 26 Jan 2017 20:34:42 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2017/01/26/command-line-access-to-the-mac-keychain.html</guid>
      <description>&lt;p&gt;I am getting my payslips in electronic form, as an encrypted, password
protected PDF. It&amp;rsquo;s not a super secret password, and the encryption is more
against accidentally opening the file than it is to keep the content of the
file actually secret.&lt;/p&gt;
&lt;p&gt;After shipping the PDF home, I am archiving it for tax purposes, but in
order to make the archival safe, I am storing the original file as well as
the decrypted cleartext version of it. To do that, I wrote a shell script,
which contained the password in a variable in clear.&lt;/p&gt;
&lt;p&gt;Discussing that at work had a few people rejecting the storage of keys in a
script in clear as a matter of principle, and the suggestion was to use the
operating system key management service to hold this kind of data.&lt;/p&gt;
&lt;p&gt;Here is how to interact with the key management of MacOS.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-generic-password-payslip-in-my-login-keychain&#34;&gt;
    &lt;a href=&#34;#creating-a-generic-password-payslip-in-my-login-keychain&#34;&gt;
	Creating a generic password &amp;ldquo;payslip&amp;rdquo; in my login keychain
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The command line utility to interact with the Keychain in MacOS is &amp;ldquo;security&amp;rdquo;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; security add-generic-password -a &lt;span class=&#34;nv&#34;&gt;$LOGNAME&lt;/span&gt; -s payslip -w keks 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will create a generic password titled &amp;ldquo;payslip&amp;rdquo; in my default keychain,
in my account, and the password is &amp;ldquo;keks&amp;rdquo;. If you run &amp;ldquo;Keychain Access.app&amp;rdquo;
and check out the content of the keychain, it looks like this:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2017/01/Bildschirmfoto-2017-01-26-um-20.13.38.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;The generic password &amp;ldquo;payslip&amp;rdquo; has been created.&lt;/p&gt;
&lt;p&gt;You can set the content of the &amp;ldquo;Name:&amp;rdquo; field differently, use the -l (label)
option to do that. You can also add content to the &amp;ldquo;Comments:&amp;rdquo; field with
the -j option.&lt;/p&gt;
&lt;h2 id=&#34;access-control&#34;&gt;
    &lt;a href=&#34;#access-control&#34;&gt;
	Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;If you want to see the password, you can always hit the &amp;ldquo;Show password:&amp;rdquo;
field. You will be prompted for your login keychains password (which may or
may not be the login password for your computer). By hitting &amp;ldquo;Always Allow&amp;rdquo;
you will also add &amp;ldquo;Keychain Access&amp;rdquo; as a program to access this information
without password.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2017/01/Bildschirmfoto-2017-01-26-um-20.20.16.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Trying to see the actual password triggers an authentication
dialog.&lt;/p&gt;
&lt;p&gt;Switching from the &amp;ldquo;Attributes&amp;rdquo; tab to the &amp;ldquo;Access Control tab shows us
which programs can always access the password (without a Dialog). It looks
like this:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2017/01/Bildschirmfoto-2017-01-26-um-20.21.51.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Creating the generic password with &amp;ldquo;security&amp;rdquo;, the program gives itself free
access to the data.&lt;/p&gt;
&lt;p&gt;You might see fewer (none) or more programs in this list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;By default, &amp;ldquo;security&amp;rdquo;, which created the password, adds itself to the access control list.&lt;/li&gt;
&lt;li&gt;If you do not want &amp;ldquo;security&amp;rdquo; adding itself to the list, set &amp;ldquo;-T&amp;rdquo; empty to prevent itself from adding:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; security add-generic-password -T &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; -a &lt;span class=&#34;nv&#34;&gt;$LOGNAME&lt;/span&gt; -s payslip -w keks
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Had you hit &amp;ldquo;Always Allow&amp;rdquo; instead of &amp;ldquo;Allow&amp;rdquo; in the &amp;ldquo;Show password:&amp;rdquo;
dialog, &amp;ldquo;Keychain Access&amp;rdquo; would have had itself added as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;getting-the-password-back&#34;&gt;
    &lt;a href=&#34;#getting-the-password-back&#34;&gt;
	Getting the password back
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Here is how to get the password back:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; security find-generic-password -w -a &lt;span class=&#34;nv&#34;&gt;$LOGNAME&lt;/span&gt; -s payslip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you did not allow &amp;ldquo;security&amp;rdquo; to include itself, you will see a permission
prompt on the desktop:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2017/01/Bildschirmfoto-2017-01-26-um-20.28.30.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;You will see this prompt if &amp;ldquo;security&amp;rdquo; created the generic password with -T
&amp;ldquo;&amp;rdquo;, preventing it from adding itself to the access control list.&lt;/p&gt;
&lt;p&gt;Both cases, searching for a password not present or the user hitting &amp;ldquo;Deny&amp;rdquo;
will have the command return with an empty password. The &amp;ldquo;password not
present&amp;rdquo; case will additionally write an error message to stderr, but
unfortunately not set an exit code properly.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt; security find-generic-password -w -a &lt;span class=&#34;nv&#34;&gt;$LOGNAME&lt;/span&gt; -s payslip &lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; $ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$password&lt;/span&gt; keks
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;deleting-a-password&#34;&gt;
    &lt;a href=&#34;#deleting-a-password&#34;&gt;
	Deleting a password&lt;br /&gt;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Just for closure and cleanup:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; security delete-generic-password -a &lt;span class=&#34;nv&#34;&gt;$LOGNAME&lt;/span&gt; -s payslip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Adventures in Mac OS X maintenance</title>
      <link>https://blog.koehntopp.info/2010/02/19/adventures-in-mac-os-x-maintenance.html</link>
      <pubDate>Fri, 19 Feb 2010 14:17:04 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2010/02/19/adventures-in-mac-os-x-maintenance.html</guid>
      <description>&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/mbp.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Nachdem ich neulich meinen Mac in den Service geben mußte, ich für die Zeit einen Ersatz-Mac hatte und ich also zwischen beiden Systemen hin- und her installieren mußte, hier die deutsche Übersetzung einer kleinen Zusammenfassung, die ich für die Firma geschrieben habe.&lt;/p&gt;
&lt;p&gt;Offensichtlich ist es sehr praktisch, dem großen Mac-Gott Time Machine eine Platte zu opfern, weil niemand Backup will und Time Machine sehr gut in Restore ist. In meinem Fall verwende ich eine WD Elements 1TB dafür (etwa 85€), andere in der Firma wollen was kleineres und mit USB Power, nehmen also eine WD Passport (500G @ 92€).&lt;/p&gt;
&lt;p&gt;Diejenigen in der Firma, die ein lokales Linux brauchen, sind mit einem Linux in einer VMware Fusion besser dran als einem Multiboot mit einem nativen Linux. Time Machine alleine reicht schon als Vorteil, und außerdem ist der Wechsel zwischen den Betriebssystemen mit VMware natürlich weniger schmerzhaft als ein Reboot und das Powermanagement vom MacOS ist auch besser als das vom Linux.&lt;/p&gt;
&lt;p&gt;Man kann eine Time Machine Platte bootbar machen. Das erlaubt es einem dann, von der Time Machine Platte zu booten, nachdem man sie angeschlossen hat und den Mac mit gedrückter Option-Taste einschaltet. Im StartupManager kann man dann die Time Machine Platte anwählen und im beginnenden Installationsprozeß statt einer Reinstallation eine Recovery aus der Time Machine Datenbank anwählen. Außerdem hat man Zugriff auf ein Terminal.app und könnte versuchen, den defekten Mac wieder zum Leben zu erwecken.&lt;/p&gt;
&lt;p&gt;Die Platte bekommt man bootbar, indem man Disk Utility startet, die Time Machine Disk anschließt und die erste Installations-DVD ins Laufwerk tut. Die Time Machine Disk in Disk Utility auswählen, den Restore-Tab anklicken, dort die DVD ins Source-Feld und die Time Machine Disk ins Destination Feld, dann Restore drücken. Die Time Machine Disk wird dadurch überschrieben, also bitte sicherstellen, daß da nix wichtiges drauf ist.&lt;/p&gt;
&lt;p&gt;Jetzt hat man eine bootbare Platte - nicht umbenennen. DVD auswerfen, Platte unmounten.&lt;/p&gt;
&lt;p&gt;Beim Anschließen oder Mounten der Platte (mit Disk Utility) öffnet sich diese nun automatisch wie es die originale Installations-DVD auch tut. Das nervt. Also müssen wir sie unblessen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo bless --folder &lt;span class=&#34;s2&#34;&gt;&amp;#34;/Volumes/Mac OS X Install DVD/&amp;#34;&lt;/span&gt; -saveX
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Bless steuert normalerweise was von wo warum gebootet wird, kontrolliert aber auch diese Folder Auto-Open.&lt;/p&gt;
&lt;p&gt;Ich habe diese Disk nun in den Time Machine Preferences zu meiner Time Machine Backup Disk erklärt. Dadurch bekomme ich einen Backups.backupd-Ordner auf der Platte, der irgendwann einmal die ganze Platte voll machen wird. Das dauert aber, und bis dahin kann ich immerhin noch ein Image der zweiten Installations-DVD auf der Platte als compressed dmg ablegen (mit Disk Utility) und auch alle andere Software, die ich für eine Reinstallation brauche ebenfalls dort unterbringen - Time Machine füllt die Platte und löscht dann alte Backups, tastet aber andere Files außerhalb des Time Machine-Ordners nicht an. Ich habe außerdem einen Ordner mit allen notwendigen Lizenz-Schlüsseln auf der Platte angelegt, der Ort erschien mir günstig für so was.&lt;/p&gt;
&lt;p&gt;So vorbereitet kostet mich ein kompletter Verlust des Systems weniger als vier Stunden Wartezeit (so lange dauert ein Time Machine Restore maximal, abhängig im wesentlichen von der Anzahl der Dateien, nicht der Größe des Backups) und ich verliere nie mehr als eine Stunde Arbeitszeit (oder wie oft man auch immer Time Machine laufen läßt).&lt;/p&gt;
&lt;p&gt;Weitere nützliche Werkzeuge auf der Kommandozeile sind diskutil, die Kommandozeilen-Version der Mount/Unmount/Eject-Kommandos von Disk Utility, hdiutil, die Kommandozeilenversion der dmg Management Utilities von Disk Utility, und asr, die Kommandozeilenversion der Restore-Funktionen von Disk Utility. Manpages für diese Werkzeuge sind Teil der Systeminstallation. Bless habe ich ja weiter oben schon erwähnt.&lt;/p&gt;
&lt;p&gt;Besonderer Dank gilt &lt;a href=&#34;https://www.xing.com/profile/Harald_Wagener2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Harald Wagener&lt;/a&gt;

 für seine wertvollen Hinweise. Nützlich war auch &lt;a href=&#34;http://www.macosxhints.com/article.php?story=2008011623365026&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;diese Seite&lt;/a&gt;

 von Mac OS X Hints.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Neues Werkzeug</title>
      <link>https://blog.koehntopp.info/2008/06/11/neues-werkzeug.html</link>
      <pubDate>Wed, 11 Jun 2008 08:24:20 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2008/06/11/neues-werkzeug.html</guid>
      <description>&lt;p&gt;Neuer Job, neues Werkzeug. Diesmal ein MacBook Pro 15&amp;quot;, mit 3 GB RAM und der 200 GB 7200rpm Platte und MacOS X 10.5.3.
Ab Werk ist das System nahezu unbenutzbar.&lt;/p&gt;
&lt;p&gt;Damit das bewohnbar wird, kommen bei mir die folgenden Sachen drauf:&lt;/p&gt;
&lt;p&gt;Für die Shell:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sshkeychain.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SSHKeyChain für iTerm&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://iterm.sf.net&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;iTerm Terminal Client&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cyberduck.ch&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cyberduck sftp/ssh client&lt;/a&gt;

 (Fish ist ja so viel besser, aber ein Mac kann das noch nicht)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rudix.sf.net&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rudix&lt;/a&gt;

, damit die Kommandozeile nicht so stinkt.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Für die Arbeit:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mysql.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ein aktuelles MySQL&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.neooffice.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NeoOffice&lt;/a&gt;

, das StarOffice für den Mac&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://caminobrowser.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Camino&lt;/a&gt;

, ein Firefox für den Mac&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Für die Kommunikation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://skype.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Skype&lt;/a&gt;

, funktioniert ganz ausgezeichnet ohne Headset und mit der eingebauten Kamera, ich bin beeindruckt.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.adiumx.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Adium&lt;/a&gt;

, kann alles außer Skype&lt;/li&gt;
&lt;li&gt;Colloquy IRC Client, aber ich nehme weiter mein irssi im Screen auf dem Dedi, glaube ich.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.barebones.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Text Wrangler&lt;/a&gt;

, der Editor der Wahl für uns Nicht-Emacs-Benutzer&lt;/li&gt;
&lt;li&gt;NetNewsWire Feed Reader, jedenfalls solange Akregator noch nicht geht&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Von Till:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eine KDE 4 Beta mit kmail und dem Rest von Kontact auf Native-Qt-KDE ohne X11. Das ist leider noch ein wenig broken und schlecht integriert. Ich will mein Amarok!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Zum Gucken:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://perian.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Perian&lt;/a&gt;

, die Codec-Sammlung für Quicktime, damit es nicht mehr saugt.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.videolan.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VLC&lt;/a&gt;

 für den Mac ist echt gut&lt;/li&gt;
&lt;li&gt;MPlayer OS X, eher nicht so stabil&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://handbrake.fr/?article=download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Handbrake&lt;/a&gt;

, weil niemand so viele DVDs mit sich herumschleppen will, und man das Zeugs ja auch mal auf dem iPod haben will&lt;/li&gt;
&lt;li&gt;Transmission, als Bittorrent Client der Wahl&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Weiteres Zeugs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tunnelblick.net&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tunnelblick VPN Controller&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.growl.info&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Growl&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://journler.com/download/index.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Journler&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;Nokia E90 iSync Conduit, von Nokia&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jetzt fehlt noch ein sinnvoller Windowmanager, der Focus-Follow-Mouse richtig kann, und der die Fenster nach Dokumenten und nicht nach Anwendungen gruppiert.
So geht das jedenfalls gar nicht.
Oh, und ein Tastatur-Layout-Editor, denn die Belegung von dem Ding hier ab Werk ist mal so richtig kaputt.
In Englisch und in Deutsch.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
