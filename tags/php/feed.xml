<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php on Die wunderbare Welt von Isotopp</title>
    <link>https://blog.koehntopp.info/tags/php.html</link>
    <description>Recent content in Php on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>kris-blog@koehntopp.de (Kristian Köhntopp)</managingEditor>

    
    <webMaster>kris-blog@koehntopp.de (Kristian Köhntopp)</webMaster>

    
    <lastBuildDate>Fri, 07 Feb 2025 11:16:02 +0000</lastBuildDate><atom:link href="https://blog.koehntopp.info/tags/php/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Watchman</title>
      <link>https://blog.koehntopp.info/2018/02/01/watchman.html</link>
      <pubDate>Thu, 01 Feb 2018 06:06:54 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2018/02/01/watchman.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://facebook.github.io/watchman/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2018/01/watchman-603x640.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Today I was looking for a way to subscribe to file changes in a directory in
MacOS, in order to trigger automatically running commands whenever files
change. Turns out Homebrew has &amp;ldquo;fswatch&amp;rdquo;, which tells you when things
change, but little else.&lt;/p&gt;
&lt;p&gt;Turns out Homebrew has &amp;ldquo;watchman&amp;rdquo;, which does all this, and on multiple
trees, finds changes across restarts and automatically manages a set of
commands for different file endings.&lt;/p&gt;
&lt;p&gt;Also turns out that I know the author. Thanks, Wez!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP: Understanding unserialize()</title>
      <link>https://blog.koehntopp.info/2017/08/11/php-understanding-unserialize.html</link>
      <pubDate>Fri, 11 Aug 2017 13:50:20 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2017/08/11/php-understanding-unserialize.html</guid>
      <description>&lt;p&gt;The history of &lt;code&gt;serialize()&lt;/code&gt; and &lt;code&gt;unserialize()&lt;/code&gt; in PHP begins with Boris
Erdmann and me, and we have to go 20 years back in time. This is the day of
the prerelease versions of PHP 3,
&lt;a href=&#34;http://marc.info/?l=php-general&amp;amp;amp;m=90222513233060&amp;amp;amp;w=2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;some time in 1998&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Boris and I were working on code for a management system for employee education
for German Telekom. The front side is a web shop that sells classes and
courses, the back end is a complex structure that manages attendance, keeps
track of a line manager approval hierarchy and provides alternative dates
for overfull classes. In order to manage authentication, shopping carts and
other internal state, we needed something that allowed us to go from a
stateless system to a stateful thing, securely. The result was
&lt;a href=&#34;https://github.com/bevhost/phplib&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PHPLIB&lt;/a&gt;

, and especially the code in
&lt;a href=&#34;https://github.com/bevhost/phplib/blob/master/inc/session.inc#L272-L318&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;session.inc&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;That code contained a function &lt;code&gt;serialize()&lt;/code&gt;, which created a stringified
representation of a PHP variable and appended it to a string. There was no
&lt;code&gt;unserialize()&lt;/code&gt; necessary, because &lt;code&gt;serialize()&lt;/code&gt; generated PHP code.
&lt;code&gt;eval()&lt;/code&gt; would &lt;code&gt;unserialize()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;One of the problems&lt;/strong&gt; we had to solve was that PHP3 was slow. So if we
were to write out a serialized representation of variables, we would have to
write a parser for that, and that parser better be fast, because it would be
executed at the beginning of each and every page load. We already had such a
parser, and it was the fastest parser available, PHP itself. So we decided
to write a function that takes a variable, recurses through that variable
and generated PHP code to recreate the variable if that code would be
executed.&lt;/p&gt;
&lt;p&gt;For scalars,
&lt;a href=&#34;https://github.com/bevhost/phplib/blob/master/inc/session.inc#L313&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;that is trivial&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;For an array,
&lt;a href=&#34;https://github.com/bevhost/phplib/blob/master/inc/session.inc#L313&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;that is possible with a simple recursion over each element&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;For objects, things are complicated.&lt;/p&gt;
&lt;p&gt;Firstly, in PHP3, an object does not have the slightest clue what it&amp;rsquo;s
classname is. Secondly, an object might have instance variables that we do
not want to be part of the stringified representation of the object, for
example file and image file handles or other resources. We solved both
problems by requiring serializable objects to have metadata instance
variables, &lt;code&gt;classname&lt;/code&gt; and &lt;code&gt;persistent_slots&lt;/code&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;For unserialize, we simply executed that code inside an &lt;code&gt;eval()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;From PHP 4 onward, Sascha Schumann wrote a C implementation of session
management that became a standard part of PHP, which was largely based on
our ideas. Unlike us, he made PHP store session data in the filesystem,
inheriting our idea of probabilistic session expiration. He also converted
the data format from PHP Code to the current representation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Another problem that needed adressing was code uniformity:&lt;/strong&gt;
If you load a serialized object written by another web page of your
application, that object has a class. And the code for that class needs to
be loaded before you can load and re-instantiate that object. Basically, you
saved an instance &lt;code&gt;$a&lt;/code&gt; of &lt;code&gt;DemoClass&lt;/code&gt;, and if you load that instance again,
running &lt;code&gt;unserialize()&lt;/code&gt; on it, PHP needs to know what a &lt;code&gt;DemoClass&lt;/code&gt; is and
how to make one, using &lt;code&gt;$a = new DemoClass()&lt;/code&gt;, before it can fill in the
values of all instance variables. So the includes of your app better be the
same on all pages, or you invent the
&lt;a href=&#34;http://php.net/manual/en/function.autoload.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Autoloader&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;The Autoloader originally was a simple callback function that would be
invoked every time you want to make an instance of an unknown class. The
function would get the name of the missing class as a parameter, and would
then be responsible to produce a class definition for that class.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__autoload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$missing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Class &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$missing&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; is missing.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$missing&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.class.php&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DoesNotExist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is your classic suicide autoloader: Whenever an undefined class is
being encountered, &lt;code&gt;__autoload()&lt;/code&gt; is being called with that classname. It
would then try to include a file with that name (and all dots and slashes
that you manage to falsify into that name) and hope that this would contain
code that defined a class with a matching name.&lt;/p&gt;
&lt;p&gt;Real autoloaders should not look like this (but often they are close enough
to this code to contain exploitable security problems).&lt;/p&gt;
&lt;p&gt;Today the autoload mechanism of PHP is more complicated. It has a
&lt;a href=&#34;http://php.net/manual/en/function.spl-autoload.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;default autoloader&lt;/a&gt;

,
&lt;a href=&#34;http://php.net/manual/en/function.spl-autoload-register.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a mechanism to manage a stack of autoloaders&lt;/a&gt;

,
and a bunch of &lt;a href=&#34;http://php.net/manual/en/function.spl-autoload-extensions.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;other&lt;/a&gt;


&lt;a href=&#34;http://php.net/manual/en/function.include.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;things&lt;/a&gt;

 such as file
extensions and include path names to influence all that. It is also quite
good,
&lt;a href=&#34;https://github.com/Sereal/Sereal/blob/master/README.pod&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;even if more sophisticated serializers exist&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So what is the state of &lt;code&gt;unserialize()&lt;/code&gt; in PHP these days, and why?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2017/08/Screen-Shot-2017-08-11-at-13.44.00.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/nikita_ppv/status/895571304325062656&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;That was a controversial Tweet&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;It links to this:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2017/08/do-not-unserialize-foreign-code.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://php.net/unserialize&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Really Good Advice™&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;People object:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2017/08/how-does-this-solve-anything.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/buherator/status/895933031529275392&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;People object&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;but given the little tour above, you should be able to understand how
&lt;code&gt;unserialize()&lt;/code&gt; cannot really be made safe for import of foreign data. You can
&lt;code&gt;unserialize()&lt;/code&gt; stuff your code has written, after having verified that the
data you read still is the data you have written, using salted hash_hmac()s
on said data. That&amp;rsquo;s going to be reasonably safe.&lt;/p&gt;
&lt;p&gt;You can&amp;rsquo;t, ever, use &lt;code&gt;unserialize()&lt;/code&gt; as a data interchange format with other
application or an end user. &lt;code&gt;unserialize()&lt;/code&gt; is not an exposable API. Never
was. Other functions and formats for this exist. Use those. Here is some
code to try:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#! /usr/local/bin/php 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;show_serialize1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;serialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;show_serialize2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;fnorp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;glorp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;dorp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;serialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;show_serialize3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DemoClass&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$priv&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;priv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$prot&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;prot&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$pub&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;pub&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Constructed.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;To be serialized&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;priv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;prot&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;pub&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__wakeup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Just unserialized.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DemoClass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;serialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;show_serialize4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;References inside an array work:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;print_r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;References across unserialize:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;unserialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;serialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;b is unserialized a:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;print_r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Does the ref still work?&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;print_r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;show_unserialize1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;file_get_contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;unserialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;print_r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;define_democlass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;We want &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$class&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; defined.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DemoClass&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$priv&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;fnorp&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$prot&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;glorp&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$pub&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;dorp&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Constructed.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;To be serialized&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;priv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;prot&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;pub&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__wakeup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Just unserialized.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;show_unserialize2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;spl_autoload_register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;define_democlass&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;file_get_contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;unserialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;print_r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Please start with &amp;#39;ser&amp;#39; or &amp;#39;unser&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ser1&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;show_serialize1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ser2&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;show_serialize2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ser3&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;show_serialize3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ser4&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;show_serialize4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;unser1&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;show_unserialize1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;unser2&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;show_unserialize2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Wot?&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can use this to see what serialized data looks like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./probe.php ser1&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; cat demo&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;i:1; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;More complicated stuff such as arrays:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./probe.php ser2&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; cat demo&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;a:3:{i:0;s:5:&amp;#34;fnorp&amp;#34;;i:1;s:5:&amp;#34;glorp&amp;#34;;i:2;s:4:&amp;#34;dorp&amp;#34;;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Also, references half-work, if they are internal:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./probe.php ser4 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;References inside an array work: 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Array ( [0] =&amp;gt; 2 [1] =&amp;gt; 2 ) 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;References across unserialize: 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;b is unserialized a:Array ( [0] =&amp;gt; 2 [1] =&amp;gt; 2 ) 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Does the ref still work? 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Array ( [0] =&amp;gt; 3 [1] =&amp;gt; 3 ) 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;but serializing a reference $b that points to $a does not work: The value $b
is referencing is saved, and the unserialized variable will have a value,
but will not reference the previous value. There is no error or warning.&lt;/p&gt;
&lt;p&gt;Here is what we do to Objects:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./probe.php ser3&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; cat demo&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Constructed. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;To be serialized 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;O:9:&amp;#34;DemoClass&amp;#34;:3:{s:15:&amp;#34;DemoClasspriv&amp;#34;;s:4:&amp;#34;priv&amp;#34;;s:7:&amp;#34;\*prot&amp;#34;;s:4:&amp;#34;prot&amp;#34;;s:3:&amp;#34;pub&amp;#34;;s:3:&amp;#34;pub&amp;#34;;} 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This shows how the contructor is being executed, how the &lt;code&gt;__sleep()&lt;/code&gt;
callback is called and the content of the serialized file with the
stringified DemoClass instance referencing the class name. If we load this
without DemoClass being defined, we get&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./probe.php unser1 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;__PHP_Incomplete_Class Object ( 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [__PHP_Incomplete_Class_Name] =&amp;gt; DemoClass 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [priv:DemoClass:private] =&amp;gt; priv 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [prot:protected] =&amp;gt; prot 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [pub] =&amp;gt; pub 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can load DemoClass using an autoloader we define. Then we get&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./probe.php unser2 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;We want DemoClass defined. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Just unserialized. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;DemoClass Object ( 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [priv:DemoClass:private] =&amp;gt; priv 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [prot:protected] =&amp;gt; prot 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [pub] =&amp;gt; pub 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can see the Autoloader being called, the &lt;code&gt;__wakeup()&lt;/code&gt; function running
(it didn&amp;rsquo;t in the example before!) and then the properly re-instantiated
object.&lt;/p&gt;
&lt;p&gt;Note that our new version of DemoClass, as defined by the autoloader, does
define different default values for the instance variables so we can show
that the values from the file are being loaded.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP 7: mysql extension deprecated</title>
      <link>https://blog.koehntopp.info/2017/01/23/php-7-mysql-extension-deprecated.html</link>
      <pubDate>Mon, 23 Jan 2017 15:13:12 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2017/01/23/php-7-mysql-extension-deprecated.html</guid>
      <description>&lt;p&gt;In &lt;a href=&#34;http://kuehnast.com/s9y/archives/650-mysql-nach-PHP-7-retten.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mysql() nach PHP 7
retten&lt;/a&gt;

,
Charly Kühnast explains how you can get the deprecated and
disabled mysql extension back in PHP 7. You shouldn&amp;rsquo;t. There are
many reasons for this.&lt;/p&gt;
&lt;p&gt;One of them being that none of the newer features in MySQL can
be used with the old mysql extensions. There is an
&lt;a href=&#34;http://php.net/manual/en/mysqlinfo.api.choosing.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;overview&lt;/a&gt;


in the PHP documentation that explains exactly what you are
missing.&lt;/p&gt;
&lt;p&gt;One of the things that you are missing is support for prepared
statements. Prepared statements are a mechanism in which you
write SQL statements with placeholders for variables, and then
later bind values to the placeholders using a &amp;ldquo;bind&amp;rdquo; call or as
part of the &amp;ldquo;execute&amp;rdquo; call which is actually running the
statement.&lt;/p&gt;
&lt;p&gt;In any case, the variables are being escaped properly
automatically, making SQL injection a lot harder. This is not
just a problem limited to PHP - a search for bind and execute
other sources can be very instructive. For example, the sources
of Opennebula or in older versions of Owncloud (up to and
including version 7) are rich treasure troves of potential
exploits.&lt;/p&gt;
&lt;p&gt;So currently the situation is as follows:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2017/01/mysql_protokolle-1.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;There are three extensions at the PHP level, one of which is deprecated and
disabled in PHP 7:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The old mysql extension is no longer available by default, and
for good reasons. Do not use it, do not attempt to use code
that uses it.&lt;/li&gt;
&lt;li&gt;The mysqli extension has been around for very many years, and
offers a procedural and an object oriented interface, and
makes &amp;ldquo;newer&amp;rdquo; MySQL features available, including prepared
statements.&lt;/li&gt;
&lt;li&gt;The PDO_mysql extension has been around for many years, too,
and offers an object oriented, and portable across databases
interface. It also allows access to all &amp;ldquo;newer&amp;rdquo; MySQL
features.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The wire protocol of all of these extensions is implemented by a
C-level library, against which the extension can be linked. A
&lt;a href=&#34;http://php.net/manual/en/mysqlinfo.library.choosing.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;manual page&lt;/a&gt;


explains the choices.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Traditionally that has been the Oracle/MySQL C-API
(&amp;ldquo;libmysqlclient&amp;rdquo;, &amp;ldquo;Connector/C&amp;rdquo;), which comes with the
database server. It is available on the GPL, which is a
license different from the PHP license of the rest of the PHP
proper, and it has it&amp;rsquo;s own memory management, which is
different from the PHP native memory management.&lt;/li&gt;
&lt;li&gt;Since PHP 5.3, there is mysqlnd (the &amp;ldquo;native driver&amp;rdquo;, ND). It
re-implements the MySQL wire protocol, and is available under
the same license as PHP itself. It also uses the same memory
management that PHP uses, which makes it faster (no copying)
and more efficient (no duplication of values). It is the
default on a normal PHP build these days.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-you-should-be-using&#34;&gt;
    &lt;a href=&#34;#what-you-should-be-using&#34;&gt;
	What you should be using:
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;These days, your code should not be using the mysql extension.
So you will be using mysqli or PDO_mysql, depending on your
needs, with the underlying implementation of the native driver
doing the heavy lifting.&lt;/p&gt;
&lt;p&gt;Do not attempt to port mysql-Extension based code to PHP 7
without refactoring it for prepared statements, please.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>15 Jahre PHP</title>
      <link>https://blog.koehntopp.info/2010/06/07/15-jahre-php.html</link>
      <pubDate>Mon, 07 Jun 2010 12:01:00 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2010/06/07/15-jahre-php.html</guid>
      <description>&lt;p&gt;Morgen ist der 8. Juni 2010, und damit wird &lt;a href=&#34;http://groups.google.ch/group/comp.infosystems.www.authoring.cgi/msg/cc7d43454d64d133&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PHP 15 Jahre
alt&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Die aktuelle Version von PHP ist 5.3.&lt;/p&gt;
&lt;p&gt;Seit &lt;a href=&#34;https://blog.koehntopp.info/2005/06/07/zehn-jahre-php.html&#34;&gt;dem letzten großen Jubiläum&lt;/a&gt;

 vor 5
Jahren hat sich PHP weiterentwickelt:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://php.net/releases/5_1_0.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PHP 5.1&lt;/a&gt;

 vom 24. November 2005 war in
erster Linie ein Performance-Release,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://php.net/releases/5_2_0.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PHP 5.2&lt;/a&gt;

 folgte kaum ein Jahr später, am
2. November 2006, und brachte weitere Performanceverbesserungen, die immer
noch viel zu wenig verwendete ext/filter und den FAQ-Klassiker &amp;lsquo;upload
progress tracking&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bis zu
&lt;a href=&#34;http://php.net/releases/5_3_0.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PHP 5.3&lt;/a&gt;

 sollte es noch weitere 3 Jahre
dauern: Am 30. Juni 2009, kurz nach dem 14. Geburtstag von PHP, erschien
dieses Release, mit vielen lange ersehnten und vielen lange umstrittenen
neuen Eigenschaften - hätte der Unicode-Support nicht gefehlt, hätte es PHP
6.x heißen können.&lt;/p&gt;
&lt;p&gt;Neu in 5.3 sind:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://de2.php.net/namespaces&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Namespaces&lt;/a&gt;

 zum Beispiel, die eigentlich
alle haben wollten, bei denen aber kaum jemand mit der Wahl des
Namespace-Separators, dem Backslash, einverstanden war.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://de2.php.net/lsb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Late Static Binding&lt;/a&gt;

, das viele OOP-Schmerzen linderte,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://de2.php.net/manual/en/functions.anonymous.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;anonyme Funktionen&lt;/a&gt;


(Lambda-Funktionen und Closures),&lt;/li&gt;
&lt;li&gt;NOW Dokumente (eine Erweiterung von Here-Dokumenten),&lt;/li&gt;
&lt;li&gt;der verkürzte Ternary &amp;ldquo;expr1?:expr3&amp;rdquo;, ein&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://de2.php.net/goto&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;goto&lt;/a&gt;

 (komplett mit Velociraptor!),&lt;/li&gt;
&lt;li&gt;und das lange fehlende
&lt;a href=&#34;http://de2.php.net/__callstatic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;__callStatic&lt;/a&gt;

.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dazu dann noch Garbage Collection als Ergänzung zum Refcounting, der mysqlnd
MySQL Native Driver (der ZVAL zur Repräsentation von MySQL-Resultsets
verwendet), Windows 64 Bit-Support, und natürlich wie jedes PHP Release
bisher: noch mehr Module.&lt;/p&gt;
&lt;p&gt;Denn trotz all der OOP-Dekoration und den vielen anderen Verbesserungen ist
PHP immer noch eines: Die Borg. Es ist eine Plattform, mit der sich externe
C-Bibliotheken sehr leicht als Bibliotheken in einer dynamischen Sprache
verfügbar machen lassen. PHP ist daher eine Basis für Glue-Code, Rapid
Prototyping und schnelle und flexible Anwendungserstellung.&lt;/p&gt;
&lt;p&gt;Wobei jetzt seit dem 2. Februar diesen Jahres auch der umgekehrte Weg offen
steht:
&lt;a href=&#34;http://developers.facebook.com/news.php?story=358&amp;amp;blog=1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Facebooks HipHop&lt;/a&gt;


macht aus PHP-Skripten C- bzw. C++-Source, der sich dann compilieren und als
statisches Binary verwenden läßt.&lt;/p&gt;
&lt;p&gt;Und so kommt es, daß die beliebteste Anfänger-Programmiersprache der Welt
zugleich diejenige Plattform ist, auf denen die größten Websites der Welt
laufen.&lt;/p&gt;
&lt;p&gt;Nebenbei bemerkt: Falls Ihr &lt;em&gt;immer&lt;/em&gt; noch PHP 4 einsetzt - heute wäre ein
guter Tag, ein PHP 5.3 zu installieren und den Kram da hin zu migrieren. PHP
5 erschien am 13. Juli 2004. Das ist beinahe 6 Jahre her.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>10 Jahre PHPLIB</title>
      <link>https://blog.koehntopp.info/2008/05/29/10-jahre-phplib.html</link>
      <pubDate>Thu, 29 May 2008 19:56:48 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2008/05/29/10-jahre-phplib.html</guid>
      <description>&lt;p&gt;Vor etwas mehr als 10 Jahren, am 19. Mai 1998, schrieb ich
&lt;a href=&#34;http://marc.info/?l=php-general&amp;amp;m=90222497032618&amp;amp;w=2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;auf php-general&lt;/a&gt;

 von einer PHP Standardbibliothek.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PHP should ship with, and install by default, a standard library. This
library should offer certain standard functionality that is often required
in larger web projects.The language itself does not need to support any of
the functionality that should be in the library (see below). In fact,
quite a lot of PHP special functions are probable candidates for library
functions that could (and perhaps should) be removed from the language
core, if you are into language purity (I am not). What PHP needs in my
personal opinion is a more stable, better debugged and better equipped
modularization mechanism (and better namespace management).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Wenig später, Ende Juni, kam dann die Ankündigung
&lt;a href=&#34;http://marc.info/?l=php-general&amp;amp;m=90222503034131&amp;amp;w=2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;von Sessionvariablen und Authentisierung&lt;/a&gt;


in einem runterladbaren Paket. Im Juli gab es dann die erste Version mit
&lt;a href=&#34;http://marc.info/?l=php-general&amp;amp;m=90222513232492&amp;amp;w=2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PHP 3 Objekten&lt;/a&gt;

. Um diese Zeit ging dann auch
&lt;a href=&#34;http://marc.info/?l=php-general&amp;amp;m=90222513233868&amp;amp;w=2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;die Supportsite&lt;/a&gt;

 online.
Das Projekt idlet jetzt unter anderer Führung auf
&lt;a href=&#34;http://phplib.sourceforge.net&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SourceForge&lt;/a&gt;

 rum - es hat sich inzwischen überlebt.&lt;/p&gt;
&lt;p&gt;Die Mails
&lt;a href=&#34;http://marc.info/?l=phplib&amp;amp;m=94064176914442&amp;amp;w=2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Keeping state at the server&lt;/a&gt;

 und
&lt;a href=&#34;http://marc.info/?l=phplib&amp;amp;m=94064176914442&amp;amp;w=2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;What was your name, again?&lt;/a&gt;

 erklären die Ideen
und Konzepte dahinter.&lt;/p&gt;
&lt;p&gt;PHPLIB hat das Konzept der Session in PHP eingeführt und war die
Default-Bibliothek dafür in PHP 3. Sascha Schumann hat den Code dann in PHP4
in den PHP-Kern selber überführt. PHPLIB hat außerdem das Konzept des
Datenbankwrappers in PHP eingeführt und eine der ersten
Template-Bibliotheken enthalten.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Parameterdeklarationen für Webseiten</title>
      <link>https://blog.koehntopp.info/2007/03/30/parameterdeklarationen-fur-webseiten.html</link>
      <pubDate>Fri, 30 Mar 2007 11:47:38 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2007/03/30/parameterdeklarationen-fur-webseiten.html</guid>
      <description>&lt;p&gt;Es ist mal wieder Zeit, sehr alte Hüte rauszukramen. Heute habe ich mir dienstlich eine Datenbank angesehen, die von PHP aus angesprochen wird. Das PHP, das dort verwendet wird, ist sehr loses PHP, also ohne die Verwendung eines großartiges Frameworks geschrieben. Entsprechend bin ich quasi sofort über SQL-Injections und XSS gefallen.&lt;/p&gt;
&lt;p&gt;Denn schon nach kurzem Suchen findet man Code wie den folgenden:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$theValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_REQUEST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;theValue&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$theValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$where&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34; where theColumn = &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$theValue&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Eigentlich hat der betrachtete Code eine &lt;code&gt;cleanup()&lt;/code&gt;-Funktion, die für jeden Wert aufgerufen werden soll, und die nicht nur den Typ des Wertes deklariert, sondern auch das notwendige Escapen der Werte &amp;ldquo;in place&amp;rdquo; vornimmt.&lt;/p&gt;
&lt;p&gt;Das ist aber in mehrfacher Hinsicht unschön.&lt;/p&gt;
&lt;p&gt;Wenn man Code wie&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$_REQUEST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;theValue&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cleanup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_REQUEST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;theValue&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;schreibt, und vergisst diesen Cleanup-Aufruf einzufügen, dann haben wir keinen bemerkbaren Fehler: Der Folgecode, der auf &lt;code&gt;$_REQUEST[&#39;theValue&#39;]&lt;/code&gt; zugreift, bekommt Werte zu sehen und bleibt nicht mit einer Fehlermeldung &amp;ldquo;Keine Inputreinigung vorgenommen!&amp;rdquo; stehen.&lt;/p&gt;
&lt;p&gt;Außerdem sind die angewendeten Typprüfungen nicht flexibel genug und gehen nicht weit genug. &amp;rsquo;text&amp;rsquo; erzeugt im betrachteten Code gerade mal ein &lt;code&gt;mysql_real_escape_string()&lt;/code&gt;, aber wendet keine weitergehenden Prüfungen auf den Eingabewert ein. Außerdem werden Eingabewerte, die für die Seite gar nicht da sein dürfen, trotzdem akzeptiert und dann vielleicht ignoriert – vielleicht aber auch nicht.&lt;/p&gt;
&lt;p&gt;(Das folgende Codebeispiel zum Runterladen: [input_validation.php.txt](/uploads/input_validation.php.txt&amp;quot; title=&amp;ldquo;input_validation.php.txt&amp;rdquo; target=&amp;quot;_blank))&lt;/p&gt;
&lt;p&gt;Kurz gesagt: Was ich möchte ist eigentlich eine Typdeklaration für eine PHP-Seite, die die Eingabeparameter mit Namen und Typprüfungen deklariert.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$cleaners&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;county&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;check&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;text_regex&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;pattern&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;[a-zA-Z0-9]+&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;year&amp;#34;&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;check&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;int_minmax&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;min&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1834&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;max&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1864&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;quarter&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;check&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;int_enum&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;values&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ich will dann eine Eingabeprüfung, die ein Input-Array durchgeht und die Cleaners der Reihe nach anwendet. Das Resultat ist eine optionale Liste von Fehlern und ein gesäubertes Input-Array &lt;code&gt;$_CLEAN&lt;/code&gt;, das vom &lt;code&gt;$_REQUEST&lt;/code&gt;-Array verschieden ist.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// simulated input
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_REQUEST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;county&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;someword&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;year&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1900&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;quarter&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;bogus&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// collect error messages
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_ERROR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// clean it up
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_CLEAN&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;clean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_REQUEST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$cleaners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// the cleaned input
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;cleaned input&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_CLEAN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// the error messages
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;collected errors&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Fehlt der &lt;code&gt;clean()&lt;/code&gt;-Aufruf am Anfang einer Seite, ist &lt;code&gt;$_CLEAN&lt;/code&gt; leer und späterer Code, der &lt;code&gt;$_CLEAN&lt;/code&gt; referenziert, kann nicht funktionieren – der Fehler wird sofort bemerkt.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$_CLEAN&lt;/code&gt; kann nur Werte enthalten, deren Namen als Keys in &lt;code&gt;$cleaners&lt;/code&gt; deklariert sind – undeklarierte Eingabewerte existieren nicht mehr in unserem Programm. &lt;code&gt;$_CLEAN&lt;/code&gt; kann außerdem nur Werte enthalten, für die die in &lt;code&gt;$cleaners[$k][&#39;check&#39;]&lt;/code&gt; deklarierten Checkerfunktionen existieren – Deklarationsfehler bei Checkerfunktionen führen zu Programmabbruch und werden so sofort bemerkt. Schließlich kann &lt;code&gt;$_CLEAN&lt;/code&gt; nur Werte enthalten, für die die angegebenen Checkerfunktionen erfolgreich waren.&lt;/p&gt;
&lt;p&gt;Eine Checkerfunktion hat den Namen &lt;code&gt;check_...&lt;/code&gt; und gibt ein Paar (Wert, Fehlermeldung) zurück. Wenn der Wert &lt;code&gt;NULL&lt;/code&gt; ist, ist eine Fehlermeldung vorhanden und kann eingesammelt werden – der Checker ist fehlgeschlagen. In allen anderen Fällen ist der Checker erfolgreich.&lt;/p&gt;
&lt;p&gt;Diese Bedingungen sind schnell runtergeschrieben und sehen in Code dann so aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;clean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$cleaners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$E&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// collected results in $C, collect errors in $E (which is optional)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$C&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// scan the request variables
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$R&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Check for bogus values.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array_key_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$cleaners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;*** WARNING: Skipped bogus value &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; =&amp;gt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$v\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// If we make it to here, the value should be imported.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// generic cleanup
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;get_magic_quotes_gpc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;stripslashes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;function_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;mysql_real_escape_string&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               &lt;span class=&#34;nx&#34;&gt;mysql_real_escape_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               &lt;span class=&#34;nx&#34;&gt;mysql_escape_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// The value can be imported only, if the specified cleaner exists.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;$checkfun&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;check_&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$cleaners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;check&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;function_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$checkfun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c1&#34;&gt;// $c will then be the sanitized value
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;k&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$checkfun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$cleaners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;die&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*** ERROR: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; =&amp;gt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; fails &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;because specified checkfun &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$checkfun&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; does not exist.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// The value can be imported only, if the specified cleaner succeeded.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Import &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;s value of &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; as &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$c\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nv&#34;&gt;$C&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$E&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// collect error anyway
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;*** WARNING: Not importing &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;, &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;because &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; failed &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$checkfun&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nv&#34;&gt;$E&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// collect error
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$C&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Jetzt müssen wir nur noch Checkfunktionen schreiben, die die eigentlichen Prüfungen ausführen. In unserem Fall wollen wir noch die folgenden Konventionen gelten lassen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jede &lt;code&gt;checkfun&lt;/code&gt; hat einen Parameter &lt;code&gt;default&lt;/code&gt;, der einen von &lt;code&gt;NULL&lt;/code&gt; verschiedenen Default-Wert definieren kann. In diesem Fall schlägt der Check nie fehl, sondern returned den spezifizierten Default-Wert. Eine eventuell erzeugte Fehlermeldung wird dennoch eingesammelt, hat dann aber mehr den Character einer Warnung.&lt;/li&gt;
&lt;li&gt;Für jeden Parameter &lt;code&gt;p&lt;/code&gt; einer checkfun wollen wir optional auch die Definition eines Fehlermeldungs-Parameters &lt;code&gt;p_err&lt;/code&gt; zulassen, mit dem die Fehlermeldung überschrieben werden kann, den die checkfun generiert, wenn der Test für &lt;code&gt;p&lt;/code&gt; fehlschlägt. Einige Beispiele werden das klarer machen.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hier ist der &lt;code&gt;regexp&lt;/code&gt;-Test:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;check_text_regex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$pattern&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pattern&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$pattern_err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;check_text_regex: &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                 &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;array_key_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pattern_err&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                 &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pattern_err&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                 &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; did not match &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$pattern&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$default&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array_key_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;In check_text_regex: k=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; v=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; pattern= &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$pattern\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;preg_match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/^&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$pattern\&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;$/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$pattern_err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Der Test prüft, ob der Wert &lt;code&gt;$v&lt;/code&gt; dem regulären Ausdruck &lt;code&gt;$par[&#39;pattern&#39;]&lt;/code&gt; genügt. Wenn ja, wird &lt;code&gt;$v&lt;/code&gt; ohne Fehlermeldung zurückgegeben. Wenn nein, wird &lt;code&gt;$par[&#39;default&#39;]&lt;/code&gt; zusammen mit der Fehlermeldung &lt;code&gt;$par[&#39;pattern_err&#39;]&lt;/code&gt; zurückgegeben.&lt;/p&gt;
&lt;p&gt;Entsprechend der &lt;code&gt;minmax&lt;/code&gt;-Test:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;check_int_minmax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;min&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$min_err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;check_int_minmax: &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;             &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;array_key_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;min_err&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;             &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;min_err&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &amp;lt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$min&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$max&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;max&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$max_err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;check_int_minmax: &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;             &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;array_key_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;max_err&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;             &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;max_err&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &amp;gt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$max&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$default&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array_key_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;In check_int_minmax: k=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; v=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; min=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$min&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; max=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$max\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;intval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$min_err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$max_err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dieser Test folgt demselben System: Wenn der Wert &lt;code&gt;$v&lt;/code&gt; zwischen &lt;code&gt;$min&lt;/code&gt; und &lt;code&gt;$max&lt;/code&gt; liegt, wird er ohne Fehlermeldung zurückgegeben. Andernfalls wird $default und eine Fehlermeldung erzeugt. Die Fehlermeldungen können dabei als &lt;code&gt;$min_err&lt;/code&gt; und &lt;code&gt;$max_err&lt;/code&gt; spezifiziert werden, der &lt;code&gt;$default&lt;/code&gt; ist &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Und der &lt;code&gt;int_enum&lt;/code&gt;-Test, um das Beispiel vollständig zu machen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;check_int_enum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$values&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;values&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$valuestring&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$values_err&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;check_int_enum: &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                 &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;array_key_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;values_err&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                 &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;values_err&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; not in &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$valuestring&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$default&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array_key_exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;In check_int_enum: k=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; v=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; values=(&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$valuestring&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;intval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;array_search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$values_err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Auch hier werden die Konventionen befolgt: &lt;code&gt;$default&lt;/code&gt; und die Fehlermeldung &lt;code&gt;$values_err&lt;/code&gt;, wenn der gegebene Wert &lt;code&gt;$v&lt;/code&gt; nicht im &lt;code&gt;$values&lt;/code&gt;-Array vorkommt, sonst &lt;code&gt;$v&lt;/code&gt; und keine Fehlermeldung.&lt;/p&gt;
&lt;p&gt;Mit diesem Code und ein wenig Suchen und Ersetzen sollte sich jede framework-freie PHP-Seite schnell auf eine harte Deklaration von Eingabeparametern umstellen lassen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$cleaners&lt;/code&gt; definieren&lt;/li&gt;
&lt;li&gt;Alle Vorkommen von &lt;code&gt;$_REQUEST&lt;/code&gt; durch &lt;code&gt;$_CLEAN&lt;/code&gt; ersetzen&lt;/li&gt;
&lt;li&gt;globals &lt;code&gt;$_CLEAN&lt;/code&gt; nachrüsten, weil &lt;code&gt;$_CLEAN&lt;/code&gt; kein Superglobal ist&lt;/li&gt;
&lt;li&gt;Aufruf von &lt;code&gt;clean()&lt;/code&gt; an passender Stelle einfügen, ggf. Fehlerbehandlung in &lt;code&gt;$_ERROR&lt;/code&gt; vornehmen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nein, auch das ist nicht 100% wasserdicht, dürfte aber das meiste Feld-, Wald- und Wiesen-PHP schon mal gründlich gegen die größten Dummheiten schützen.&lt;/p&gt;
&lt;p&gt;Und das alles mit weniger als 60 Minuten Codieraufwand. Vielleicht sollte man eine Extension draus machen, und die so konfigurieren, daß sie die echten &lt;code&gt;$_REQUEST&lt;/code&gt;, &lt;code&gt;$_GET&lt;/code&gt;, &lt;code&gt;$_POST&lt;/code&gt;, &lt;code&gt;$_FILES&lt;/code&gt; und &lt;code&gt;$_COOKIE&lt;/code&gt; verbirgt und durch zwangsweise von &lt;code&gt;clean()&lt;/code&gt; generierte Arrays gleichen Namens ersetzt.PHP-Seiten ohne &lt;code&gt;$cleaners[]&lt;/code&gt;-Array können dann gar keine Parameter mehr im Zugriff haben.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Webanwendungen und der FHS</title>
      <link>https://blog.koehntopp.info/2005/06/13/webanwendungen-und-der-fhs.html</link>
      <pubDate>Mon, 13 Jun 2005 10:47:50 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2005/06/13/webanwendungen-und-der-fhs.html</guid>
      <description>&lt;p&gt;Auf der S9Y Mailingliste fragte ein zukünftiger Paketmaintainer nach, ob er Serendipity für seine Distribution packen solle und wir ihn dabei unterstützten wollen. Abgesehen von allgemeinen Überlegungen die dagegen sprechen, gibt es noch andere Gründe, die das nicht wünschenswert machen.&lt;/p&gt;
&lt;p&gt;In den Bereich der allgemeinen Überlegungen fallen zum Beispiel die Releasezyklen von Distributionen: Sie sind in der Regel sehr viel länger als die von Webanwendungen wie Serendipity. Insbesondere sehr langwellige Distributionen wie Debian verteilen mit ihren Paketen Versionen der Software, die die Entwickler von S9Y nicht mehr unterstützen können und wollen.&lt;/p&gt;
&lt;p&gt;Auch ist fraglich, welchen Gewinn ein solches Package bringen soll. Eine Anwendung wie S9Y installiert sich mit Download-Auspacken-Anklicken sowieso schon selber und ist dabei dann an keinerlei externes Packaging oder fremde Zyklen gebunden. Eine Installation mit Betriebssystem-Packages bringt da nur Nachteile und fehlende Flexibilität. Zum Beispiel ist es so nicht leicht möglich, mehr als eine Version von S9Y an mehr als einer Location im System zu installieren, denn das Packagemanagement der üblichen Distributionen unterstützt weder konkurrente Installation unterschiedlicher Paketversionen noch sind verschiebliche Pakete mit durch den Anwender bestimmter Package-Root allgemein üblich.&lt;/p&gt;
&lt;p&gt;Aber das ist nur die Spitze des Eisberges. Checkt man sich einmal
&lt;a href=&#34;https://alioth.debian.org/projects/webapps-common/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;webapps-common&lt;/a&gt;

 aus und liest, was da drin steht - oder vielmehr nicht drin steht, sieht man, daß ein solches Packaging nur Nachteile haben kann:&lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;21-web-applications-and-the-fhs&#34;&gt;
    &lt;a href=&#34;#21-web-applications-and-the-fhs&#34;&gt;
	2.1 Web applications and the FHS
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Web applications should follow the same guidelines as any other software. most specifically, they should not make any assumption about how the administrator has arranged the file hierarchy outside of the FHS by placing files in non-standard places such as /var/www or /usr/local. Specifically, the following table should serve as guidelines for the location of files:&lt;/p&gt;
&lt;p&gt;| type of file                           | location                        |
+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;+
| static web pages                       | /usr/share/PACKAGE/www          |
| dynamically interpreted web pages      | /usr/share/PACKAGE/www          |
| persistent application data            | /var/lib/PACKAGE                |
| dynamcially executed web pages         | /usr/lib/cgi-bin/PACKAGE        |
| application-specific libraries         | /usr/share/PACKAGE/include      |
| site configuration                     | /etc/PACKAGE                    |
| locally modifiable/overridable content | /etc/PACKAGE/templates          |
| php libraries                          | /usr/share/php/PACKAGE          |
| rrd, mrtg and other database files     | see database application policy |&lt;/p&gt;
&lt;p&gt;Fußnoten weggelassen.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Das ist so kraß konsequent an der Realität vorbei, daß es mir persönlich schon wieder Respekt abnötigt.&lt;/p&gt;
&lt;p&gt;Webanwendungen sind überall für Webhostingumgebungen entwickelt, denn dies ist bei weitem die verbreiteste Form des Deployments für Webanwendungen. Webhostingumgebungen werden aber in der Regel per Filetransfer in ein Verzeichnis unterhalb der DocumentRoot der Kundendomain beschickt. Sicherheitsmechanismen in Webhostingumgebungen berücksichtigen das: Mit chroot() oder Virtual Base Directory versuchen sie, den Kunden auf seinen Verzeichnisteilbaum zu beschränken. mit einer UID und GID pro Kunde oder pro Kundendomain versuchen sie, Betriebssystem-Zugriffsrechte als Hilfsmittel zur Kundentrennung zu benutzen.&lt;/p&gt;
&lt;p&gt;Eine Webapp-Policy, die das komplett ignoriert und Webanwendungen atomisiert, um ihre Trümmer dann einmal durch das Dateisystem zu zerstäuben hat so überhaupt nichts mit der Realität zu tun, daß man im ersten Augenblick nur sprachlos daneben stehen kann.&lt;/p&gt;
&lt;p&gt;Okay, hier ist also einmal ein Katalog von Anforderungen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Policy muß chroot/virtual base directory jails unterstützen&lt;/li&gt;
&lt;li&gt;Policy muß UID pro Domain/GID pro Kunde oder ähnliche Setups unterstützen, die auf Apache suexec oder PHP safe_mode basieren&lt;/li&gt;
&lt;li&gt;Policy muß erlauben, daß die Anwendung mehr als einmal pro physikalischem Rechner installiert wird&lt;/li&gt;
&lt;li&gt;Policy muß erlauben, daß die Anwendung in mehr als einer Version pro physikalischem Rechner installier wird.&lt;/li&gt;
&lt;li&gt;Policy muß dem Kunden erlauben, seine Installation per ftp/scp/rsync zu sichern und zu modifizieren. Versionsmanagement muß erkennen, ob die modifizierte Anwendung danach noch automatisiert updatebar ist und ggf. einen Mergeprozeß unterstützen.&lt;/li&gt;
&lt;li&gt;Policy muß die Installation mehrerer unterschiedlicher Webanwendungen pro Vhost in unterschiedliche Directories unterhalb der DocRoot eines VHosts unterstützen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Die Policy muß also ein Framework liefern, mit dem man Vhosts schnell erzeugen kann, mit dem man in einem Vhosts Features wie modlogan, perl, python, php, chroot Jail und andere Eigenschaften enablen und disablen kann, und mit dem man pro VHost eine oder mehrere Anwendungen in unterschiedlichen Verzeichnissen installieren und möglicherweise sogar sicher aktualisieren kann. Dabei muß die Anwendung durch Kopie aus einem Shared Repository installiert werden können, durch Hardlink auf das Repository um Platz zu sparen oder sie muß, wenn die Anwendung das unterstützt, shared installs (PEAR, S9Y, &amp;hellip;) möglich machen.&lt;/p&gt;
&lt;p&gt;All das ist natürlich mit dem FHS komplett inkompatibel. Aber kompatibel mit den Anforderungen des Webgeschäfts, das nun einmal mit dem FHS erst einmal genau gar nix zu tun hat.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zehn Jahre PHP</title>
      <link>https://blog.koehntopp.info/2005/06/07/zehn-jahre-php.html</link>
      <pubDate>Tue, 07 Jun 2005 18:44:05 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2005/06/07/zehn-jahre-php.html</guid>
      <description>&lt;p&gt;Wie
&lt;a href=&#34;http://blog.coggeshall.org/archives/203_A_Decade_of_PHP.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;anderswo&lt;/a&gt;


angemerkt, ist morgen der 8. Juni 2005, und damit der
&lt;a href=&#34;http://groups.google.ch/group/comp.infosystems.www.authoring.cgi/msg/cc7d43454d64d133&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;10. Geburtstag&lt;/a&gt;


von PHP.&lt;/p&gt;
&lt;p&gt;Was als kleines Tools zur Erstellung der Bewerbung von Rasmus Lerdorf
angefangen hat, ist jetzt ein ausgewachsenes Tool zur Erstellung und
Handhabung von Webanwendungen. PHP glänzt vor allen Dingen durch seine
Integrationsfertigkeiten: es ist die Borg, die Glue Language des Web, die
alle anderen Bibliotheken und Kommunikationswege
&lt;a href=&#34;http://en.wikipedia.org/wiki/Assimilation_%28Star_Trek%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;assimiliert&lt;/a&gt;

 und zur
Erreichung der eigenen Perfektion integriert.&lt;/p&gt;
&lt;p&gt;Ich selber bin zu PHP wahrscheinlich irgendwann in 1997 oder 1998 gekommen.
Boris Erdmann hat damals mit PHP/FI (PHP2) herumexperimentiert und für SH
Online Shopsoftware in PHP entwickelt - das war viel bequemer als in Perl.
Und so kam es, daß ich mich auch schon bald mit PHP auseinandergesetzt
habe&amp;hellip;&lt;/p&gt;
&lt;p&gt;Denn mit Boris zusammen habe ich damals für einen Shop und das zugehörige
Prozeßbackend im Intranet eines großen Konzerns geerbt. Wir haben damals
sehr schnell gemerkt, daß wir ein Problem mit Persistenz haben und uns dann
eine generalisierte Methode zur Erzeugung von Sessionvariablen überlegt.&lt;/p&gt;
&lt;p&gt;Das Resultat dieser Überlegungen war PHPLIB. Am
&lt;a href=&#34;http://marc.theaimsgroup.com/?l=php-general&amp;amp;m=90222497032608&amp;amp;w=2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;19. Mai 1998&lt;/a&gt;

 habe
ich auf der php-general-Liste zum ersten Mal nach Sessions gefragt (vom
selben Tag kommt übrigens auch die Idee für
&lt;a href=&#34;http://marc.theaimsgroup.com/?l=php-general&amp;amp;m=90222497032618&amp;amp;w=2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PHP Standard Library&lt;/a&gt;

).
Am 30. Juni haben Boris und ich dann
&lt;a href=&#34;http://marc.theaimsgroup.com/?l=php-general&amp;amp;m=90222503034131&amp;amp;w=2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PHPLIB released&lt;/a&gt;

. Was ich damals als&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We have had some stability problems with our code (spontaneous
intermittent failures on some pages; &amp;ldquo;document contains no data&amp;rdquo;, but no
log messages and no PHP debugger output) which we are trying to track, but
we have had no success. These problems may be related to a general
instability of PHPs object features (we are using classes, subclasses and
objects throughout our code).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;war vermutlich der erste Versuch weltweit, die damals brandneuen
Objektfeatures von PHP3 anzuwenden und so kam es, daß Boris und ich ca. 50
Bugreports gegen die Release Candidates von PHP3 gefiled haben und
persönlich verantwortlich für 4 von 6 Release Candidates waren (indem wir
Showstopper Bugs entdeckt haben :).&lt;/p&gt;
&lt;p&gt;PHP ist für mich aber nicht nur eine schöne Sprache und eine reichhaltige
Plattform gewesen, sondern auch eine Erfahrung im Aufbau einer Gemeinschaft.&lt;/p&gt;
&lt;p&gt;Ich habe über die Beschäftigung mit der Sprache eine Menge von Leuten in
vielen Ländern kennegelernt. Ich habe eine
&lt;a href=&#34;http://groups-beta.google.com/group/de.admin.news.announce/msg/b4ce2ec6f6e5eafd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Newsgroup eingerichtet&lt;/a&gt;


und
&lt;a href=&#34;http://groups-beta.google.com/group/de.comp.lang.php/msg/74b8f8ea3c8a91ad&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;die FAQ&lt;/a&gt;


für die Gruppe zunächst alleine und dann mit einem wirklich guten Team
fortgeschrieben. Was damals für die FAQ gilt, ist im Grunde beschreibend für
die ganze kooperative Kultur, die um PHP herum entstanden ist:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Warum funktioniert de.comp.lang.php?de.comp.lang.php funktioniert, weil
wir hier freundlich miteinander umgehen und weil wir Arbeit nicht zweimal
machen. dclp hat eine Kultur, und Ihr koennt diese Kultur mitgestalten.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Der 10. Geburtstag von PHP ist damit ein Anlaß für mich, um mich bei allen
den Leuten zu bedanken, die an diesem wirklich großen Projekt mitgearbeitet
haben und die durch Kooperation und den Willen, ohne besonderen Anlaß zu
einem gemeinsamen Ganzen beizutragen, die Sprache und die Gemeinschaft PHP
zu einer der bedeutendsten Plattformen für Webentwicklung weltweit gemacht
haben.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL FLOSS Exception</title>
      <link>https://blog.koehntopp.info/2004/07/19/mysql-floss-exception.html</link>
      <pubDate>Mon, 19 Jul 2004 14:14:00 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2004/07/19/mysql-floss-exception.html</guid>
      <description>&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/20040314_dolphin.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Bereits letzten Donnerstag hat Zak Greant, die Community-Kontaktperson bei
MySQL, die
&lt;a href=&#34;http://zak.greant.com:8888/licensing/getfile/licensing/FLOSS-exception.txt?v=1.5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Version 1.5 der MySQL FLOSS License Exception&lt;/a&gt;


veröffentlicht.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Exception IntentWe want specified Free/Libre and Open Source Software
(&amp;ldquo;FLOSS&amp;rdquo;) applications to be able to use specified GPL-licensed MySQL
client libraries (the &amp;ldquo;Program&amp;rdquo;) despite the fact that not all FLOSS
licenses are compatible with version 2 of the GNU General Public License
(the &amp;ldquo;GPL&amp;rdquo;).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Wir erinnern uns: Wie in
&lt;a href=&#34;https://blog.koehntopp.info/2004/03/14/mysql-und-die-lizenzen.html&#34;&gt;MySQL und die Lizenzen&lt;/a&gt;


dargestellt, hat MySQL mit der 4er Serie des MySQL-Paketes die Lizenz der
Client-Bibliotheken von LGPL auf GPL geändert. Dabei kam es zu den im
Artikel dargestellten Lizenzproblemen.&lt;/p&gt;
&lt;p&gt;Die MySQL FLOSS License Exception behebt (endlich!) dieses Problem.&lt;/p&gt;
&lt;p&gt;Grundidee der Lizenzänderung war&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are commercial, we are commercial. If you are Free and Open, we are
Free and Open.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;MySQL wollte also kommerziellen Programmen die Möglichkeit nehmen, die MySQL
Clientbibliotheken einzubinden ohne eine MySQL Lizenz zu erwerben. Doch
nicht alle freien Lizenzen sind kompatibel mit der GPL, und insbesondere ist
die PHP-Lizenz (eine Abwandlung der Apache-Lizenz) nicht mit der GPL
kompatibel.&lt;/p&gt;
&lt;p&gt;Damit man PHP weiter mit MySQL zusammen herstellen oder vertreiben darf, und
damit Linux-Distributionen weiter MySQL-Client und MySQL-Server zusammen
vertreiben dürfen, war die License Exception notwendig. Regelung &amp;ldquo;0.b&amp;rdquo; der
Exception stellt dabei Kompatibilität mit den in Regelung 1 genannten
Lizenzen her, Regelung &amp;ldquo;0.c&amp;rdquo; erlaubt die Verteilung von MySQL auf Linux
Distributionen, die auch Nicht-GPL Daten und Programme enthalten.&lt;/p&gt;
&lt;p&gt;Damit ist von der Seite der free software community nun endlich alles
geregelt. Von der MySQL-Seite aus bleibt das Schluploch mit dem SQL-Relay,
aber &amp;hellip; nunja.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why PHPLIB did vanish</title>
      <link>https://blog.koehntopp.info/2004/07/15/why-phplib-did-vanish.html</link>
      <pubDate>Thu, 15 Jul 2004 13:05:44 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2004/07/15/why-phplib-did-vanish.html</guid>
      <description>&lt;p&gt;In &lt;a href=&#34;http://phplens.com/phpeverywhere/?q=node/view/69&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;ADO-donkey&amp;rdquo; will prevail&lt;/a&gt;

, johnlim writes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PHPLib was the most popular database library for PHP3. Today it seems to be a bit old and is no longer popular. I have never talked to the PHPLib developers, but I can speculate on the reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PHPLib has PHP3 functionality that is obsolete because it is provided natively by PHP today, such as sessions support.&lt;/li&gt;
&lt;li&gt;PHPLib tried to do too much. It handled both paging, templating and database access. Other more specialised database libraries have superseded it.&lt;/li&gt;
&lt;li&gt;The PHPLib developers are involved in other activities such as PEAR, or have lost interest perhaps?&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;As one of the principal designers of PHPLIB, I am entitled to clear things up.&lt;/p&gt;
&lt;p&gt;PHPLIB was fallout. When I was doing web application design for
&lt;a href=&#34;http://www.netuse.de&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NetUSE&lt;/a&gt;

/SHonline in the final days of PHP/FI and during the PHP3 RCs, I pretty quickly came across the Session problem. I was at all times carrying around a large number of persistent variables in GET and POST requests, and was revalidating them over and over due to their source being the untrustworthy Internet.&lt;/p&gt;
&lt;p&gt;I asked on the PHP support mailing list, and got my hands on a piece of code by Rasmus, which serialized an array of at most three dimensions into a string. Together with Boris Erdmann, with whom I was working at that time, I wrote a more generic serializer, which could handle about any number and any type of variable including objects. This, plus an authentication and authorization scheme plus a very simple and lightweight database wrapper class became the
&lt;a href=&#34;https://marc.info/?l=php-general&amp;amp;amp;m=90222503034131&amp;amp;amp;w=2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;core of PHPLIB&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;We released the code to our little library under the LGPL thanks to the generosity of the company we worked for, and in order to get other people to contribute to it, be it with documentation, testing or even code. And contributions we got, from inside of
&lt;a href=&#34;http://www.netuse.de&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NetUSE&lt;/a&gt;

/SHonline by Ulf Wendel, and from the outside.&lt;/p&gt;
&lt;p&gt;Then two things happened: Sascha Schumann met the PHP team and started recoding the PHPLIB session handling into what became PHP 4, and SHonline was reintegrated into NetUSE and I moved on to other departments inside the company. Because I was no longer doing web development, and Sascha&amp;rsquo;s native PHP 4 session handling did just fine for my purposes, thank you, I no longer had any use for PHPLIBs code, perhaps besides the database wrapper.&lt;/p&gt;
&lt;p&gt;The PHPLIB database wrapper was never intended to be a database abstraction anyway - being raised on NeXTstep and its Enterprise Objects toolkit, I subscribe to many aspects of Jeremy&amp;rsquo;s essay
&lt;a href=&#34;http://jeremy.zawodny.com/blog/archives/002194.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Database Abstraction Layers must die!&lt;/a&gt;

. The database wrapper has its purpose mainly in that it encapsulates the database access information (user, password, host, database), and enforces proper error handling. It may also manage a connection pool, if the deployment environment has provisions for that. But there is little use for a unified database access API in PHP (or anywhere else).&lt;/p&gt;
&lt;p&gt;SQL dialects and the inner workings of SQL databases are suitably different so that different access strategies are needed for different databases. There is little use for &amp;ldquo;take a unified SQL statement and push it to whatever database happens to be below the application&amp;rdquo;, which is what most PHP database abstraction layers promise to do.&lt;/p&gt;
&lt;p&gt;What is needed is a persistence layer abstraction instead. Objects model the entities and relations of the storage model and provide the application with the data access API the application needs. Inside, the objects generate whatever suitably optimized statements are required to talk to the concrete persistence layer below the application and execute them.&lt;/p&gt;
&lt;p&gt;This is what EO did on NeXTstep and this is what makes sense, if you happen to be able to keep around database connections and ER model objects between requests, because otherwise the overhead in code and object instantiation is just to high - Ulf tried, I tried, we failed.&lt;/p&gt;
&lt;p&gt;Keeping instances of objects between requests requires an application server, things like PHP Bananas and the Vulcan Logic thingy or similar. PHP has no such deployment model that is production quality and so I did not pursue that avenue for development any further.&lt;/p&gt;
&lt;p&gt;To sum it up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Yes, PHPLIB is obsolete. Use the native PHP session support for session management, use Smarty for templating and use AdoDB for database access. These are much more tailored to current PHP development styles than PHPLIB and they are under active development. Avoid PEAR, unless the class of choice can live without PEAR.php, which is fat and ugly.&lt;/li&gt;
&lt;li&gt;No, PHPLIB did never try to be a database abstraction library, it tried to be a web application development suite and it was fairly successful at that during its time.&lt;/li&gt;
&lt;li&gt;Yes, the PHPLIB developers have been moving on to things outside of the world of PHP.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>MySQL und die Lizenzen</title>
      <link>https://blog.koehntopp.info/2004/03/14/mysql-und-die-lizenzen.html</link>
      <pubDate>Sun, 14 Mar 2004 08:43:19 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2004/03/14/mysql-und-die-lizenzen.html</guid>
      <description>&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/20040314_dolphin.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Früher war alles besser. Früher zum Beispiel konnte MySQL gar nichts, und der
Server stand unter der
&lt;a href=&#34;http://www.gnu.org/licenses/licenses.html#GPL&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GPL&lt;/a&gt;

, während der MySQL
Client unter der
&lt;a href=&#34;http://www.gnu.org/licenses/licenses.html#LGPL&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LGPL&lt;/a&gt;

 stand und alles war
gut. So gut, daß zum Beispiel das PHP Projekt den MySQL Client den
PHP-Sourcen beigelegt hatte und daß man deswegen Mühe hatte, ein PHP zu
finden, das nicht mit einer MySQL-Datenbank reden konnte. Dieses Bundling
ist es unter anderem gewesen, das den Siegeszug der
&lt;a href=&#34;http://www.onlamp.com/pub/a/onlamp/2001/01/25/lamp.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LAMP&lt;/a&gt;

 Plattform
begründet hat.&lt;/p&gt;
&lt;p&gt;Dann jedoch entschloss man sich bei MySQL einige Dinge zu tun: Erstens nahm
man Venture-Capital an, zweitens stellte man davon einen Haufen Leute ein
und drittens schob man auf diese Weise die Weiterentwicklung von MySQL
kräftig an. Die MySQL 4.x Serie entstand.&lt;/p&gt;
&lt;p&gt;Die Idee dahinter ist relativ offensichtlich: MySQL hat Datenbanken einen
vollkommen neuen Markt eröffnet. Vor zehn Jahren war SQL-Wissen noch
Spezialwissen und SQL-Datenbanken waren teure Dinge, die nur bei großen
Projekten eingesetzt wurden. Es ist das Verdienst von MySQL, diese Situation
von Grund auf verändert zu haben - heute hat jedes Script Kiddie
SQL-Kenntnisse und verwendet lieber MySQL als Flatfiles, um selbst eine
Highscore-Liste zu speichern. MySQL will nun mit Datenbanken das tun, was
Linux mit Unix-Betriebssystemen gemacht hat.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/20040314_linux-penguin.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;MySQL befindet sich dabei in mehr oder weniger derselben Situation wie Linux
1994: Natürlich ist das Produkt (noch!) nicht so feature-complete wie die
etablierten Spieler in diesem Markt, aber für den weitaus größten Teil der
Anwender ist das auch überhaupt nicht notwendig. Für diese Anwender zählen
nämlich nicht so sehr die fetten Enterprise-Feature-Listen, als vielmehr gute
Dokumentation und leichte Erlernbarkeit, die Verfügbarkeit von billigem
Personal mit Kenntnissen im Produkt, Einsatz in Hosting-Umgebungen (Datenbank
und Anwendung auf derselben Maschine, Trennung einer physikalischen in
mehrere logische Datenbanken, Ressource-Quotas usw) und leichte
Administrierbarkeit.&lt;/p&gt;
&lt;p&gt;MySQL hat seinen Kunden hier zugehört und unter der Häme und dem Spott der
etablierten Datenbankhersteller etwas entwickelt, das in erster Linie
Kundenwünsche erfüllt und erst jetzt, in den 4.x Versionen, anfängt
Datenbankhersteller-Kriterien zu erfüllen. Unterwegs hat MySQL aber einen
vollkommen neuen Markt geschaffen und definiert, und dem gesamten
Datenbankmarkt ein vollkommen neues und von den Benutzerzahlen her
gigantisches Low-End geschaffen. Von dort, und mit der dort erzeugten
Benutzerbasis, will MySQL jetzt den Datenbankmarkt von unten her kannibalisieren
und Datenbanken in ein Commodity-Produkt umwandeln - die Lizenzpreise
sprechen eine deutliche Sprache.&lt;/p&gt;
&lt;h3 id=&#34;ein-exkurs-in-lizensismus&#34;&gt;
    &lt;a href=&#34;#ein-exkurs-in-lizensismus&#34;&gt;
	Ein Exkurs in Lizensismus
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Der Markt hat jedoch anders reagiert, denn die Situation ist ein wenig
komplizierter als in der verklärten &amp;ldquo;Früher war alles besser&amp;rdquo;-Darstellung
von oben. Das Unheil begann damit, daß es im Grunde drei Klassen von
Lizenzen gab oder jedenfalls seit der&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.mozilla.org/MPL/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mozilla Public License&lt;/a&gt;

 gibt. Da ist zum einen
die Edel-Lizenz GPL, die im Grunde nur mit sicher selber kompatibel ist
(denn alles, was man mit der GPL zusammenbaut wird selber GPL). Dann sind da
jede Menge freie Softwarelizenzen, die nicht mit der GPL kompatibel sind.
Freie Softwarelizenzen sind
&lt;a href=&#34;http://www.debian.org/social_contract.html#guidelines&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DFSG-kompatible Lizenzen&lt;/a&gt;

 außer der
GPL selber, also so Dinge wie Apache, BSD, Mozilla-Derivate und so weiter
sowie die LGPL. Und dann sind da kommerzielle Lizenzen und die seltsame Idee
des Dual Licensing.&lt;/p&gt;
&lt;p&gt;Dual Licensing ist, was Managerköpfe zum Platzen bringt: Da der Erzeuger
eines urheberrechtlich geschützten Werkes dieses Werk selber nach Belieben
lizenzieren kann, ist dieser Urheber nicht darauf beschränkt, das Werk nur
unter einer einzigen Lizenz anzubieten. Man kann
Software-Funktionsbibliotheken also unter der GPL anbieten, und für Leute,
denen dies nicht gefällt, auch eine kommerzielle Lizenz zu verkaufen.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Ja, ist das nun frei oder nicht frei?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Für die Anbieter von Software, die selber GPL ist und welche die Bibliothek
unter Dual Licensing einbinden wollen, ist alles klar. Die nehmen die
Bibliothek unter der GPL und alles ist gut. Für Anbieter von Software, die
kommerziell ist, ist auch alles klar. Die nehmen die Software entweder unter
der kommerziellen Lizenz oder ein anderes, rein kommerzielles Produkt, weil
ihnen das alles zu verwirrend ist.&lt;/p&gt;
&lt;p&gt;Für die Anbieter von DFSG-Software ist alles unklar. Wenn ich eine
Software-Funktionsbibliothek in mein Programm einbinde, und die Bibliothek
selber ist GPL, dann muss mein Programm auch GPL sein. GPL, nicht &amp;ldquo;freie
Software nach DFSG&amp;rdquo;. Schlecht zum Beispiel für PHP, das inzwischen unter der
&lt;a href=&#34;http://www.php.net/license/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apache-Lizenz&lt;/a&gt;

 steht.&lt;/p&gt;
&lt;p&gt;Intern verwendet PHP die Zend-Engine, die unter der
&lt;a href=&#34;http://www.trolltech.com/products/qt/freelicense.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;QPL&lt;/a&gt;

 lizenziert wird.
Die QPL wiederum ist eine modifizierte MPL, falls man mir noch folgen kann.
PHP bindet außerdem Dutzende von anderen Projekten und Programmbibliotheken
selber ein, die unter den unterschiedlichsten Lizenzen stehen.&lt;/p&gt;
&lt;h3 id=&#34;warum-ist-das-für-mysql-ein-problem&#34;&gt;
    &lt;a href=&#34;#warum-ist-das-f%c3%bcr-mysql-ein-problem&#34;&gt;
	Warum ist das für MySQL ein Problem?
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/20040314_banker.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Mit MySQL 4.x hat MySQL, die Firma, das Tempo deutlich erhöht: Inzwischen
sitzen jede Menge kommerzielle Entwickler für Geld daran, MySQL
voranzubringen. Die Venture-Capital Investoren wollen für ihr Geld innerhalb
der nächsten drei bis fünf Jahre Return sehen.&lt;/p&gt;
&lt;p&gt;MySQL muss also mehr kommerzielle MySQL-Lizenzen verkaufen. Das genau ist bei
einem Produkt wie MySQL jedoch ein wenig schwierig: Der MySQL Server ist
GPL. Man kann ihn also problemlos irgendwo hinstellen und in Betrieb nehmen,
ohne daß man eine Lizenz kaufen müsste. Man kann, wenn man möchte, bei MySQL
kommerziellen Support kaufen, guten Support sogar, für relativ kleines Geld.
Dummerweise ist nur MySQL als Produkt viel zu gut, man kommt gut ohne
Support hin. Dummerweise ist der MySQL-Server GPL, und liegt deswegen im
Source vor. Falls man also genug technisches Wissen im Haus hat, kann man
sich auch leicht selber supporten.&lt;/p&gt;
&lt;p&gt;Der MySQL Client war LGPL. LGPL ist eine GPL ohne Zähne: Man kann
LGPL-Funktionsbibliotheken wie den MySQL Client in sein Programm einbauen,
ohne daß dieses Programm dann GPL oder LGPL sein müsste - es kann nahezu jede
beliebige Lizenz haben.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/20040314_kunden.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Hersteller von kommerzieller Software haben also Programme entwickelt, die
die MySQL Client-Bibliotheken enthalten haben, ohne eine Lizenz zwingend zu
brauchen. Benutzer dieser Software haben sich also einen MySQL Server
hinstellen können, ohne für diesen eine Lizenz zwingend zu brauchen und die
haben die kommerzielle Software einsetzen können, ohne eine Lizenz zwingend
zu brauchen.&lt;/p&gt;
&lt;p&gt;Das hat funktioniert, solange MySQL, die Firma, ihr Wachstum aus den
Support-Einnahmen und anderen Quellen selber finanziert haben. Aber mit VC in
der Firma geht das nicht mehr.&lt;/p&gt;
&lt;p&gt;Der MySQL 4.x Client ist also GPL. Genaugenommen ist er Dual Licensed. Wenn
man also eine GPL-Anwendung schreibt, kann man den MySQL 4.x Client
benutzen. Wenn man eine Nicht-GPL-Anwendung schreibt, und das schließt alle
DFSG-freien, GPL-inkompatiblen Lizenzen mit ein, braucht man eine
kommerzielle Lizenz.&lt;/p&gt;
&lt;h3 id=&#34;schmerzen&#34;&gt;
    &lt;a href=&#34;#schmerzen&#34;&gt;
	Schmerzen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Soweit so unklar.&lt;/p&gt;
&lt;p&gt;MySQL hat aber sich aus irgendeinem Grunde vorgenommen, an dieser Stelle
einmal &lt;strong&gt;nicht&lt;/strong&gt; auf ihre Kunden zu hören und die eigene Position mit den
Kundenwünschen abzustimmen, sondern diese Änderung quasi im Alleingang
durchzuziehen.&lt;/p&gt;
&lt;p&gt;MySQL hat dabei den mittleren Fall der DFSG-freien, GPL-inkompatiblen
Anwendungen vollkommen übersehen.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/20040314_sterling.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;MySQL hat sich außerdem entschlossen, die GPL auf eine sehr seltsame Weise
zu interpretieren:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://edwardbear.org/serendipity/archives/1193_My_Beef_with_MySQLs_License.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sterling Hughes&lt;/a&gt;


geht hier ausführlich in englischer Sprache darauf ein. MySQL argumentiert,
daß auch jede Reimplementation von deren Protokoll MySQLs geistiges Eigentum
wäre, weil es sich um ein abgeleitetes Werk handelt. Also ganz genau
die SCO Argumentation.&lt;/p&gt;
&lt;p&gt;MySQL ist außerdem jetzt schon seit mehr als einem Jahr damit beschäftigt,
dieses Problem zu lösen.&lt;/p&gt;
&lt;h3 id=&#34;auflösungserscheinungen&#34;&gt;
    &lt;a href=&#34;#aufl%c3%b6sungserscheinungen&#34;&gt;
	Auflösungserscheinungen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Konsequenzen:&lt;/p&gt;
&lt;p&gt;Die MySQL Client-Bibliotheken liegen PHP nicht mehr bei. Das wird inzwischen
nicht nur lizenzrechtlich, sondern auch technisch verargumentiert und wird
deswegen auch dann so bleiben, wenn (sobald) PHP und MySQL sich einigen.&lt;/p&gt;
&lt;p&gt;PHP liegen stattdessen SQLite Bibliotheken bei. SQLite ist eine Art
&amp;ldquo;Access ohne GUI&amp;rdquo;, also ein serverloses embedded SQL und daher
performancetechnisch mit MySQL nicht zu vergleichen. Die SQLite-Entwickler
haben in den letzten Wochen große Fortschritte gemacht, ihre SQL-Syntax
kompatibel mit MySQL SQL-Erweiterungen zu machen. Dennoch: Eine richtige
Alternative ist das nicht, eher ein Schritt zurück.&lt;/p&gt;
&lt;p&gt;MySQL hat
&lt;a href=&#34;http://buddhajohntwofish.com/archives/000620.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gerade gestern&lt;/a&gt;

 mit
einer speziellen
&lt;a href=&#34;http://zak.greant.com/archives/000618.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ausnahmeregelung&lt;/a&gt;

 versucht, das
Problem der GPL-inkompatiblen freien Softwarelizenzen zu regeln. Leider mit
einer statischen Liste statt mit einer Regel wie &amp;ldquo;Besorgt Euch eine
DFSG-Evaluation und dann ist alles gut&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Der meiner Meinung nach unhaltbare Standpunkt, daß unabhängige
Reimplementierungen des Protokolls auch abgeleitete Werke sind, wird von
MySQL weiter aufrecht erhalten. Das lässt darauf schließen, daß MySQL auch
lizenzrechtliche Bedenken gegen Middlewares wie
&lt;a href=&#34;http://sqlrelay.sourceforge.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQLRelay&lt;/a&gt;

 hat.&lt;/p&gt;
&lt;p&gt;SQLRelay ist selber GPL. Als Middleware legt SQLRelay einen Connection Pool
von z.B. MySQL Datenbankverbindungen an und spricht mit der MySQL-Datenbank.
Das ist lizenztechnisch unproblematisch. Auf der anderen Seite exponiert
SQLRelay eine eigene, von der MySQL-API verschiedene
Programmierschnittstelle. Da SQLRelay nicht wie MySQL den Standpunkt
vertritt, daß die GPL auch über TCP/IP &amp;ldquo;ansteckend&amp;rdquo; sei, kann also eine
kommerzielle Anwendung ohne MySQL-Lizenz mit SQLRelay reden. Zak Greant von
MySQL war gestern Abend im Chat zu diesem Thema nur der MySQL-Standardsatz
zu entlocken: &amp;ldquo;If you use us with closed source software, we recommend using
our commercial license.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/20040314_postgres.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.postgresql.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Postgresql&lt;/a&gt;

 hat endlich (ich seh da jedes Jahr
mal nach oder so) eine Website, die den Namen verdient, und da gibt es sogar
so etwas ähnliches wie Dokumentation. Aktuelles Postgresql kann viele Dinge
besser als MySQL 3.23 und 4.0, Replikation bleibt ein Problem. Postgresql
ist unter der
&lt;a href=&#34;http://www.postgresql.org/licence.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BSD Lizenz&lt;/a&gt;

 verfügbar und
vollkommen problemlos mit allem möglichen integrierbar.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/20040314_firebird.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://firebird.sourceforge.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Firebird&lt;/a&gt;

 soll ich mir auch dringend
einmal ansehen, sagt man mir. Die
&lt;a href=&#34;http://firebird.sourceforge.net/index.php?op=doc&amp;amp;id=ipl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lizenz&lt;/a&gt;

 habe ich
noch nicht gelesen.&lt;/p&gt;
&lt;h3 id=&#34;fazit&#34;&gt;
    &lt;a href=&#34;#fazit&#34;&gt;
	Fazit
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Für mich persönlich nehme ich mehrere Erfahrungen mit:&lt;/p&gt;
&lt;p&gt;MySQL bemüht sich
immerhin mit sehr ernsthaft die Situation in Bewegung zu halten und
schließlich irgendwie zu lösen. Nach dem ich gestern abend im deutschen Irc
eine Diskussion über den originalen
&lt;a href=&#34;http://yro.slashdot.org/article.pl?sid=04/03/13/1414212&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Artikel&lt;/a&gt;

 auf
Slashdot angezettelt habe, hatte ich binnen einer halben Stunde Zak Greant
am Rohr und wir haben den ganzen Kram inklusive SQLRelay versucht einmal
durchzudeklinieren. Auch wenn wir nicht in allen Punkten zu einem Abschluss
gekommen sind, bleibt doch der Eindruck, daß MySQL sich bewegt.&lt;/p&gt;
&lt;p&gt;Anderseits bewegt sich MySQL unglaublich langsam - das alles war ja schon
Thema auf dem Linuxtag 2003, wo sich die PHP- und MySQL-Spitzenleute
getroffen haben und man die im Slashdot-Artikel vorgestellte Lösung
inoffiziell bereits mehr oder weniger im Kasten hatte. In manchen Punkten
bewegt sich MySQL gar nicht: Der Punkt mit der seltsamen GPL-Interpretation
(&amp;ldquo;Ansteckung über TCP/IP&amp;rdquo;, &amp;ldquo;Reimplementierung des Protokolls&amp;rdquo;) bleibt offen,
und SQLRelay bleibt fragwürdig.&lt;/p&gt;
&lt;p&gt;Die Hochzeit zwischen PHP und MySQL ist jedenfalls mit MySQL 4.x definitiv
vorbei. MySQL braucht freundschaftlich, aber bestimmt Druck durch
Alternativen und Postgresql und Firebird brauchen Propaganda. Wir wollen
einmal sehen können, was wir da tun können.&lt;/p&gt;
&lt;p&gt;Dual Licensing - ich bin mir noch nicht abschließend sicher, ob das Teil des
Problemraums oder Teil des Lösungsraums ist. Bemerkenswerterweise (Beispiele
sind MySQL und Qt) wird in solchen Fällen die GPL eher als Restriktion denn
als Befreiung angesehen - unter anderem deswegen, weil alternative Projekte
mit weniger restriktiven Lizenzen vorhanden sind.&lt;/p&gt;
&lt;p&gt;Die FSF und das GNU-Projekt sind seltsam still in dieser Sache: Während sie
sonst immer schnell dabei sind, die Überlegenheit der GPL gegenüber der LGPL
zu verargumentieren, wird die FSF allgemein eher dem Gnome (LGPL) denn dem
KDE/Qt (GPL)-Lager zugerechnet. Seltsam auch, daß die Projekte mit
kommerziellem Backing (KDE/Qt - Troll, MySQL Database - MySQL AB) genau die
GPL verfechen, während die Projekte mit nicht kommerziellem Hintergrund
(Gnome, Postgresql) weniger &amp;ldquo;pure&amp;rdquo; Lizenzmodelle (auf der RMS-Skala)
vertreten.&lt;/p&gt;
&lt;p&gt;Der Standpunkt von RMS war ja sonst immer &amp;ldquo;Die LGPL ist nur ein Notbehelf
und wird letztendlich verschwinden (müssen). Wir brauchen sie nur, bis GNU
eine lauffähige eigene Betriebssystemplattform hat, damit wir uns mit
existierenden kommerziellen Foundations integrieren können. Generell ist die
GPL der LGPL jedoch dringend zu bevorzugen.&amp;rdquo; So ganz wirklich vertreten die
diesen Standpunkt dann doch nicht, wenn es darauf ankommt.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP Kongress Köln</title>
      <link>https://blog.koehntopp.info/2000/10/07/php-kongress-koeln.html</link>
      <pubDate>Sat, 07 Oct 2000 09:00:00 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/2000/10/07/php-kongress-koeln.html</guid>
      <description>&lt;h1 id=&#34;day-1&#34;&gt;
    &lt;a href=&#34;#day-1&#34;&gt;
	Day 1
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;I attended PHP Congress Cologne (05-Oct-2000 to 06-Oct-2000)
together with Ulf Wendel and Jan Kneschke. We arrived in Cologne
the evening before without incident, hit our hotel sometime in
the evening and immediately departed for the &lt;code&gt;#php.de&lt;/code&gt; (IrcNet)
channel party organized by &lt;a href=&#34;http://www.subjective.de&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;subj&lt;/a&gt;

. As usual, there was
no proper beer to be had in Cologne (the local brew is based on
dishwater), but the Apfelpfannkuchen was nice. So were the
people, most of which I was able to meet in person for
the first time. People, you are as strange in real life as you
are on the channel!&lt;/p&gt;
&lt;p&gt;Next morning found us at the Crowne Plaza hotel, where Björn
Schotte and the Globalpark people were still fixing problems
with Internet access just before the congress was supposed to
start. This should turn out to be a recurring theme during the
entire congress, and is definitely a point to improve next
time.&lt;/p&gt;
&lt;h2 id=&#34;phpdoc&#34;&gt;
    &lt;a href=&#34;#phpdoc&#34;&gt;
	PHPdoc
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ulf&amp;rsquo;s lecture was the first one. He presented his
documentation generator &lt;a href=&#34;http://www.PHPdoc.de&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PHPdoc&lt;/a&gt;

, which is a large PHP
script largely based on concepts borrowed from JavaDoc. Phpdoc
is able to generate bare bones documentation from many PHP
scripts without any additional information, and can utilize
special comments within the script to generate full
documentation. The output is template driven HTML, with XML
being an interim format. This allows for automated
post-processing and provides unlimited customization of the
documentation.&lt;/p&gt;
&lt;p&gt;Because PHPdoc is working without any support from the PHP
interpreter in this version, its capabilities are still
somewhat limited, but it still is far better than anything else
currently available. In my opinion, PHPdoc should become the
standard format for documentation of PEAR and PHPLIB classes,
and work should concentrate on adding parser support for
documentation generation and to improve PHPdoc. PHPdoc is bound
to become a very important tool for large scale PHP
projects.&lt;/p&gt;
&lt;h2 id=&#34;opentracker&#34;&gt;
    &lt;a href=&#34;#opentracker&#34;&gt;
	OpenTracker
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ulf was followed up by Sebastian Bergmann of the PHP
OpenTracker project. He showed how PHP can be utilized to
capture and visualize click-path information and how this
information can be useful to optimize your site layout and
navigation for usability.&lt;/p&gt;
&lt;h2 id=&#34;fulltext-search&#34;&gt;
    &lt;a href=&#34;#fulltext-search&#34;&gt;
	Fulltext Search
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Alexander Aulbach continued with a report on using MySQL and
PHP to create a fast search engine. Working for a newspaper, he
was faced with the challenge to create a searchable fulltext
index for ~170.000 newspaper articles, and found the usual
solutions based on ht://dig and udm-search to limiting for his
project. Using a very unconventional approach to the problem, he
was able to create a workable and mostly efficient fulltext
search using pure MySQL and PHP - tools which are generally
considered as not suitable for such tasks. His fascinating
solution is up for sale, or can be recreated from his slides if
you can spare a man-month or two for development.&lt;/p&gt;
&lt;h2 id=&#34;web-security&#34;&gt;
    &lt;a href=&#34;#web-security&#34;&gt;
	Web Security
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;My own keynote was supposed to be scheduled for noon, but
because of the technical problems with the internet connection
before it started late. I had to cut down on content in order to
make good for the lost time. Find my slides at
&lt;a href=&#34;https://blog.koehntopp.info/2000/08/21/web-security.html&#34;&gt;Web Security&lt;/a&gt;

.
My talk went well (I had my slides available locally, and did
not need a remote connection), and I was able to make a number of
contacts&amp;hellip;&lt;/p&gt;
&lt;p&gt;Lunch drove the organization at Crowne Plaza to the limits of
their capacity: Although three different restaurants and
locations within the hotel provided lunch for the 400 people
attending, these people dispersed very unevenly, and some had to
wait for more than 30 minutes to get something to eat.
Nonetheless, the food and the service were excellent, once you
got them.&lt;/p&gt;
&lt;h2 id=&#34;php-in-startups&#34;&gt;
    &lt;a href=&#34;#php-in-startups&#34;&gt;
	PHP in Startups
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Just after lunch, Chris Cartus had a talk about the use of
PHP in startups. His talk centered around properties and
shortcomings of PHP as an implementation language and as a
platform and contained quite a bit of critique. It was received
somewhat controversial, which certainly was his intention, but
was in part based on outdated facts—PHP is currently a rapidly
moving target, and six months ago Chris would have been right on
all counts.&lt;/p&gt;
&lt;p&gt;Basically, Chris stated that the main strengths of PHP are its
superb rapid prototyping capabilities and its very
smooth learning curve: You can take any useful web designer and
start teaching PHP bit by bit. That designer will be productive
from day one, gradually moving out of the mouse mover camp and
entering the coder league, earning his money at all stages
during this transition. This is very unlike Java, which
generally requires a hard break where one sits down and learns
about programming, design techniques, UML and the like before
being completely useful.&lt;/p&gt;
&lt;p&gt;On the other hand, there is little support for high-end web
applications and development to be found in PHP—there is no
application server, load balancing is not part of PHP and can
only be obtained using crude external means such as RR DNS and
local redirects. Also, PHP is lacking in debugging
capabilities and provides little support for large scale
development (options comparable to the &amp;quot;use strict&amp;quot; and &amp;quot;-w&amp;quot;
modes of perl). Its object model is crude and needs more
sophistication and a performance tuneup to be useful on large
scale applications.&lt;/p&gt;
&lt;p&gt;To summarize: While PHP provides a road that is wide and
easily traveled at the beginning, this road is not as far-reaching as is the Java path. Chris claimed that further
extension of PHP is necessary to cover these areas.&lt;/p&gt;
&lt;p&gt;Chris also claimed that PHP has no Java integration to speak
of and mentioned some other areas where PHP is lacking, in his
opinion. Most of these areas have been worked on during the last
six months, and the situation is improving rapidly. For example,
Johann-Peter Hartmann demonstrated PHP&amp;rsquo;s Java integration
capabilities in his (later) XSLT comparison and found it to be
easily usable, but still unstable under load.&lt;/p&gt;
&lt;h2 id=&#34;hallway-track&#34;&gt;
    &lt;a href=&#34;#hallway-track&#34;&gt;
	Hallway track
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;I missed the next three talks given by Reiner Kukulies
(Communities with PHP), Mario Klaue (Using PHP generated DHTML
to build highly responsive pages) and Matthias Boese (&amp;ldquo;Using PHP
on SAT-1: Die Fahndungsakte&amp;rdquo; - a high traffic website for a TV
series). This is exactly the scenario where PHP should not be used
according to Chris Cartus, so there &lt;em&gt;are&lt;/em&gt; successful
deployments of PHP in high load environments.&lt;/p&gt;
&lt;p&gt;Instead, I had some stimulating discussions on web
security, and on possible future extensions of PHP outside the
lecture hall. Those small tables just next to the coffee bar
turned out to be very useful, indeed. Thank you, Thies, for
providing useful input and insight and thank you, Chris Cartus,
for your thought and discussion provoking talk.&lt;/p&gt;
&lt;h2 id=&#34;extending-php&#34;&gt;
    &lt;a href=&#34;#extending-php&#34;&gt;
	Extending PHP
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The day way almost finished with Sascha Schumann&amp;rsquo;s
&amp;ldquo;Extending PHP using C&amp;rdquo; express presentation
(&amp;ldquo;Hmm, it seems that I really should have some slides. I&amp;rsquo;ll create them while commiting
the latest patches to the session management module here.&amp;rdquo;).
Sascha, you really demonstrated that rapid prototyping can be a
way of life!&lt;/p&gt;
&lt;p&gt;Sascha prepared the ground for Jens Ohlig with
&amp;ldquo;C++ integration and 3 tier development&amp;rdquo;. Jens talk was about
using &lt;code&gt;phpswig&lt;/code&gt; to generate glue code to integrate C++ classes as
PHP extensions.&lt;/p&gt;
&lt;h2 id=&#34;afterglow&#34;&gt;
    &lt;a href=&#34;#afterglow&#34;&gt;
	Afterglow
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;For me personally, the talks by Chris Cartus and Jens Ohlig
were two most interesting talks of the day - Chris because of
the interesting ideas and the background he provided, and Jens
because of the extremely useful technology demonstration.&lt;/p&gt;
&lt;p&gt;Afterglow, the time between the conference talks and the
evening programme, was filled with discussion about software
patents and Sevenval - from the number and type of questions
currently easily the most hated company within the PHP or even
the German Open Source community.&lt;/p&gt;
&lt;p&gt;The Evening program was a travel by ship along the River Rhine
on board of the MS Enterprise, a theme ship modeled after a
well-known starship of the same name. The Buffet on board was
excellent, and so was the company :-) Thies and I had our fun
with Sascha, being half as old as either of us two (but twice as
cool). Ah, and the local brew does not taste much better when
you drink it on board of a ship. Memo to self: When you travel
to Cologne, bring your own beer.&lt;/p&gt;
&lt;h1 id=&#34;day-2&#34;&gt;
    &lt;a href=&#34;#day-2&#34;&gt;
	Day 2
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;php-and-pdf&#34;&gt;
    &lt;a href=&#34;#php-and-pdf&#34;&gt;
	PHP and PDF
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The second day started out slowly, with Hartmut Holzgraefe
demonstrating PDF creation using PDFTeX and PHP. He started out
showing the shortcomings and limitations of PHP&amp;rsquo;s PDF interface,
and presented PDFTeX as an alternative way to create good-looking PDF output.
TeX source creation was excruciating with
PHP 3, but using PHP 4 and the new output buffering interface
came just in time to be helpful and greatly simplify the
process. Limitations of his technique are the use of an external
process (the PDFTeX processor) not really suited for use in
batch processing, and the load this generates at the server
machine.&lt;/p&gt;
&lt;h2 id=&#34;php-on-windows&#34;&gt;
    &lt;a href=&#34;#php-on-windows&#34;&gt;
	PHP on Windows
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Next in line was Andreas Otto, who introduced the PHP4 build
process under Windows. As I don&amp;rsquo;t do Windows, I missed most of
this talk and had a session concerning the past and future of
&lt;code&gt;de.comp.lang.php&lt;/code&gt; at
the coffee table on the outside. It seems that a transition of the
FAQ to XML format will be well received and should be done on
short notice. Also, Sascha suggested the day before that an
english translation of the FAQ would be useful, as it is, in his
opinion, far better and more comprehensive that the english
original. Sascha suggested that the english version of the FAQ
should be channeled through the PHP documentation translation
team, producing multinational versions. Both he and I still see
problems resolving the update process, as the FAQ is produced in
german language, and updates and comments may come in english
as well as in german. We probably need a collection and
integration mechanism for that. TODO: Talk to the doc team and
see what they think.&lt;/p&gt;
&lt;h2 id=&#34;php-and-ipc&#34;&gt;
    &lt;a href=&#34;#php-and-ipc&#34;&gt;
	PHP and IPC
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;I rejoined the main lecture hall just in time to see Till
Gerken finish his talk about &amp;ldquo;Interprocess communication in
PHP&amp;rdquo;. Till presented the mechanisms used to create PHPChat,
and showed how shared memory and semaphores can be used to
improve performance in such applications.&lt;/p&gt;
&lt;h2 id=&#34;php-does-xslt&#34;&gt;
    &lt;a href=&#34;#php-does-xslt&#34;&gt;
	PHP does XSLT
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Johann-Peter Hartmann (What a name, what a hairstyle! :-)
followed up with &amp;ldquo;A comparison of PHP XSLT
processors&amp;rdquo;. His talk was met with great interest, as XSLT
seems to be a hot technology. Johann showed that XSLT still is
bleeding edge, and so is PHP-Java integration. Sablotron came
out as an overall winner in speed and stability with Xalan C++
being a close second and a somewhat more complete implementation
of the standard. Me, I am using Sablotron - Go, Ginger Alliance,
Go!&lt;/p&gt;
&lt;h2 id=&#34;zend&#34;&gt;
    &lt;a href=&#34;#zend&#34;&gt;
	Zend
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Tobias Ratschiller gave most of his time to Doron Gerstel of
Zend technologies, who was stunned by the support PHP has in
Germany and who presented the future marketing and product
strategy of Zend. It seems that Zend will be rolling out a profiler
and debugger this year, and follow up with the encoder shortly.
Also, a PHP IDE is planned and scheduled for next year.&lt;/p&gt;
&lt;p&gt;The presentation was quite interesting, especially in light
of Chris Cartus talk about startup companies and venture
capitalists the day before. It was obvious that Zend, being a
startup on venture capital, needs to show some revenue fast
before entering the next round of funding. Still, Zend seems to
be lacking vision and a roadmap for the future, and the
presentation left me a bit disappointed—perhaps it was the
presentation, which was marketing driven and focusing on
benefits, instead of technology driven, as almost all other talks
on the Congress were.&lt;/p&gt;
&lt;p&gt;I would have expected Zend to have learned from their polls
and their experience that people tend to use PHP for
projects larger than it was intended to be used. It would have
been smart for them to provide a strategic roadmap which shows
their intention to meet this demand with the appropriate moves
and improvements (application server, load balancing, stronger
Java integration, revised object model, optional strong typing,
optimizer and compiler making use of this typing for faster
code). Perhaps CC and Zend talking to each would be a good
match?&lt;/p&gt;
&lt;p&gt;Also, while there is a strong community of PHP developers, at
least in Germany, it seems that Zend is only very losely tied
into these channels, at least in Germany. There clearly is an
impedance mismatch between the community and the company, and
currently Zend cannot convince the community that it fulfills an
important role for the community, at least not in Germany.&lt;/p&gt;
&lt;p&gt;This is very dangerous for both parties involved: PHP cannot
survive without a focused and directed development team,
especially not in the upper area of the market. It is
specifically this market that is of very great importance for
the acceptance of PHP as a mainstream web development tool.&lt;/p&gt;
&lt;p&gt;Also, Zend cannot survive without being able to communicate
their role to the community, and in Germany that means
presenting - technology driven - a long term strategy,
scalability, flexibility and extensibility of the product at
management level as well as at developer level.&lt;/p&gt;
&lt;p&gt;On the other hand Zend must take care not to catapult itself
out of the PHP community, which is very tightly integrated in
Germany, having a few key websites, soon to be
complemented by a new MySQL newsgroup. While these locations
cover mostly low-end PHP usage, these are the pools where PHP
know-how is being created and the regulars at these locations are the
key drivers of the German PHP scene. Zend marketing currently
does not tap these reservoirs at all—send them to the clue
train, this is a large scale loss of communication
potential.&lt;/p&gt;
&lt;h2 id=&#34;world-domination-plans&#34;&gt;
    &lt;a href=&#34;#world-domination-plans&#34;&gt;
	World Domination Plans
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Tobias followed up with a short note on PHP &amp;ldquo;world
domination&amp;rdquo;, but time was too short for him to say
much.&lt;/p&gt;
&lt;h2 id=&#34;doing-forms&#34;&gt;
    &lt;a href=&#34;#doing-forms&#34;&gt;
	Doing Forms
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Next in line was Andre Christ presenting the Abstract
Presentation Layer, a high-level C++ extension of PHP, allowing
easy form creation and validation automation. From the questions
after the presentation and the afterglow talk, this was easily
the most heavily underrated presentation on the congress, as
Andre was presenting an unfinished, but very clean library
design, which has a few, but obvious and easily corrected
shortcomings and much potential. The APL is a LGPL library, and
is a project you should watch, unless you decide to get
involved. Also, keep an eye on twisd AG; these people are
good.&lt;/p&gt;
&lt;h2 id=&#34;more-world-domination&#34;&gt;
    &lt;a href=&#34;#more-world-domination&#34;&gt;
	More World Domination
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Unfortunately for the followup speakers, Andre&amp;rsquo;s talk created
the need for me to talk, again at the coffee tables, and so I
missed most of the finish - except for Björn Schotte&amp;rsquo;s legendary
&amp;ldquo;Björn Schotte World Domination&amp;rdquo; talk, which
transported hints at his site, &lt;a href=&#34;http://www.php-center.de/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PHP Center&lt;/a&gt;


as well as his
QuickCMS product with the subtle gentleness of a Ferenghi
sensing the opportunity to make some bars of gold pressed
Latinum. :-)&lt;/p&gt;
&lt;p&gt;All in all two days well spent. The congress served its
purpose very well, being an opportunity to bind some faces to
recurring names, to learn about the state of the art in the PHP
community, and to find out about the future direction PHP and
Zend development must take.&lt;/p&gt;
&lt;p&gt;Thank you, Björn, and thank you people at Globalpark, for
organizing the congress and see you next year.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Webserver verstehen und tunen</title>
      <link>https://blog.koehntopp.info/1999/10/15/webserver-verstehen-und-tunen.html</link>
      <pubDate>Fri, 15 Oct 1999 09:00:00 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/1999/10/15/webserver-verstehen-und-tunen.html</guid>
      <description>&lt;p&gt;&lt;em&gt;Diesen Artikel habe ich als Schulungsunterlage für
eine PHP-Fortgeschrittenenschulung bei
Netcologne geschrieben&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;PHP-Programme laufen auf dem Webserver. Sie können - angestoßen
durch einen externen Benutzer mit einem Browser - Dateien auf
dem Server lesen, schreiben oder löschen. Für einen
PHP-Programmierer ist es wichtig zu wissen, mit welchen Rechten
seine Programme ausgeführt werden und welche Einflüsse die
Ausführung seines Programms bestimmen. Nur so ist es ihm
möglich, sein System gegen böswillige Manipulation
abzusichern und seine Leistung zu optimieren.&lt;/p&gt;
&lt;h2 id=&#34;der-aufbau-des-apache-webservers&#34;&gt;
    &lt;a href=&#34;#der-aufbau-des-apache-webservers&#34;&gt;
	Der Aufbau des Apache-Webservers
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Der Apache-Webserver ist auf eine Weise konstruiert, die
es leicht macht, den Serverprozeß zu erweitern, und die ihn
besonders wenig anfällig gegen Betriebsstörungen gleich welcher
Art macht.&lt;/p&gt;
&lt;p&gt;Der Server besteht aus einem Managerprozeß, der eine Reihe von
Bearbeiterprozessen startet. Diese Prozesse führen die eigentliche
Request-Abarbeitung durch. Eingehende Requests werden vom
Manager registriert und an einen freien Bearbeiter
weitergereicht. Wenn der Bearbeiter mit der Ausführung des
Requests fertig ist, beendet er sich nicht, sondern meldet
sich beim Manager zurück, und dieser teilt dem Bearbeiter den
nächsten Request zu.&lt;/p&gt;
&lt;p&gt;Ein Bearbeitungsprozeß ist oftmals nicht in der Lage, einen
Prozessor voll auszulasten: Er muss auf das Eintreffen von Daten
von der Festplatte warten, oder er muss auf den Client auf der
anderen Seite des Netzes warten und sich mit der Abarbeitung des
Requests nach der Übertragungsgeschwindigkeit des Netzes
richten. Damit während dieser Zeit andere Requests bearbeitet
werden können, ist es sinnvoll, mehrere Bearbeiterprozesse zu
haben.&lt;/p&gt;
&lt;p&gt;Wie viele Bearbeiterprozesse sinnvoll sind, hängt von einer
ganzen Reihe von Parametern ab. Zunächst einmal wäre es
sicherlich schön, wenn immer genau so viele Bearbeiter vorhanden
sind, wie gleichzeitige Requests bei der Maschine ankommen. Nun
kann ein Rechner aber nicht beliebig viele Prozesse starten, und
speziell im Fall von Apache ist es so, daß der Webserver in
genau dem Moment sehr viel langsamer wird, in dem die Maschine
anfangen muss, Webserverprozesse mangels RAM in den Swapbereich
auszulagern. Das ist ein sehr unangenehmer Moment, denn bei
gleichbleibender Anzahl von Requests pro Sekunde (&amp;ldquo;Last bleibt
gleich&amp;rdquo;) dauert die Abarbeitung eines einzelnen Requests nun
viel länger (&amp;ldquo;Durchsatz sinkt&amp;rdquo;), und damit steigt die Anzahl der
ausstehenden Requests (&amp;ldquo;Ressourcenverbrauch steigt&amp;rdquo;). Das
Gesamtsystem versucht darauf mit einer weiteren Erhöhung der
Serverprozeßzahl zu antworten und treibt die Maschine nur noch
weiter in den Swap - die Requests werden noch langsamer
bearbeitet und als Antwort werden nur um so mehr
Serverprozesse erzeugt.&lt;/p&gt;
&lt;p&gt;In dieser Situation bricht die Systemleistung zusammen, oder das
System kommt im Extremfall vollständig zum Halt. Mithilfe des
Parameters &amp;ldquo;MaxClients&amp;rdquo; kann man in der &lt;code&gt;httpd.conf&lt;/code&gt; die Anzahl
der Serverprozesse nach oben begrenzen und so verhindern, daß
die Maschine in diesen fatalen Zustand gerät - die Zahl muss so
gewählt werden, daß die Maschine sicher nicht ins Swappen gerät.
Als hilfreich hat sich hier die Analyse der Zahlen in
&lt;code&gt;/proc/&amp;lt;pid&amp;gt;/statm&lt;/code&gt; erwiesen, wobei als &lt;pid&gt;&amp;gt; die Prozeßnummern
der httpd-Prozesse einzusetzen sind:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nv&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;grep -l httpd /proc/*/cmdline&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;nv&#34;&gt;$server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; cat &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;dirname &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;/statm&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1331&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;674&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;654&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;119&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;555&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;306&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;96&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;96&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;91&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1247&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;401&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;369&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;321&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;101&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1368&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;711&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;678&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;134&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;577&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;306&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1364&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;707&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;677&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;133&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;574&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;305&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1364&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;707&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;677&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;133&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;574&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;305&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1365&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;708&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;677&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;133&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;575&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;306&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;86&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;86&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;71&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;82&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die ausgegebenen Zahlen sind in
&lt;code&gt;/usr/src/linux/Documentation/proc.txt&lt;/code&gt; genauer erläutert. Sie
bedeuten von links nach rechts:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;size       total program size
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;resident   size of in memory portions
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;shared     number of the pages that are shared
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;trs        number of pages that are &amp;#39;code&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;drs        number of pages of data/stack
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;lrs        number of pages of library
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;dt         number of dirty pages
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Der Gesamtspeicherverbrauch eines weiteren Serverprozesses
ergibt sich aus seinen Resident (im RAM befindlichen) Unshared
Pages, die Page zu 4 KB in Intel-Rechnern. Also ist die
Differenz zwischen der zweiten und der dritten Zahl einer jeden
Zeile zu bilden und mit vier zu multiplizieren, um den
zusätzlichen RAM-Verbrauch eines einzelnen httpd in KB zu
ermitteln. Überschlagsmäßig können in der hier gezeigten
Konfiguration etwa 100-150 KB angesetzt werden, aber diese Zahl
kann je nach Webserver und Art der Last stark variieren und
bedarf in jedem Fall eines Tunings im Wirkbetrieb.&lt;/p&gt;
&lt;p&gt;Bei einem geeigneten Wert für &lt;code&gt;MaxClients&lt;/code&gt; erzielt der
Apache-Webserver bei zunehmender Last (&amp;ldquo;ramp-up&amp;rdquo;) linear mehr
Durchsatz, bis der Sättigungspunkt erreicht ist. Danach bleibt
die Leistung auf einem stabilen Plateau, wenn nicht ein anderer
leistungsbegrenzender Faktor wirksam wird (Netzbandbreite,
DNS-Lookups, Plattenbandbreite, CPU-Leistung).&lt;/p&gt;
&lt;p&gt;Bei nachlassender Last ist es natürlich nicht notwendig, die
ganzen Serverprozesse im Speicher herumstehen zu haben. Der
Managerprozeß kontrolliert laufend, wie viele unbeschäftigte
Bearbeiter er zur Verfügung hat und wenn dies mehr als
&lt;code&gt;MaxSpareServers&lt;/code&gt; viele sind, wird er beginnen, die Anzahl der
Serverprozesse zu verringern. Bei steigender Last wird der
Manager diese Zahl dann wieder steigern. Aber das Starten von
neuen Serverprozessen dauert einige Zeit, und daher ist es gut,
eine gewisse Anzahl von unbeschäftigten Bearbeiterprozessen &amp;ldquo;auf
Vorrat&amp;rdquo; zur Hand zu haben, damit man Lastspitzen ausreiten kann.
Der Parameter &lt;code&gt;MinSpareServers&lt;/code&gt; legt fest, wie groß der Vorrat
ist, den der Manager anlegt. Es ist nicht sinnvoll,
&lt;code&gt;MinSpareServers&lt;/code&gt; größer als &lt;code&gt;MaxSpareServers&lt;/code&gt; zu setzen: Beide
Werte können im Extremfall gleich groß sein, aber in einer
sinnvollen Konfiguration wird &lt;code&gt;MaxSpareServers&lt;/code&gt; immer größer als
&lt;code&gt;MinSpareServers&lt;/code&gt; sein.&lt;/p&gt;
&lt;p&gt;Je stärker und je schneller die Last auf einem Webserver
springt, umso größer sollte man den Abstand zwischen beiden
Werten wählen. Je langsamer die Maschine beim Starten von neuen
Serverprozessen ist und je ruckartiger die Last auf dem Server
ansteigen kann, umso höher muss man &lt;code&gt;MinSpareServers&lt;/code&gt; wählen,
damit im Falle einer Spitzenlast schon ausreichend viele Server
vorhanden sind. Mit dem Parameter &lt;code&gt;StartServers&lt;/code&gt; legt man fest,
wie viele Serverprozesse schon beim Hochfahren des Managers mit
erzeugt werden.&lt;/p&gt;
&lt;p&gt;Für eine dedizierte Maschine mit einem Speicherverbrauch von 200
KB pro Serverprozeß und einem freien RAM von 100 MB nach dem
Start aller anderen Systemdienste kann man einen &lt;code&gt;MaxClients&lt;/code&gt;-Wert
von weniger als 500 ansetzen, wenn nur httpd-Prozesse laufen
(bei Ausführung von CGI-Programmen ist dies nicht der Fall -
hier muss man Speicher für die CGI-Programme reservieren!). Wenn
es sich um eine dedizierte Maschine handelt, die nur diesen
einen Webserver ausführen soll und auf der keine andere
Anwendung läuft, gibt es keinen Grund, die Anzahl der Clients zu
begrenzen: Man kann gleich beim Start alle Webserverprozesse auf
Vorrat erzeugen und hat dann unter Last die benötigte Leistung
parat. Dies ist ideal für Webserver, die bei zeitlich
abgestimmten Medienevents (&amp;ldquo;TED-Server&amp;rdquo;, &amp;ldquo;Wahl-Server&amp;rdquo;)
plötzliche Spitzenlasten wegstecken können müssen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MaxClients      450
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;StartServers    450
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MaxSpareServers 450
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MinSpareServers 450
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ein solcher Server wird etwa 400-450 parallele Requests
bearbeiten können. Ist eine Seite im Schnitt 100 KB groß und
wird eine solche Seite im Mittel mit 5 KB/sec ausgeliefert,
dauert das Ausliefern einer Seite im Mittel also 20 Sekunden.
Mithin hat man mit der gezeigten Konfiguration so Leistung für
etwa 20 Requests/sec (1200 rpm, requests per minute) -
vorausgesetzt, man begrenzt die Leistung der Maschine nicht
durch andere Faktoren (20 Requests pro Sekunde, 5 KB pro Sekunde =&amp;gt; 100 KB/sec oder knapp eine halbe S2M).&lt;/p&gt;
&lt;p&gt;Ein anderes Szenario wäre derselbe Rechner bei einem ISP, der
auf unterschiedlichen virtuellen Interfaces mit
unterschiedlichen IP-Nummern unterschiedliche Apache-Server
betreibt, die sich die Maschine teilen müssen. Alle Server
sollen möglichst wenig Ressourcen verbrauchen, wenn die Last
gering ist:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MaxClients      200 # drei Kunden teilen sich diesen Rechner
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;StartServers      5 # wenige Prozesse vorab starten
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MinSpareServers   5 # immer 5 in Reserve halten
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;MaxSpareServers  10 # maximal 10 in Reserve halten
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hier können bei drei unterschiedlichen Apache-Instanzen im
Extremfall 600 Serverprozesse auftreten (damit würde man die
Maschine also leicht im Überlastbereich betreiben), aber jede
Apache-Konfiguration versucht ihren Serverpool immer nur so groß
wie unbedingt nötig zu halten. Solange alle drei immer mit ca.
100-150 Servern rumdröhnen, herrscht eine friedliche Koexistenz.&lt;/p&gt;
&lt;h2 id=&#34;lebensdauer-von-serverprozessen&#34;&gt;
    &lt;a href=&#34;#lebensdauer-von-serverprozessen&#34;&gt;
	Lebensdauer von Serverprozessen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Apache ist ein sehr gutmütiger Webserver: Da er nicht
multithreaded ist, ist er sehr leicht durch selbstgeschriebene
Module zu erweitern, ohne daß diese Module aufwendig reentrant
gemacht werden müßten oder anders aufwendig anzupassen sind. Die
Server-API unterstützt die Integration von Modulen durch die
Bereitstellung von Schnittstellen zu Speicherverwaltung, zur
Request-Verarbeitung und zur Response-Generierung. Leider sind
nicht alle Module sauber programmiert: Manche von ihnen erzeugen
Core Dumps, andere stürzen zwar nicht ab, aber sie belegen mehr
und mehr Speicher und lassen den Serverprozeß so ins Grenzenlose
wachsen.&lt;/p&gt;
&lt;p&gt;Apache ist so konstruiert, daß er mit dieser Situation fertig
werden kann, ohne den Betrieb des gesamten Serversystems zu
gefährden: Ein abstürzender Bearbeiterprozeß wird durch den
Manager registriert, und der Manager erzeugt ggf. einen neuen
Bearbeiterprozeß, wenn die Lastsituation es erfordert.
Ein Bearbeiter kann durch das Setzen des Parameters
&lt;code&gt;MaxRequestsPerChild&lt;/code&gt; auf einen von 0 verschiedenen Wert so
konfiguriert werden, daß er maximal so viele Requests wie
angegeben bearbeitet und sich dann beendet. Durch Speicherlecks
verlorengegangener Speicher wird dann wieder freigegeben - der
Manager wird den beendeten Bearbeiterprozeß wie bei einem
Absturz ersetzen, falls notwendig.&lt;/p&gt;
&lt;p&gt;Das Regenerieren von verlorengegangenen Serverprozessen kostet
zwar Systemleistung, weil der Kernel &lt;code&gt;fork()&lt;/code&gt;-Systemaufrufe
durchführen muss, aber der Webserver bleibt immerhin verfügbar.
Bei einem Single-Process-Server mit Multithreading wäre eine
solche Fehlerresistenz nicht machbar.&lt;/p&gt;
&lt;p&gt;Der Managerprozeß und alle seine Bearbeiterprozesse laufen unter
der in der Hauptkonfiguration mit den Direktiven &amp;ldquo;User&amp;rdquo; und
&amp;ldquo;Group&amp;rdquo; angegebenen UID- und GID-Werten. Man kann dies auch in
der Prozeßliste sehen, indem man sich den Eigentümer der
httpd-Prozesse ansieht:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;valiant:/proc/2544 &lt;span class=&#34;c1&#34;&gt;# ls -ld .&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dr-xr-xr-x   &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; wwwrun   nogroup         &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; Jun  &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; 21:55 .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;valiant:/proc/2544 &lt;span class=&#34;c1&#34;&gt;# cat cmdline | xargs -0 echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/usr/local/apache/bin/httpd -f /usr/local/apache/conf/httpd.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Es ist wichtig zu verstehen, daß diese Werte für den gesamten
Server, also für alle von ihm verwalteten virtuellen Server,
gelten. Das heißt: Alle Zugriffe durch den Webserver auf Dateien
werden unter dieser UID und GID durchgeführt, auch dann, wenn in
den einzelnen &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt;-Abschnitten andere User- und
Group-Werte angegeben sind. Diese anderen Identitäten werden
ausschließlich für die Ausführung von CGI-Programmen durch das
suexec-Utility angenommen.&lt;/p&gt;
&lt;p&gt;Hat man seinen Webserver mit &lt;code&gt;mod_php&lt;/code&gt; oder &lt;code&gt;mod_perl&lt;/code&gt; konfiguriert,
dann werden auch alle Dateizugriffe dieser beiden Module unter
der einen zentralen Identität des Servers ausgeführt werden, da
die Module im Kontext des Serverprozesses ablaufen. Das ist eine
Tatsache, die man unbedingt im Hinterkopf behalten sollte, wenn man
Webserver aufsetzt, auf denen mehrere unterschiedliche Kunden
eigene Scripte ausführen können. Da alle diese Scripte immer
unter derselben UID/GID ausgeführt werden, gibt es nichts, das
verhindern könnte, daß ein Kunde auf die Dateien eines anderen
Kunden zugreift. Ein solches Konzept ist für das Webhosting
untauglich.&lt;/p&gt;
&lt;p&gt;CGI-Programme werden durch den Apache nicht direkt, sondern
immer über das &lt;code&gt;suexec&lt;/code&gt;-Utility gestartet. Der Apache erzeugt dazu
mittels &lt;code&gt;fork()&lt;/code&gt; eine Kopie von sich selbst, die sich selbst dann
durch das suexec-Programm ersetzt. Dieses Programm ist mit
Systemverwalterrechten ausgestattet (ein SUID-root-Programm) und
stellt danach die UID/GID des neuen Prozesses auf die User- und
Group-Angaben des zuständigen virtuellen Hosts um. Außerdem
setzt es noch eine Reihe von Ressourcelimits, bereinigt das
Prozeßenvironment und führt eine Reihe von anderen
Aufräumarbeiten durch. Erst dann ersetzt es sich selbst durch
das auszuführende CGI-Script. Dieses Script läuft dann mit der
eingestellten Identität, die von der Identität des Webservers
selbst verschieden sein kann, und beendet sich anschließend.&lt;/p&gt;
&lt;p&gt;Da die Ausführung von CGI-Programmen die Erzeugung eines neuen
Prozesses und das Laden von mindestens zwei Programmen (suexec
und den Scriptinterpreter) bedingt, werden CGI-Programme sehr
viel langsamer ausgeführt als Modulprogramme. Zu den genannten
Kosten kommen noch Aufwände für ein rundes Dutzend Systemaufrufe
innerhalb von suexec hinzu, die aber gegenüber den
fork()/exec()-Kosten verschwindend gering sein dürften.&lt;/p&gt;
&lt;p&gt;Man hat als ISP mit einem VirtualHost-Setup also die Wahl
zwischen einem schnellen, unsicheren Setup und einer deutlich
langsameren, aber sichereren Variante.&lt;/p&gt;
&lt;p&gt;Es existiert übrigens eine Variante des suexec-Programmes für
den Apache, die wesentlich weniger restriktiv bei der Prüfung
der User- und Gruppenrechte an der auszuführenden Datei und
dem enthaltenden Verzeichnis ist, die dafür aber eine
&lt;code&gt;chroot()&lt;/code&gt;-Umgebung aufsetzt, in der dieses Programm ablaufen
kann. Dadurch, daß das Programm in der &lt;code&gt;chroot()&lt;/code&gt;-Umgebung
eingesperrt ist, wird ein zusätzlicher Grad an Sicherheit
erreicht.&lt;/p&gt;
&lt;h2 id=&#34;aufbau-des-mysql-datenbankservers-und-interaktion-mit-php&#34;&gt;
    &lt;a href=&#34;#aufbau-des-mysql-datenbankservers-und-interaktion-mit-php&#34;&gt;
	Aufbau des MySQL-Datenbankservers und Interaktion mit PHP
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Viele PHP-Programme verwenden einen MySQL-Datenbankserver als
Backend zur Speicherung und Auswertung von Daten. Als Datenbank
für Webserver ist MySQL besonders geeignet, da MySQL Connections
vom PHP-Interpreter zum Datenbankserver sehr schnell errichten
und wieder trennen kann und da MySQL im Gegensatz zu &amp;ldquo;echten&amp;rdquo;
Datenbanken auf saubere Verwaltung von Transaktionen verzichtet
und daher verschiedene Operationen sehr viel schneller abwickeln
kann als vollständige SQL-Datenbanken. Für Webanwendungen ist
dies ideal, da diese in ihrer Mehrzahl eher geringe Ansprüche an
die Transaktionsfähigkeit der Datenbank stellen, dafür aber sehr
viele parallele Sessions erzeugen können.&lt;/p&gt;
&lt;p&gt;Um abschätzen zu können, in welche Situation man die Datenbank
bringt, wenn man sie als Backend an einem Webserver betreibt,
muss man wieder die beiden Fälle CGI PHP und mod_php
unterscheiden.&lt;/p&gt;
&lt;p&gt;In CGI PHP wird auf einer Webseite irgendwann einmal ein
&lt;code&gt;mysql_connect()&lt;/code&gt; oder &lt;code&gt;mysql_pconnect()&lt;/code&gt; ausgeführt. PHP stellt in
diesem Moment eine Verbindung zu Datenbank her und arbeitet dann
mit dieser Verbindung. Spätestens am Ende der Seite endet das
PHP-Programm und mit ihm auch der PHP-Interpreterprozeß selbst.&lt;/p&gt;
&lt;p&gt;Dadurch werden alle Filehandles dieses Prozesses geschlossen,
also auch die Datenbankverbindung. CGI PHP wird also in
schneller Folge Datenbankverbindungen öffnen und schließen, und
es wird maximal so viele Datenbankverbindungen geben, wie es
parallele PHP-Interpreter geben kann, nämlich &lt;code&gt;MaxClients&lt;/code&gt; viele.
Man muss den Datenbankserver vom RAM und vom Serverprozeß
her so konfigurieren, daß er mit einer solchen Anzahl von
parallelen Sessions fertig werden kann!&lt;/p&gt;
&lt;p&gt;Wenn in mod_php mit &lt;code&gt;mysql_connect()&lt;/code&gt; gearbeitet wird, verhält es
sich exakt so wie CGI PHP: Am Ende der Webseite wird die
Datenbankverbindung geschlossen. Anders bei &lt;code&gt;mysql_pconnect()&lt;/code&gt;: Da
der Interpreter als Modul Bestandteil des Bearbeiterprozesses
des Webservers ist, kann dieser die Verbindung auch nach dem
Ende der Webseite offen halten. Fordert später eine andere
Webseite eine Verbindung mit denselben Host/User/Paßwort-Daten
an, kann der Bearbeiterprozeß diese existierende Verbindung
anbieten, anstatt erneut eine solche Verbindung eröffnen zu
müssen. Bei &lt;code&gt;mysql_pconnect()&lt;/code&gt; hat dies wegen der Geschwindigkeit
von MySQL nur vergleichsweise geringe Auswirkungen; verwendet
man hingegen Oracle, sind mod_php und &lt;code&gt;ora_plogon()&lt;/code&gt; absolut
essenziell, wenn man Performance braucht.&lt;/p&gt;
&lt;p&gt;Jeder Bearbeiterprozeß muss für sich alleine einen Connect zum
Datenbankserver offen halten, da solche Connects nicht zwischen
unterschiedlichen Prozessen austauschbar sind. Ein einzelner
Bearbeiterprozeß hält jedoch unter Umständen mehrere
Datenbankconnects mit unterschiedlichen
User/Paßwort-Kombinationen offen, wenn dies in der Konfiguration
so vorkommt. Man muss daher im Extremfall auf dem Datenbankserver
mit &lt;code&gt;MaxClients&lt;/code&gt; mal &amp;ldquo;Anzahl der vorkommenden
User/Paßwort-Kombinationen&amp;rdquo; vielen parallelen Connects
klarkommen. Es ist klar, daß sich dies schlecht skaliert.&lt;/p&gt;
&lt;p&gt;PHP geht bei der Verwaltung von MySQL-Datenbankverbindungen
übrigens von der falschen Annahme aus, daß eine
Datenbankverbindung zustandslos ist und daher gefahrlos
wiederverwendet werden könne, wenn ein zweiter Connect mit
derselben Username/Paßwort/Hostname-Kombination gemacht wird.
Man kann dies beobachten, indem man das folgende Stück Code
ausführen läßt:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;kk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;land&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:~/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Source&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;./&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$link&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mysql_connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kk&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$link&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$link2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mysql_connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kk&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$link2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Obwohl hier zwei verschiedene MySQL-Datenbankverbindungen
geöffnet werden sollen, wird in beiden Fällen dieselbe Link-ID
zurückgeliefert. Es handelt sich also in beiden Fällen um
dieselbe Datenbankverbindung. Dies wird in dem Moment zum
Problem, wo der Zustand der Datenbank, der per Link-ID verwaltet
wird, sich ändert. In MySQL gehört zu diesem Zustand der Name
der aktuellen logischen Database, mit der gearbeitet wird. Wird
diese Database mittels &amp;ldquo;use &lt;databasename&gt;&amp;rdquo; oder mit Hilfe von
&lt;code&gt;mysq_select_db()&lt;/code&gt; verändert, wirkt sich die Änderung auf die
beiden vermeintlich unabhängigen Datenbankverbindungen aus.
Abhilfe schafft hier nur, entweder nur mit einer einzigen
Datenbank zu arbeiten oder mit Hilfe von mehreren
unterschiedlichen Benutzernamen unterschiedliche
Datenbankverbindungen zu erzwingen.&lt;/p&gt;
&lt;p&gt;Ein ähnliches, noch viel gefährlicheres Problem erleidet man mit
Oracle, denn dort gehört die derzeit aktive Transaktion zum
Zustand der Datenbankverbindung - ein &lt;code&gt;COMMIT&lt;/code&gt; oder &lt;code&gt;ROLLBACK&lt;/code&gt; wirkt
sich hier auf beide vermeintlich unabhängigen Verbindungen aus.&lt;/p&gt;
&lt;p&gt;Der Datenbankserver erlaubt mit einer Ausnahme keine Interaktion
eines Anwenders mit dem Dateisystem. Alle Änderungen sind also
ausschließlich auf Datensätze innerhalb der Datenbank
beschränkt. Die Ausnahme ist das Laden von Daten in die
Datenbank mit &lt;code&gt;LOAD DATA INFILE&lt;/code&gt;, das die Übernahme von
beliebigen Daten mit zeilenweiser Satzstruktur in
Datenbanktabellen erlaubt. Um diese Operation durchführen zu
können, benötigt der aktuelle Benutzer in MySQL &lt;code&gt;file_priv = &#39;y&#39;&lt;/code&gt; für seinen Benutzereintrag in der Tabelle &lt;code&gt;mysql.user&lt;/code&gt;. Das
Recht kann nicht datenbankbezogen, sondern nur benutzerbezogen
vergeben werden.&lt;/p&gt;
&lt;p&gt;Neuere Versionen von MySQL erlauben statt dessen &lt;code&gt;LOAD DATA INFILE LOCAL&lt;/code&gt;, bei denen der Lesezugriff nicht durch den
Datenbankserver und mit den Rechten des Datenbankservers
erfolgt, sondern stattdessen durch den Client (PHP) und mit den
Rechten des Clients. Dies ist zwar langsamer, aber sicherer und
benötigt keine besonderen Privilegien. Es ist empfehlenswert,
immer &lt;code&gt;LOAD DATA INFILE LOCAL&lt;/code&gt; zu verwenden. Beim Load sehr großer
Tabellen kann es jedoch notwendig werden, die CPU-Zeitbegrenzung
des PHP-Interpreters hochzusetzen.&lt;/p&gt;
&lt;p&gt;Im Übrigen ist zu beachten, daß es der PHP-Interpreter ist, der
sich an den Datenbankserver connected, und nicht der Browser des
Anwenders. Die MySQL-Ports können daher an der Firewall
problemlos abgedichtet werden, um direkte Zugriffe eines
Anwenders an PHP vorbei auf den Datenbankserver zu verhindern:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                    ||
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                    ||&amp;lt;--- connect --- mysql-Client
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                    ||     Port 2042
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                    ||
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   MySQL  &amp;lt;--- connect --- PHP &amp;lt;--- || --- connect --- Browser
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;               Port 2042    &amp;amp;       ||     Port 80
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                          httpd     ||
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                 Firewall
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                 läßt nur
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                 Port 80
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                 durch
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;grenzen-von-vertrauen&#34;&gt;
    &lt;a href=&#34;#grenzen-von-vertrauen&#34;&gt;
	Grenzen von Vertrauen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Firewall definiert in diesem System eine Grenze (&amp;ldquo;Trust
Boundary&amp;rdquo;) zwischen dem Internet mit potenziell gefährlichen
Daten und dem Intranet, in dem vertrauenswürdige Anwendungen
vertrauenswürdige Informationen halten. Daten kreuzen diese
Grenze in beide Richtungen, und es ist dringend erforderlich,
diesen Übergängen besondere Aufmerksamkeit zu widmen.&lt;/p&gt;
&lt;h3 id=&#34;übergänge-von-innen-nach-außen&#34;&gt;
    &lt;a href=&#34;#%c3%bcberg%c3%a4nge-von-innen-nach-au%c3%9fen&#34;&gt;
	Übergänge von innen nach außen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Übergänge von drinnen nach draußen sind vergleichsweise einfach
abzuhandeln, da es sich um Übergänge aus einem Bereich mit hohem
Vertrauen in einen Bereich mit weniger hohem Vertrauen handelt.
Besondere Maßnahmen muss man hier genau dann ergreifen, wenn man
für die herausgegebenen Daten etwas garantieren möchte: Etwa daß
sie beim Empfänger unverfälscht oder gar nicht ankommen oder daß
außer dem Empfänger niemand Kenntnis von den Daten bekommen kann
oder daß der Empfänger sicher sein kann, daß er tatsächlich mit
dem Webserver und nicht mit einem Angreifer redet, der sich als
der Webserver ausgibt.&lt;/p&gt;
&lt;p&gt;In allen diesen Fällen ist der Einsatz von SSL auf dem Server
empfehlenswert. Eine SSL-Verbindung ist wie ein gepanzerter
Tunnel zwischen dem Webserverprozeß auf dem Server und dem
Browserprozeß beim Abrufer. Er kann durch Dritte nicht
eingesehen werden, und die Daten, die darin fließen, können durch
Dritte nicht verfälscht werden. Durch ein Server-Zertifikat kann
der Abrufer außerdem sicher sein, daß das andere Ende des
Tunnels wirklich beim Webserver liegt und nicht bei jemand anderen.&lt;/p&gt;
&lt;p&gt;Zwar ist eine Anwendung leicht auf SSL umzustellen (es muss
nämlich bis auf die verwendeten URLs nichts angepasst werden),
aber die Kosten für den Einsatz von SSL sind dennoch recht hoch.
SSL setzt auf der TCP/IP-Ebene an; es schiebt sich quasi als
Schutzschicht zwischen die Schichten 4 und 5 des
OSI-Protokollstacks.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+- Anwendungsprogramm----+   +- Anwendungsprogramm----+---+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Anwendungsschicht      |   | Anwendungsschicht      |SSL|
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+API|
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Präsentationsschicht   |   | Präsentationsschicht   |   |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+   |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Sitzungschicht         |   | Sitzungschicht         |   |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+   |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                             | SSL-Verschlüsselung        |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                             +----------------------------+  Userland
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;=====================================================================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                                             Kernel
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+- Betriebssystem -------+   +- Betriebssystem -------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Transportschicht (TCP) |   | Transportschicht (TCP) |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Netzwerkschicht (IP)   |   | Netzwerkschicht (IP)   |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;+- Gerätetreiber --------+   +- Gerätetreiber --------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Verbindungsschicht     |   | Verbindungsschicht     |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Physikalische Schicht  |   | Physikalische Schicht  |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------------------------+   +------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dies bedeutet, daß bei dem Abruf einer Webseite per SSL zuerst
die TCP/IP-Netzwerkverbindung, dann die SSL-Zertifikate
ausgetauscht werden und danach erst die HTTP-Requests übertragen
werden. Da beim HTTP-Request mit dem Host-Header festgelegt
wird, welchen virtuellen Webserver die Anwendung sprechen will,
aber zuvor schon die SSL-Zertifikate ausgetauscht werden, ist es
nicht möglich, verschiedene SSL-Server mit derselben IP-Nummer
zu betreiben. Stattdessen müssen SSL-Server auf IP-basierte
virtuelle Hosts aufgesetzt werden, und jeder SSL-Server
verbraucht eine IP-Nummer.&lt;/p&gt;
&lt;p&gt;Dazu kommt, daß anders als bei unverschlüsseltem HTTP eine
SSL-Verbindung nicht mit HTTP/1.1 Keepalive offen gehalten
werden kann. Anderenfalls könnte man nämlich recht leicht einen
Angriff mit bekannten Klartexten gegen den Server fahren: Würde
ein SSL-Server eine Verbindung mit Keepalive offen halten,
würden nach Austausch der Zertifikate Session-Keys ausgetauscht
werden. Mit diesen Session-Keys verschlüsselte Daten würden dann
über die SSL-Verbindung ausgetauscht werden. Wird die Verbindung
für mehr als einen Request benutzt, sind die Chancen gut, daß
geheime Daten (etwa die Kreditkartennummer) und bekannte Daten
(etwa ein Logo-GIF) über dieselbe Verbindung mit demselben
Session-Key verschlüsselt übertragen werden. Ist dies der Fall,
kann man mit Hilfe der bekannten Daten nach dem verwendeten
Session-Key suchen und dann die unbekannten Daten entschlüsseln.&lt;/p&gt;
&lt;p&gt;Dadurch, daß SSL-Verbindungen die Vorteile von HTTP/1.1
Keepalives nicht nutzen können, müssen sie für jede einzelne
Komponente einer Webseite eine neue Verbindung aufbauen. Diese
einzelnen Verbindungen sind nicht nur ständig durch den
TCP-Slow-Start gebremst, sondern müssen ebenfalls ständig neu
Verschlüsselungsverfahren und Session-Keys aushandeln, was
zusätzliche Datenaustausche zwischen den beiden Partnern
notwendig macht - jeder dieser Datenaustausche dauert jedoch
eine Umlaufzeit (die Zeit, die von Ping als RTT ausgegeben
wird). Es ist also sehr viel damit geholfen, SSL-Seiten so
aufzubauen, daß sie aus möglichst wenigen Komponenten
zusammengesetzt sind, also wenige Bilder und Plugins enthalten,
die getrennt nachgeladen werden müssen. Über diesen
Verzögerungswerten kann man die zusätzliche Belastung der CPU
durch Verschlüsselung und Kompression beinahe vernachlässigen.&lt;/p&gt;
&lt;p&gt;Weil SSL-Verbindungen gleich oberhalb der TCP-Ebene
verschlüsseln, sind nicht nur die übertragenen Daten
verschlüsselt, sondern auch alle HTTP-Header. Ein Angreifer kann
also ebenfalls nicht erkennen, welche Seiten abgerufen werden
und welcher Art die zurückgelieferten Daten sind. Dies hat
Auswirkungen auf Proxy-Server, auf den Jugendschutz, falls
dieser auf filternde Proxy-Server zurückgreift, und auf den
Virenschutz, falls dieser auf einen zentralen Scanner auf einem
Proxy zurückgreift: Selbst wenn man mit jedem Request dieselben
Daten abriefe und nicht über Zertifikate nachdächte, würden
wegen des wechselnden Session-Keys die abgerufenen Daten bei
jedem Request anders aussehen, und der Proxy hätte, falls er
Filterfunktionen wahrnehmen sollte, keine Informationen über die
tatsächliche Natur der abgerufenen Daten. SSL-Verbindungen
machen also zentrale Scanmechanismen unbrauchbar.
Sie sind mit Absicht so designed worden.&lt;/p&gt;
&lt;h2 id=&#34;übergänge-von-außen-nach-innen-und-die-notwendigkeit-von-sessions&#34;&gt;
    &lt;a href=&#34;#%c3%bcberg%c3%a4nge-von-au%c3%9fen-nach-innen-und-die-notwendigkeit-von-sessions&#34;&gt;
	Übergänge von außen nach innen und die Notwendigkeit von Sessions
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Werden Daten von außen nach innen in die Zone höheren Vertrauens
importiert, muss mit noch mehr Aufmerksamkeit gearbeitet werden,
denn die importierten Daten können prinzipiell bösartig sein und
müssen so schnell und so gründlich wie möglich dekontaminiert
werden.&lt;/p&gt;
&lt;p&gt;Die Anwendung läuft bei Webprogrammen zum Teil auf dem Browser
des Anwenders, und dieser liegt außerhalb der Vertrauensgrenze
unseres Systems. Man kann nicht davon ausgehen, daß der Browser
des Anwenders bestimmten Anforderungen genügt, und man kann
daher nicht voraussetzen, daß die gelieferten Daten bestimmten
Anforderungen genügen, bevor diese Anforderungen nicht alle
einzeln abgetestet worden sind.&lt;/p&gt;
&lt;p&gt;Man kann beispielweise ein Formular an den Browser des Anwenders
schicken, und dieses Formular kann in Javascript geschriebene
Validatoren enthalten, die sicherstellen, daß in numerischen
Feldern auch nur Ziffern enthalten sind und so weiter. Man kann
nicht voraussetzen, daß der Browser des Anwenders Javascript
interpretiert, da diese Funktionalität ggf. ausgeschaltet oder
gar nicht vorhanden ist. Es ist auch denkbar, daß eine Firewall
auf dem Weg zum Abrufer jeden aktiven Content aus Seiten
herausfiltert und daß daher Javascript gar nicht beim Browser
ankommen kann. Es wäre weiterhin denkbar, daß die Anwendung zwar
ein Formular mit Javascript zum Anwender gesendet hat, dort aber
gar kein Browser läuft, sondern der Anwender stattdessen seine
Requests und die Replies manuell mit &amp;ldquo;telnet&amp;rdquo; bearbeitet. Dann
wäre der Anwender prinzipiell in der Lage, beliebig defekte
Daten einzuliefern.&lt;/p&gt;
&lt;p&gt;Man kann ebenfalls nicht davon ausgehen, daß die Daten, die der
Anwender abgesendet hat, und die Daten, die der Webserver
erhält, identisch sind. Eine Instanz auf dem Weg - ein Proxy
oder ein Angreifer - könnten diese Daten verändern oder
veraltete Daten zurücksenden.&lt;/p&gt;
&lt;p&gt;Es bleibt also nicht anderes übrig, als alle Daten beim Erhalt
und beim Eintritt in die Zone hohen Vertrauens genauestens zu
prüfen. Danach müssen diese Daten in der Zone hohen Vertrauens
verbleiben und dürfen diese nicht mehr verlassen - täten sie es,
müßten sie beim Wiedereintritt in die Zone hohen Vertrauens
erneut geprüft werden. Es ist daher keine gute Idee, Daten in
Form von &lt;INPUT TYPE=&#34;hidden&#34;&gt; über mehrere Formulare hinweg
mitzuschleppen - in einem solchen Fall würden die Daten nämlich
ständig zwischen der Zone hohen Vertrauens auf unserer Seite des
Netzes und der entfernten Anwendung hin- und herwechseln und bei
jedem neuen Request erneut aus der einen und die andere Zone
wechseln. Solch eine Anwendung ist konstruktionsbedingt nicht
sicher zu bekommen.&lt;/p&gt;
&lt;p&gt;Besser und sicherer ist es, mit einer Session-Verwaltung zu
arbeiten. In einem solchen Modell wird der Browser-Client durch
eine eindeutige Kennziffer identifiziert, und über diese
Kennziffer wird ein Datensatz innerhalb der Trust Boundary an
den Browser gebunden.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                 || Trust Boundary
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                 ||
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  +-------------+                ||    +--------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  | Server      |&amp;lt;----- Request ------ | Client |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  +-------------+       mit ID   ||    +--------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       | referenziert Datensatz mit ID
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     +-|--------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    +--|-------+|
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   +---v------+||
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   | Client-  ||+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   | Daten    |+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   +----------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Daten, die die Trust Boundary einmal passiert haben, verbleiben
nun auf der Serverseite und können durch den Client nicht mehr
direkt manipuliert werden. Der Client kann nur noch mittelbar
durch Veränderung der Session-ID versuchen, einen anderen
Datensatz mit anderen Daten zu referenzieren. Daraus folgt, daß
die Session-ID selbst keine fortlaufende Nummer oder eine andere
vorhersagbare und ratbare Zahl sein darf.&lt;/p&gt;
&lt;p&gt;In der Praxis hat es
sich bei PHP bewährt, das Konstrukt &lt;code&gt;md5(uniqid(&amp;quot;geheim&amp;quot;))&lt;/code&gt; zu
verwenden. Die Funktion &lt;code&gt;uniqid(&amp;quot;somestring&amp;quot;)&lt;/code&gt; liefert einen auf
der aktuellen Uhrzeit basierenden String, der mit dem Prefix
&amp;ldquo;somestring&amp;rdquo; anfängt. Durch die Anwendung der Hashfunktion &lt;code&gt;md5()&lt;/code&gt;
wird daraus eine 128 Bit lange (32 Hexziffern lange) Zahl, aus
der nicht auf den Ausgangsstring geschlossen werden kann. Wenn
die ungefähre Uhrzeit des Servers bekannt ist, zu dem eine
bestimmte Session gestartet ist, kann man jedoch versuchen, die
Session-ID zu erraten. Daher ist es wichtig, daß jede Anwendung
einen anderen, geheimgehaltenen Prefix-String &amp;ldquo;geheim&amp;rdquo; als Salt
für ihre Session-IDs verwendet.&lt;/p&gt;
&lt;p&gt;Um die Sessiondaten an einen Browser zu binden, muss bei jedem
Request die Session-ID vom Browser mitgeschickt werden. Am
einfachsten erreicht man dies mit Hilfes eines Session-Cookies,
der im Browser gesetzt wird. Dies hat außerdem den Vorteil, daß
die ID nicht Bestandteil der URL wird und daher auch nicht mit
gebookmarked werden kann oder gar als Bestandteil einer URL mit
abgedruckt wird.&lt;/p&gt;
&lt;p&gt;Nimmt der Browser des Anwenders jedoch keine
Cookies an, muss man sich auf eine andere Methode der Übergabe
der ID zurückziehen, bei der die Session-ID mit in die URL
eingebaut wird. Denkbar sind hier prinzipiell zwei Verfahren:
Die ID kann entweder als GET-Parameter an die URL angehängt
(&lt;code&gt;http://www.kunde.de/index.php3?Example_Session=0d0a...&lt;/code&gt;)
werden oder sie kann als Pfadkomponente mit in die URL eingebaut
werden (&lt;code&gt;http://www.kunde.de/Example_Session=0d0a../index.php3&lt;/code&gt;).
Erstere Methode hat den Vorteil, direkt einsetzbar zu sein,
letztere macht es notwendig, Name der Session und ID mit Hilfe
von mod_rewrite aus der URL herauszuholen, um den Zugriff auf
die Daten zu erlauben.&lt;/p&gt;
&lt;p&gt;Die Daten, die zu der Session gehören, müssen auf der
Servermaschine auf irgendeine Weise gespeichert werden. PHP4
verwendet zu diesem Zweck ein Verzeichnis mit einer Datei pro
Session, PHPLIB verwendet stattdessen traditionell eine
Datenbank, kann aber seit Version 7 auch mit anderen Speichermethoden
arbeiten, etwa mit einfachen Dateien, mit DBM-Datenbanken, mit
einem LDAP-Server, oder mit Shared Memory. In jedem Fall sollten
diese Speicher unter derselben administrativen Kontrolle stehen
wie der Webserver, damit keine Trust Boundary überschritten
wird.&lt;/p&gt;
&lt;h3 id=&#34;datenquellen-von-außerhalb&#34;&gt;
    &lt;a href=&#34;#datenquellen-von-au%c3%9ferhalb&#34;&gt;
	Datenquellen von außerhalb
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Nun kann eine Anwendung nur noch entweder die vorgegebene
Session-ID verwenden oder die Session-ID verwerfen. Im ersten
Fall funktioniert die Anwendung wie beabsichtigt, im zweiten
Fall wird einfach eine neue Session gestartet und initialisiert.
Beides sind definierte Zustände, die die Sicherheit des Systems
nicht gefährden können und bei denen keinesfalls Daten aus einer
Session in eine andere Session hinüberdiffundieren können.&lt;/p&gt;
&lt;p&gt;Einige Systeme zur Verwaltung von Sessions und Session-IDs
merken sich zu jeder Session auch die IP-Nummer, aus der die
Session kommt. Auf diese Weise soll verhindert werden, daß ein
Angreifer eine Session-ID ausschnüffelt und mit dieser ID dann
die Session übernimmt. In der Praxis ist dies jedoch keine gute
Idee, weil sich die IP-Nummer, mit der eine Session an einem
Browser erscheint, ändern kann. Dies ist zum Beispiel dann der
Fall, wenn der Abrufer auf den Server über ein Netz von
Proxyservern zugreift: Hier kann die vom Webserver gesehene
IP-Nummer mit jedem Zugriff wechseln, je nach der Lastverteilung
auf den Proxyservern. In dieser Situation befinden sich viele
Benutzer im WiN, bei AOL und bei T-Online. Ebenfalls wechseln
kann die IP-Nummer bei Benutzern, die per Dialup-PPP eine
IP-Nummer dynamisch zugewiesen bekommen und bei denen sich die
PPP-Verbindung kurzzeitig abgebaut hat.&lt;/p&gt;
&lt;p&gt;Sobald sichergestellt ist, daß Daten nicht zwischen Sessions
überspringen können, kann man daran gehen, die Wege zu sichern,
auf denen Daten in eine Session übernommen werden können. In PHP
gibt es prinzipiell die folgenden Wege, auf denen eine Anwendung
Daten von jenseits der Trust Boundary übernehmen kann:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;als GET-Parameter&lt;/li&gt;
&lt;li&gt;als POST-Parameter&lt;/li&gt;
&lt;li&gt;als Cookie-Data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GET- und POST-Parameter müssen bzw. können der Anwendung in
codierter Form übergeben werden. Wenn die Daten von der
Anwendung nicht ausschließlich in einer Standardform (nämlich
decodiert) verarbeitet werden, kann es dazu kommen, daß es
mehrere äquivalente Darstellungen derselben Werte gibt. Zum
Beispiel sind &amp;ldquo;hello+world&amp;rdquo;, &amp;ldquo;hello%20world&amp;rdquo; und &amp;ldquo;hello world&amp;rdquo;
drei äquivalente Darstellungen desselben Strings. Arbeitet man
mit Stringoperationen auf solchen Daten, kann es zu Anomalien
kommen, bei denen ein Suchmuster oder Substring in einem Fall
auf die Daten paßt, in einem anderen Fall jedoch nicht. Es ist
also wichtig, die Daten ggf. erst vollständig zu decodieren und
dann erst Suchmuster und Stringerkennungen auf sie anzuwenden.&lt;/p&gt;
&lt;p&gt;GET-Parameter sind Bestandteil der URL und unterliegen daher denselben
Beschränkungen wie URLs. Sie können keine Leerzeichen sowie gewisse
Sonderzeichen nicht enthalten, und ihre Länge ist begrenzt - daher überhaupt
die Notwendigkeit einer URL-Codierung und alternativer Darstellungen.&lt;/p&gt;
&lt;p&gt;POST-Parameter werden wie unten gezeigt anders übermittelt, als Bestandteil
des Body eines Requests, doch auch sie kommen codiert über die Leitung.
Cookies werden als Cookie-Headerzeilen übermittelt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kris@valiant:/usr/doc/packages/netcat &amp;gt; netcat -l -p &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt; -v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;listening on &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;any&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;connect to &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;193.102.57.3&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; from valiant.koehntopp.de &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;193.102.57.3&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1433&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;POST / HTTP/1.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Referer: http://valiant:8080/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Connection: Keep-Alive
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-Agent: Mozilla/4.61 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;en&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;X11&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; U&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; Linux 2.2.10 i586&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: valiant:8080
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;image/png, */*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Encoding: gzip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Language: German, de, en
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Charset: iso-8859-1,*,utf-8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-type: application/x-www-form-urlencoded
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-length: &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;probe&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;lala&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;amp&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;doit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;los
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;PHP importiert alle diese Eingaben defaultmäßig als globale
Variablen in das Programm. Benötigte Decodierungen werden dabei
automatisch vorgenommen, ggf. werden die Eingabewerte auch
automatisch wieder für den Transfer in eine SQL-Datenbank
codiert, falls &lt;code&gt;magic_quotes_gpc&lt;/code&gt; konfiguriert ist (dies ist
gelegentlich praktisch, aber meist unerwünscht). Zusätzlich
werden alle Eingabedaten je nach Herkunft noch in die drei
Hashes &lt;code&gt;HTTP_GET_VARS[]&lt;/code&gt;, &lt;code&gt;HTTP_POST_VARS[]&lt;/code&gt; und &lt;code&gt;HTTP_COOKIE_VARS[]&lt;/code&gt;
einsortiert.&lt;/p&gt;
&lt;p&gt;Prinzipiell ist es möglich, daß ein GET-Parameter, ein
POST-Parameter und ein Cookie dieselben Namen verwenden. Hier
steht derjenige Wert in einer globalen Variablen zur Verfügung,
der als letzter importiert wird. Die Reihenfolge des Imports
kann man mit der Konfigurationsvariablen &lt;code&gt;gpc_order&lt;/code&gt; bestimmen
(Default ist &amp;ldquo;gpc&amp;rdquo;). In PHP4 und in PHPLIB überschreiben
Sessionvariablen aus vertrauenswürdigen Quellen Werte, die per
gpc aus einer nicht vertrauenswürdigen Quelle geholt wurden.
Dadurch werden eine ganze Menge potentielle Sicherheitsprobleme
vermieden.&lt;/p&gt;
&lt;h3 id=&#34;dateien-und-upload&#34;&gt;
    &lt;a href=&#34;#dateien-und-upload&#34;&gt;
	Dateien und Upload
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Indem man ein Formular erzeugt, das mit der Methode &amp;ldquo;POST&amp;rdquo;
submitted wird und das einen besonderen Encoding-Type hat, kann
man auch Webformulare bauen, die den Upload von Dateien
ermöglichen. Ein solches Formular sieht minimal so aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kk@land:~ &amp;gt; netcat -l -p &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt; -v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;listening on &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;any&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;connect to &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;192.168.254.57&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; from lenz.intern.netuse.de &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;192.168.254.43&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2190&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GET / HTTP/1.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-Agent: Mozilla/4.6 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;en&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Linux&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; Alpha&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: land:8080
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Encoding: gzip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Language: de-DE,de,en
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Charset: iso-8859-1,*,utf-8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;h1&amp;gt;Hallo&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;form &lt;span class=&#34;nv&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://land:8080/&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;post &lt;span class=&#34;nv&#34;&gt;enctype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;multipart/form-data&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;input &lt;span class=&#34;nv&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;probe&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;input &lt;span class=&#34;nv&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;los&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; punt!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In diesem Formular eingetragene Daten werden in Form eines
MIME-Multipart-Dokumentes an den Server zurückübermittelt. Der
Aufbau der Daten ist vergleichsweise kompliziert, aber zum Glück
kümmert sich PHP um die Decodierung aller Daten:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kk@land:~ &amp;gt; netcat -l -p &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt; -v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;listening on &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;any&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;connect to &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;192.168.254.57&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; from lenz.intern.netuse.de &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;192.168.254.43&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2193&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;POST / HTTP/1.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Referer: http://land:8080/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-Agent: Mozilla/4.6 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;en&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Linux&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; Alpha&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: land:8080
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Encoding: gzip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Language: de-DE,de,en
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Charset: iso-8859-1,*,utf-8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-type: multipart/form-data&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;boundary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;---------------------------247491297412345
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Length: &lt;span class=&#34;m&#34;&gt;225&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-----------------------------247491297412345
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Disposition: form-data&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;probe&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;K:\Kunden\Netcologne\probe.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Type: text/plain
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Dateiinhalt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-----------------------------247491297412345--
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;h1&amp;gt;Danke.&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; punt!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;PHP verarbeitet diese Eingaben wie alle anderen Eingabedaten
automatisch. Es legt die Datei in einem temporären Verzeichnis
ab und stellen den Namen und die Größe der Datei in einigen
Variablen zur Verfügung, deren Namen von dem Namen des &lt;code&gt;&amp;lt;input type=&amp;quot;file&amp;quot;&amp;gt;&lt;/code&gt;-Tags abgeleitet werden: Für den Tagnamen &lt;code&gt;probe&lt;/code&gt;
werden diese Variablen erzeugt:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;$probe&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Name der Datei im temporären Verzeichnis auf dem Server.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;$probe_name&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Name der Datei auf dem System des Anwenders.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;$probe_size&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Größe der Datei in Bytes.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;$probe_type&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Typ der Datei als MIME-Type.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Mithilfe der beiden PHP3-Konfigurationseinstellungen
&lt;code&gt;upload_tmp_dir&lt;/code&gt; und &lt;code&gt;upload_max_filesize&lt;/code&gt; kann man serverseitig
kontrollieren, wie groß die hoch geschickten Dateien maximal
werden können und in welchem Verzeichnis sie abgelegt werden.
Wenn man die Datei nach dem Ende der Seite behalten möchte, muss
man sie kopieren oder umbenennen: PHP löscht die Upload-Datei am
Ende der Seite. Ein Einstellen der Größenbegrenzung begrenzt
jedoch nicht wirklich den Plattenplatz, der auf dem Server von
PHP durch Fileupload verbraucht wird: Aus technischen Gründen
muss PHP die Datei zunächst empfangen und kann sie erst dann
verwerfen, wenn sie zu groß ist. Seit PHP 3.0.10 kann mehr als
eine Datei pro Formular hochgeladen werden.&lt;/p&gt;
&lt;h3 id=&#34;eingabedaten-dekontaminieren&#34;&gt;
    &lt;a href=&#34;#eingabedaten-dekontaminieren&#34;&gt;
	Eingabedaten dekontaminieren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Eingabedaten, die aus einem Bereich mit niedrigem Vertrauen in
einen Bereich mit höheren Vertrauen überwechseln, müssen auf
Unbedenklichkeit geprüft werden. Es ist sonst möglich, die
Eingabedaten zu verwenden, um auf der Webservermaschine Schaden
anzurichten, der letztendlich bis zur Übernahme der Maschine
(und weiterer Maschinen im selben Netz) durch Angreifer reichen
kann.&lt;/p&gt;
&lt;p&gt;Ein typisches Beispiel für Vertrauen in Daten aus einem nicht
vertrauenswürdigen Bereich ist das folgende Script: Gegeben sei
eine Funktion, die einen Datensatz des gerade angemeldeten
Benutzers in einer Tabelle anzeigt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;select * from sometable where key = &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$PHP_AUTH_USER&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;next_record&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;form action=&amp;#34;doit.php3&amp;#34;&amp;gt;&amp;lt;table&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;input type=&amp;#34;hidden&amp;#34; name=&amp;#34;f_key&amp;#34; value=&amp;#34;&amp;lt;? $db-&amp;gt;p(&amp;#34;key&amp;#34;) ?&amp;gt;&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;f_name&amp;#34; value=&amp;#34;&amp;lt;? $db-&amp;gt;p(&amp;#34;name&amp;#34;) ?&amp;gt;&amp;#34;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;f_vorname&amp;#34; value=&amp;#34;&amp;lt;? $db-&amp;gt;p(&amp;#34;vorname&amp;#34;) ?&amp;gt;&amp;#34;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;f_credits&amp;#34; value=&amp;#34;&amp;lt;? $db-&amp;gt;p(&amp;#34;credits&amp;#34;) ?&amp;gt;&amp;#34;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;tr&amp;gt;&amp;lt;td align=&amp;#34;right&amp;#34;&amp;gt;&amp;lt;input type=&amp;#34;submit&amp;#34; name=&amp;#34;doit&amp;#34; value=&amp;#34;Absenden&amp;#34;&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;/table&amp;gt;&amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In diesem Script wird eine Tabelle mit drei bearbeitbaren
Eingabefeldern &lt;code&gt;f_vorname&lt;/code&gt;, &lt;code&gt;f_name&lt;/code&gt; und &lt;code&gt;f_credits&lt;/code&gt; generiert. Die
Selektionsbedingung im SQL sorgt dafür, daß nur der Datensatz
des angemeldeten Benutzers angezeigt wird. Es wird jedoch auch
ein Eingabefeld erzeugt, das den Namen des aktuellen Benutzers
enthält. Übernimmt das Zielscript &lt;code&gt;doit.php3&lt;/code&gt; diese Daten
ungeprüft, kann der bearbeitende Anwender einfach eine URL wie&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;http://www.server.de/doit.php3?f_key=someuser&amp;amp;amp;f_name=some+name&amp;amp;amp;f_vorname=some+other+name&amp;amp;amp;f_credits=10000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;abrufen und damit beliebige Datensätze bearbeiten. Das Script
&lt;code&gt;doit.php3&lt;/code&gt; darf sich nicht darauf verlassen, daß der Inhalt von
&lt;code&gt;f_key&lt;/code&gt;, der zurückgesendet wird, derselbe Inhalt ist, der
ursprünglich erzeugt wurde. Besser wäre es, den Wert von &lt;code&gt;f_key&lt;/code&gt;
auf der Serverseite zu halten (etwa als eine zu einer Session
gehörende Variable) und nur die Werte &lt;code&gt;f_vorname&lt;/code&gt; und &lt;code&gt;f_name&lt;/code&gt; zu
akzeptieren.&lt;/p&gt;
&lt;p&gt;Eingabedaten, die aus einem Bereich niedrigen Vertrauens
stammen, haben in einem Programm als giftig, als kontaminiert,
zu gelten. Auch alle anderen Variablen, in denen aus
kontaminierten Werten abgeleitete Werte abgelegt werden, sind
automatisch als kontaminiert anzusehen. Am günstigsten ist es,
alle nicht vertrauenswürdigen Daten durch eine
Dekontaminierungsfunktion, einen Validator, zu schleusen und
dann mit den sauberen Werten weiter zu arbeiten.&lt;/p&gt;
&lt;p&gt;Dies kann zum Beispiel mit Code wie dem folgenden geschehen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// $key kommt aus der Session und ist automatisch gesetzt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$vorname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;check_alnumspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$f_vorname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;check_alnumspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$f_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$credits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;check_numeric&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$f_credits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Funktionen &lt;code&gt;check_alnumspace()&lt;/code&gt; und &lt;code&gt;check_numeric()&lt;/code&gt; sind hier
im Beispiel dann einfache Funktionen, die die Eingabedaten auf
erlaubte Zeichen abprüfen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;check_alnumspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;eregi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[^a-zäöüß0-9 ]+&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;check_numeric&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ereg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[^0-9]&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$in&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Diese Beispielfunktionen liefern entweder den Eingabestring
zurück, wenn dieser nur erlaubte Zeichen enthält oder den Wert
false, falls der Eingabestring verdächtigt aussieht. Die
Anwendung muss nun damit rechnen, daß die Felder &lt;code&gt;$vorname&lt;/code&gt;, &lt;code&gt;$name&lt;/code&gt;
und &lt;code&gt;$credits&lt;/code&gt; leer (false) sein können, kann sich aber darauf
verlassen, daß die Strings das erwartete Aussehen haben, wenn
sie nicht leer sind.&lt;/p&gt;
&lt;p&gt;Einer der größten Fehler, den man machen kann, ist es, die
Eingabedaten nicht zu dekontaminieren und sie dann in eine
Datenbank, eine Datei oder eine andere vertrauenswürdige
Datenquelle zu schreiben. Nun werden nämlich alle
Folgeanwendungen die nicht vertrauenswürdigen und ungeprüften
Daten aus einer vertrauenswürdigen Datenquelle laden und ihnen
ohne weitere Prüfung vertrauen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHPLIB</title>
      <link>https://blog.koehntopp.info/1999/04/01/phplib-deutsch.html</link>
      <pubDate>Sat, 02 Mar 1996 09:00:00 +0000</pubDate><author>kris-blog@koehntopp.de (Kristian Köhntopp)</author>

      <guid>https://blog.koehntopp.info/1999/04/01/phplib-deutsch.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;Dieser Text bildet Kapitel 24 von &lt;em&gt;php, dynamische webautritte
professionell realisieren&lt;/em&gt;. Er ist mit dem 3. Reprint der 1. Auflage
dazugekommen. Für Besitzer älterer Versionen dieses Buches stelle ich den
Text hier zur Verfügung (April 1999)&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;phplib&#34;&gt;
    &lt;a href=&#34;#phplib&#34;&gt;
	PHPLIB
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;überblick-und-installation&#34;&gt;
    &lt;a href=&#34;#%c3%bcberblick-und-installation&#34;&gt;
	Überblick und Installation
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;was-leistet-phplib&#34;&gt;
    &lt;a href=&#34;#was-leistet-phplib&#34;&gt;
	Was leistet PHPLIB?
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;PHPLIB ist eine Sammlung von in PHP3 geschriebenen Klassen, mit
denen eine Reihe von Aufgaben gelöst werden können, die bei der
Entwicklung von webgestützten Anwendungen sehr häufig auftreten.&lt;/p&gt;
&lt;p&gt;Ursprünglich stand hinter der Entwicklung von PHPLIB der Wunsch,
Variablen in PHP zu schaffen, die eine längere Gültigkeitsdauer
als eine Webseite haben, die also automatisch von Seite zu Seite
weitergereicht werden.&lt;/p&gt;
&lt;p&gt;Die Klasse &lt;strong&gt;Session&lt;/strong&gt; der Bibliothek
realisiert dies, indem sie jeden Zugreifer auf eine Webanwendung
mit einer eindeutigen Kennung versieht und diese Kennung dann
auf unterschiedliche Weise von Seite zu Seite weitergibt. Bei
jedem Zugriff auf eine Seite wird ein Satz Variablen, der zu
dieser Kennung gehört, aus einem festen Datenspeicher geladen
und am Ende der Seite auch dort wieder gespeichert. Ein solcher
Satz Variablen heißt in der Terminologie von PHPLIB &amp;ldquo;Session&amp;rdquo;
und die von PHPLIB verwaltete Kennung heißt &amp;ldquo;Session-ID&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Der Datenspeicher, der von PHPLIB verwendet wird, war
ursprünglich eine SQL-Datenbank, aber seit Version 7 von PHPLIB
können auch andere Speicher, zum Beispiel DBM-Dateien,
LDAP-Server oder ein Shared Memory-Segment verwendet werden.&lt;/p&gt;
&lt;p&gt;Da
PHPLIB ursprünglich ausschließlich SQL-Datenbank als Speicher
verwendet hat, war es schon recht bald notwendig, die Bibliothek
an unterschiedliche Datenbanken anzupassen. Aus dieser
Notwendigkeit heraus wurde eine Klasse &lt;strong&gt;DB_SQL&lt;/strong&gt; zum Zugriff
auf solche Datenbanken entwickelt, die ein einheitliches,
datenbankunabhängiges Interface zum Zugriff auf diese
Datenbanken zur Verfügung stellt. Diese Klasse ist sogar so
flexibel, daß sie vollkommen unabhängig von PHPLIB verwendet
werden kann - selbst wenn man eine Anwendung ohne Sessions, aber
mit Datenbanken entwickelt, ist es also sinnvoll, diese Klasse
zum Zugriff auf die Datenbank zu verwenden: Einerseits gewinnt
man so mehr Flexibilität beim Zugriff auf die Datenbank,
andererseits ist auf diese Weise die Umrüstung der Anwendung auf
PHPLIB sehr viel einfacher.&lt;/p&gt;
&lt;p&gt;Mit der Entwicklung von PHPLIB kamen recht schnell weitere
Fertigkeiten dazu. Wenn man Sessionvariablen hat, ist es zum
Beispiel recht einfach, sich daran zu erinnern, ob ein Anwender
sich schon einmal eingeloggt hat und wann das war. Auf diese
Weise kann man Webseiten recht einfach mit Benutzerkennungen und
Paßworten schützen, ganz ähnlich wie mit .htaccess-Dateien und
HTTP-Authentisierung.&lt;/p&gt;
&lt;p&gt;Anders als bei HTTP-Authentisierung hat
man bei der von PHPLIB-Klasse &lt;strong&gt;Auth&lt;/strong&gt; verwendeten
Zugangskontrolle jedoch viel mehr Kontrolle über das Aussehen
des Anmeldebildschirmes: Es ist eine normale Webseite, die
Bedienungshinweise, ein Firmenlogo und Online-Hilfe enthalten
kann. Man hat außerdem auch viel mehr Kontrolle über die
Anmeldung selbst: Man kann Anwender gezielt oder zeitgesteuert
automatisch wieder ausloggen, man kann die Benutzereingaben
gegen beliebige SQL-, LDAP-, NIS- oder NT PDC-Datenbanken mit
Paßworten authentisieren und man ist nicht darauf angewiesen,
daß ein Benutzer durch einen Benutzernamen identifiziert wird,
sondern kann sich beliebige Schemata ausdenken (E-Mail Adressen,
Vorname/Nachname/Telefon oder was immer passend ist). Außerdem
hat man auch Einfluß auf die Übertragung der Anmeldedaten vom
Anwender zum Webserver und kann dort kryptographische Methoden
einsetzen, um eine Übertragung von Klartext-Paßworten zu
vermeiden. Zu einem Benutzer gehören auch Benutzerrechte und so
bekam PHPLIB zusätzlich eine Klasse &lt;strong&gt;Perm&lt;/strong&gt; zur Verwaltung
von Zugriffsrechten.&lt;/p&gt;
&lt;p&gt;Die letzte Erweiterung der Kernfunktionen von PHPLIB war dann
die Schaffung von Variablen, die nicht mehr an eine Session-ID
gebunden waren, sondern an eine Benutzerkennung. Die
PHPLIB-Klasse &lt;strong&gt;User&lt;/strong&gt; bedient sich ganz genauso wie eine
&lt;strong&gt;Session&lt;/strong&gt;, nur daß die nach einer Benutzeranmeldung Daten
verwalten kann, die zu dem Login des Benutzers gehören. Auf
diese Weise ist es sehr leicht, personalisierte Websites zu
erzeugen, die sich erinnern, welche Voreinstellungen ein
Benutzer das letzte Mal getroffen hatte und die diese
Einstellungen wiederverwenden.&lt;/p&gt;
&lt;p&gt;Während die Funktionen oben zur Kernfunktionalität von PHPLIB
gehören, die von fast jeder Anwendung mit PHPLIB benötigt wird,
ist der Funktionsreichtum der Bibliothek damit noch lange nicht
erschöpft. Eine Reihe von weiteren Klassen bietet Funktionen,
die optional dazugenommen werden kann, wenn die Anwendung Bedarf
daran hat und die dem Entwickler viele arbeits- und
codieraufwendunge Dinge abnehmen können. Die Klasse &lt;strong&gt;Cart&lt;/strong&gt;
zum Beispiel realisiert einen einfachen Warenkorb, der zusammen
mit einer Artikeltabelle in einer Datenbank leicht zu einem
einfachen Shopsystem erweitert werden kann.&lt;/p&gt;
&lt;p&gt;Andere Klassen generieren immer wieder benötigte Strukturen in
HTML: &lt;strong&gt;Table&lt;/strong&gt; kann in Zusammenhang mit Arrays oder
Datenbank-Resultaten fertige Tabellen generieren,
&lt;strong&gt;Sql_Query&lt;/strong&gt; erlaubt es, eine Eingabemaske zu erzeugen, in
denen sich ein Anwender eine Query gegen eine Datenbanktabelle
zusammenklicken kann und diese Maske dann auch auszuwerten und
schließlich dient die &lt;strong&gt;OOH Forms&lt;/strong&gt;-Klassensammlung zur
Generierung von Verwaltung von Abfrageformularen.&lt;/p&gt;
&lt;h3 id=&#34;wo-bekommt-man-phplib-und-was-kostet-sie&#34;&gt;
    &lt;a href=&#34;#wo-bekommt-man-phplib-und-was-kostet-sie&#34;&gt;
	Wo bekommt man PHPLIB (und was kostet sie)?
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die Website zu PHPLIB ist &lt;a href=&#34;http://phplib.netuse.de&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://phplib.netuse.de&lt;/a&gt;

.
An dieser Stelle findet sich nicht nur die jeweils aktuelle Version
von PHPLIB, sondern auch die jeweils aktuelle Dokumentation und
ein Verweis auf die Supportmailinglisten zu PHPLIB. Ebenso
findet man dort ein Archiv dieser Mailinglisten.&lt;/p&gt;
&lt;p&gt;Die Mailingliste &lt;code&gt;phplib@lists.netuse.de&lt;/code&gt;
ist das Forum, an das sich Anwender der Bibliothek wenden
können, die Probleme mit der Installation oder dem Betrieb von
PHPLIB haben. Man kann sich an dieser Liste anmelden, indem man
eine Nachricht mit dem Text &amp;ldquo;subscribe&amp;rdquo; an die Adresse
&lt;code&gt;phplib-request@lists.netuse.de&lt;/code&gt;
sendet. Die Abmeldung funktioniert analog, indem man eine
Nachricht mit dem Text &amp;ldquo;unsubscribe&amp;rdquo; an diese Adresse
&lt;code&gt;phplib-request@lists.netuse.de&lt;/code&gt;
sendet. Die Liste ist in englischer Sprache.&lt;/p&gt;
&lt;p&gt;Eine weitere Liste,&lt;code&gt;phplib-dev@lists.netuse.de&lt;/code&gt;,
ist für Entwickler der Bibliothek gedacht: Sie empfängt Reports
aus dem CVS-Archiv von phplib und auf ihr finden Diskussionen
unter den Entwicklern statt. Auch diese Liste ist
englischsprachig.&lt;/p&gt;
&lt;p&gt;Da die Bibliothek unter der &amp;ldquo;nicht infektiösen&amp;rdquo; LGPL frei
verfügbar ist, kann sie sowohl in GNU Projekten als auch in
kommerziellen Softwareprojekten gefahrlos und ohne daß
Lizenzgebühren anfallen eingesetzt werden. Der genaue Text der
Lizenzvereinbarung ist Bestandteil des Paketes und findet sich
in der Datei COPYING.&lt;/p&gt;
&lt;p&gt;Die ursprünglichen Entwickler von PHPLIB,
Boris Erdmann  und Kristian Köhntopp, haben inzwischen
von vielen anderen Netzteilnehmern Unterstützung bekommen.
Besondere Erwähnung verdienen Sascha Schumann , der
für die Veröffentlichung von PHPLIB-6 maßgeblich war und der
viele andere Erweiterungen und Fehlerkorrekturen vorgenommen hat
und Jay Bloodworth ,
von dem die OOH Forms-Klassen der Bibliothek stammen. Eine
vollständige Liste aller Helfer findet man in der Datei CREDITS
als Bestandteil des Paketes.&lt;/p&gt;
&lt;h3 id=&#34;phplib-installieren&#34;&gt;
    &lt;a href=&#34;#phplib-installieren&#34;&gt;
	PHPLIB installieren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Bevor man daran gehen kann, sich mit der eigentlichen
Installation von PHPLIB zu beschäftigen, solle man zunächst
einmal seine Installation von PHP3 überprüfen und einige Fakten
darüber in Erfahrung bringen. Für den Installationsprozeß ist es
notwendig zu unterscheiden, ob man ein CGI PHP3 oder ein
mod_php3 als Bestandteil eines Apache Webservers hat. Wie die
meisten Fragen zum Thema PHP3-Installation beantwortet sich
dies am einfachsten, indem man sich ein Script mit einem
phpinfo()-Aufruf erzeugt und sich die Ausgabe desselben ansieht:
Besteht die Ausgabe von phpinfo() aus vier Tabellen, handelt es
sich um einen CGI PHP3-Interpreter. Enthält sie dagegen mehr
Tabellen, von denen die letzten beiden &amp;ldquo;Apache Environment&amp;rdquo; und
&amp;ldquo;HTTP Headers Information&amp;rdquo; heißen, handelt es sich um ein
PHP3-Modul in einem Apache Webserver (mod_php3).&lt;/p&gt;
&lt;p&gt;Falls CGI PHP3 verwendet wird, sollte man den PHP3-Interpreter
gleich noch auf korrekte Übersetzung und Installation prüfen:
Angenommen der Name des Testscriptes mit dem phpinfo()-Aufruf
ist &lt;code&gt;http://localhost/test.php3&lt;/code&gt;. Falls der Inhalt der Variablen
&lt;code&gt;$PHP_SELF&lt;/code&gt; nur den Pfad zum PHP3-Script enthält (&lt;code&gt;/test.php3&lt;/code&gt;),
ist die Installation korrekt erfolgt. Taucht dagegen der
CGI-Pfad und der Name des Interpreters als Bestandteil der
Variablen auf (&lt;code&gt;/cgi-bin/php/test.php3&lt;/code&gt;), ist der Interpreter
ohne die Option &lt;code&gt;--force-cgi-redirect&lt;/code&gt; übersetzt worden.
Abgesehen davon, daß dies eine enorme Sicherehitslücke ist, wird
PHPLIB mit so einem Interpreter nicht korrekt funktionieren. Mit
einem dergestalt falsch installierten PHP3-Interpreter lassen
sich beliebige Dateien, auch außerhalb der Document-Root des
Webservers, lesen und herunterladen
(&lt;code&gt;/cgi-bin/php/../../../../../../etc/passwd&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Mit Hilfe der Ausgabe von phpinfo() läßt sich auch die Version
des PHP3-Interpreters prüfen. Für PHPLIB muß sie ausreichend neu
sein: mindestens 3.0.6 oder höher, besser wäre ein aktuelles
Release wie 3.0.11 oder höher. Es hat keinen Zweck versuchen zu
wollen, PHPLIB mit einer älteren Version von PHP3 zu
installieren: Ältere Versionen von PHP3 haben zu viele Fehler in
der Speicherverwaltung und in der Behandlung von
objektorientierten Erweiterungen als daß sie mit PHPLIB
zusammenarbeiten könnten.&lt;/p&gt;
&lt;p&gt;Für die korrekte Installation von PHPLIB ist es außerdem
notwendig, Zugriff auf die php3.ini-Datei zu haben, um einige
Konfigurationsparameter für den Interpreter setzen zu können. Im
Falle von mod_php3 genügt es, .htaccess-Dateien erzeugen zu
können, mit denen man PHP3-Parameter für Unterverzeichnisse
seines Webservers festlegen kann.&lt;/p&gt;
&lt;p&gt;PHPLIB kann entweder als mit gzip komprimiertes tar-Archiv
(tgz-Datei) oder als selbstentpackendes Shellscript (shar-Datei)
bezogen werden. Das bevorzugte Format ist das tgz-Format, weil
es wegen der Kompression deutlich kleiner ist und weil es sowohl
unter UNIX als auch unter Windows (mit WinZIP) problemlos
auszupacken ist.&lt;/p&gt;
&lt;p&gt;Nach dem Auspacken entsteht ein Verzeichnis php-lib mit den
Unterverzeichnissen doc, pages, php und stuff. Die eigentliche
Bibliothek befindet sich in den Dateien im Verzeichnis php. Dazu
gehören außerdem die Dateien im Verzeichnis pages, die eine
Reihe von Testseiten und Verwaltungsprogrammen enthalten. Diese
Daten sind nur zum Test des Installationsprozesses notwendig und
können später im Produktionsbetrieb entfernt werden. Das
Verzeichnis stuff enthält eine Reihe von Scripten für die
unterschiedlichsten SQL-Datenbanken und dient zur Einrichtung
der benötigten Tabellen. Schließlich existiert noch das
doc-Verzeichnis, in dem sich die Dokumentation zur Bibliothek in
englischer Sprache befindet.&lt;/p&gt;
&lt;p&gt;Die Dateien im Verzeichnis php werden von PHP3 zur Laufzeit
mittels include()- oder require()-Anweisungen eingebunden. Man
sollte sie daher in ein Verzeichnis &lt;em&gt;neben&lt;/em&gt; der
Document-Root seines Webservers kopieren und den include_path
seines PHP3-Interpreters darauf zeigen lassen. Auf keinen Fall
sollten sich diese Dateien in irgendeinem Verzeichnis
&lt;em&gt;unterhalb&lt;/em&gt; des Document-Root Verzeichnisses des Webservers
befinden, andernfalls kann es zu schweren Sicherheitsproblemen
kommen.&lt;/p&gt;
&lt;p&gt;Setzt man die CGI-Version von PHP ein oder möchte man für ein mod_php den
include_path global vorgeben, ist eine Änderung in der php3.ini zu machen.
In welchem Verzeichnis diese Datei gesucht wird, geben neuere Versionen in
der Ausgabe von phpinfo() als Überschrift der Tabelle
&amp;ldquo;Configuration&amp;rdquo; mit an. In der php3.ini ist der Parameter
include_path so zu setzen, daß er das Verzeichnis mit den
*.inc-Dateien von PHPLIB enthält. Setzt man dagegen mod_php ein
und möchte die Änderung der Konfigurationsparameter nur für ein
Unterverzeichnis vornehmen, muß man in einem &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt;-Block
in der httpd.conf oder in einer .htaccess-Datei einen Eintrag
der Form &amp;ldquo;php3_include_path
/pfad/zum/verzeichnis&amp;rdquo; vornehmen, damit das betreffende
Verzeichnis mit durchsucht wird.&lt;/p&gt;
&lt;p&gt;Auf jeder Seite, die PHPLIB verwendet, müssen nun die Dateien
mit den Definitionen der Klassen von PHPLIB eingebunden werden.
Zu diesem Zweck existiert eine vordefinierte Datei, die sich nun
in dem neuen Include-Verzeichnis befinden muß: prepend.php3.
Entweder kann diese Datei manuell auf jeder einzelnen
PHPLIB-Seite eingebunden werden oder sie kann automatisch vor
jede dieser Seiten gesetzt werden. Letzteres erreicht man, indem
man den Parameter &amp;ldquo;auto_prepend_file = &amp;hellip;&amp;rdquo; in der php3.ini
entsprechend setzt, oder, falls man mod_php einsetzt, in einem
&lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt;-Block oder einer .htaccess-Datei einen Eintrag
der Form &amp;ldquo;php3_auto_prepend_file /pfad/zu/datei/prepend.php3&amp;rdquo;
vornimmt.&lt;/p&gt;
&lt;p&gt;In der Datei prepend.php3 wird dann eingetragen, welche Dateien
PHPLIB zu jeder Seite dazuladen soll. Verwendet man MySQL, ist
keine Änderung notwendig. Wird stattdessen eine der anderen von
PHPLIB unterstützten Datenbanken (mSQL, ODBC, Oracle 7,
Oracle OCI 8 Interface, Postgres oder Sybase) verwendet, ist die
Anweisung &amp;lsquo;require(&amp;ldquo;db_mysql.inc&amp;rdquo;)&amp;rsquo; in dieser Datei entsprechend
anzupassen. Verwendet man PHPLIB ohne SQL-Datenbank, sondern mit
dem LDAP-, DBM- oder Shared Memory-Interface, ist diese
require-Anweisung auszukommentieren und stattdessen die
Anweisung &amp;lsquo;require(&amp;ldquo;ct_sql.inc&amp;rdquo;)&amp;rsquo; in der Zeile darunter
entsprechend anzupassen. In dieser Anleitung gehen wir davon
aus, daß eine Standardinstallation mit MySQL verwendet werden
soll. Dann sind in der prepend.php3 keine Änderungen notwendig.&lt;/p&gt;
&lt;p&gt;Im nächsten Schritt sind in der Datenbank die benötigten
Tabellen anzulegen. In MySQL muß der Datenbank-Administrator
dazu zunächst einmal eine logische Datenbank mit dem Kommando
&amp;lsquo;CREATE DATABASE&amp;rsquo; anlegen, etwa &amp;lsquo;CREATE DATABASE beispieldb&amp;rsquo;.
Danach muß dem Benutzer, unter dem PHP3 später ausgeführt wird,
auf die übliche Weise Zugriffsrecht auf diese Datenbank gegeben
werden. Es ist dringend empfohlen, keine gesonderte logische
Datenbank für PHPLIB anzulegen, sondern die Tabellen von PHPLIB
innerhalb des normalen Datenbankschemas der Anwendung zu
erzeugen. Man kann dies für die Datenbank &amp;lsquo;beispieldb&amp;rsquo; tun,
indem man einfach den SQL-Batch &amp;lsquo;stuff/create_database.mysql&amp;rsquo;
aus der PHPLIB-Distribution ausführt:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mysql&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;beispieldb&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;stuff&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;create_database&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;mysql&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ein einfaches &amp;lsquo;SHOW TABLES&amp;rsquo; in dieser Datenbank sollte einem
dann die Tabellen active_sessions und active_sessions_split,
auth_user und auth_user_md5 sowie db_sequence zeigen.&lt;/p&gt;
&lt;p&gt;Schließlich muß man PHPLIB noch auf seine eigenen Bedürfnisse
anpassen, d.h. der Bibliothek mitteilen, wo sie die Datenbank
findet und mit welchen Parametern sie arbeiten soll. Alle diese
Änderungen werden in der Datei local.inc vorgenommen. Diese
Datei enthält eine Reihe von Klassendefinitionen, die die
normalen, unspezifischen Klassendefinitionen um die für die
Anwendung benötigten Parameter ergänzen. In der zum Paket
gehörenden Version enthält diese Datei eine Reihe von
Beispieldefinitionen, was sie ein wenig unübersichtlich macht.
Zum Üben ist es ausreichend, wenige Zeilen in der Definition von
DB_Example anzupassen, aber für eine Installation, die für die
Produktion gedacht ist, wird man die Datei nur als Vorlage
nehmen und mit einer leeren local.inc anfangen, die man sich für
seine Zwecke maßschneidert.&lt;/p&gt;
&lt;p&gt;An keiner anderen Datei von PHPLIB sollten normalerweise
Änderungen notwendig sein.&lt;/p&gt;
&lt;p&gt;Zum Testen kann nun die Dateien aus dem pages-Verzeichnis in die
Document-Root seines Webservers kopieren und einmal versuchen,
die Testseiten aufzurufen. Bei Installationsproblemen hilft die
wirklich ausführliche Anleitung, die mit PHPLIB mitgeliefert
wird und die Supportmailingliste zur Bibliothek.&lt;/p&gt;
&lt;h2 id=&#34;zugriff-auf-datenbanken-mit-phplib&#34;&gt;
    &lt;a href=&#34;#zugriff-auf-datenbanken-mit-phplib&#34;&gt;
	Zugriff auf Datenbanken mit PHPLIB
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;erstellen-einer-eigenen-datenbank-klasse&#34;&gt;
    &lt;a href=&#34;#erstellen-einer-eigenen-datenbank-klasse&#34;&gt;
	Erstellen einer eigenen Datenbank-Klasse
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;PHPLIB enthält eine Klasse DB_Sql, die den Zugriff auf
Datenbanken in einer Weise erlaubt, die weitgehend unabhängig
von der verwendeten Datenbankart ist. Die Klasse existiert in
verschiedenen Versionen, je nach der unterliegenden
SQL-Datenbank, die verwendet werden soll: db_mysql.inc
definiert eine Version von DB_Sql für MySQL-Datenbanken,
db_odbc.inc eine Version für ODBC-Datenbanken und so weiter.
Durch Einbinden der entsprechenden Version in der Datei
prepend.php3 kann man entscheiden, mit welcher Datenbank man
arbeiten möchte.&lt;/p&gt;
&lt;p&gt;Die Klasse DB_Sql ist dabei sehr allgemein gehalten: Sie enthält
keinerlei Connect-Informationen und eine Reihe von Defaults, die
das Verhalten im Fehlerfall bestimmen. Gewöhnlich konfiguriert
man die Klasse, indem man in der Datei local.inc eine
Unterklasse von DB_Sql definiert, in der man seine eigenen
Connect-Parameter einträgt. Ändern sich die Connect-Parameter
der Anwendung, braucht man sie nur an einer Stelle in local.inc
zu ändern. Eine solche Definition kann zum Beispiel so aussehen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DB_Example&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Sql&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Host&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Database&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$User&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kk&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dies definiert eine Klasse DB_Example, die sich ganz genau wie
DB_Sql verhält, aber gegen die Datenbank test auf dem Rechner
localhost connected, indem sie sich als Benutzer kk mit einem
leeren Paßwort anmeldet. In seiner Anwendung kann man nun
Datenbankobjekte der Klasse DB_Example erzeugen und diese
Objekte wissen automatisch wo und wie sie sich anzumelden haben.&lt;/p&gt;
&lt;h3 id=&#34;abfragen-an-eine-datenbank-senden&#34;&gt;
    &lt;a href=&#34;#abfragen-an-eine-datenbank-senden&#34;&gt;
	Abfragen an eine Datenbank senden
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;DB_Sql merkt sich intern, ob bereits eine Datenbankverbindung
besteht oder ob noch eine erzeugt werden muß. Die Klasse kümmert
sich vor der Verarbeitung einer neuen Query auch darum, das alte
Anfrageergebnis freizugeben, wenn eines existiert. Für den
Entwickler bedeutet dies, daß er sich um diese Details nicht
mehr kümmern braucht, sondern nach dem Erzeugen seines
Datenbankobjektes direkt die Query absenden kann. Eine typische
Anwendung der Klasse sieht zum Beispiel so aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Erzeuge ein Objekt $db
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;select * from beispieltabelle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Das Datenbankobjekt kümmert sich hier selbstständig um den
Aufbau der Verbindung zur Datenbank und um die Schritte, die je
nach Datenbank unterschiedlich zur Verarbeitung und zum Senden
der Query notwendig sind. Das Ergebnis der Query steht nun
bereit und kann entweder manuell abgeholt werden (siehe unten)
oder einer anderen Klasse übergeben werden, die etwas damit
anfangen kann - der PHPLIB-Klasse Table zum Beispiel.&lt;/p&gt;
&lt;p&gt;Verarbeitet man das Ergebnis der Query manuell, stehen einem
Datei die Funktionen next_record() zum Abholen des nächsten
Ergebnisses und die Funktionen f(spaltenname) (&amp;ldquo;feld&amp;rdquo;) und
p(spaltenname) (&amp;ldquo;print&amp;rdquo;) zum Lesen bzw. Drucken einer Spalte der
aktuellen Ergebniszeile zur Verfügung. next_record() nimmt dabei
keine Parameter und liefert ein boolean-Ergebnis, mit dem
signalisiert wird, ob noch ein Datensatz gelesen werden konnte.
f() und p() nehmen jeweils den Namen einer Spalte als Parameter
an und bearbeiten diese Spalte in der aktuellen Ergebniszeile.
f() liefert den aktuellen Spalteninhalt als Rückgabewert, p()
druckt diesen Wert und liefert kein Ergebnis. Die typische
PHPLIB-Redewendung zum Abfragen und Verarbeiten von Daten in einer
SQL-Datenbank lautet also beispielweise so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Erzeuge ein Datenbankobjekt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;select * from beispieltabelle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Sende Query an DB
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Hier können f() und p() noch nicht verwendet werden.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;table&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;next_record&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$wert&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Merke Dir den aktuellen Wert der Spalte &amp;#34;s&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;s = %s&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$wert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;/table&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dabei ist es sehr wichtig, die Funktionen f() und p() erst dann
zu verwenden, wenn nach dem Absenden der Query mindestens einmal
next_record() aufgerufen worden ist. Erst nach dem ersten Aufruf
von next_record() stehen im internen Puffer des
Datenbankobjektes Informationen zur Verfügung, die verarbeitet
werden können.&lt;/p&gt;
&lt;p&gt;Wenn die Query eine Abfrage war, also das SQL-Statement &amp;lsquo;SELECT&amp;rsquo;
enthielt, kann man mit den Funktionen num_fields() und
num_rows() die Anzahl der Spalten und Zeilen des Ergebnisses
erfragen, falls die Datenbank dies unterstützt. Bei MySQL ist
dies der Fall, aber andere Datenbanken liefern das Ergebnis
einer Query asynchron, sodaß man die Größe der Resultatmenge
nicht auf diese Weise abfragen kann: In Oracle ist es
beispielweise möglich, daß die Datenbank schon die ersten mit
next_record() abfragbaren Ergebnisse zur Verfügung stellt,
während der hintere Teil der Query noch bearbeitet wird. Die
Funktion num_rows() liefert hier immer das Ergebnis 0. In so
einem Fall muß man die Größe der Resultatmenge vorab mit einem
&amp;lsquo;SELECT count(*) FROM &amp;hellip;&amp;rsquo; manuell bestimmen, bevor man die
eigentlich Query danach absendet. Das erzeugt zum Glück nicht
übermäßig Last auf dem Datenbank-Server, weil dieser die Anfrage
und deren Ergebnis zwischenspeichert, sodaß die zweite Query im
Vergleich zur ersten sehr schnell bearbeitet werden kann.&lt;/p&gt;
&lt;p&gt;Sendet man statt einer Abfrage stattdessen Anweisungen, die
Daten modifizieren, also z.B. die SQL-Anweisungen &amp;lsquo;INSERT&amp;rsquo;,
&amp;lsquo;DELETE&amp;rsquo; oder &amp;lsquo;UPDATE&amp;rsquo;, erhält man keine Ergebnismenge, die man
abfragen könnte. Stattdessen kann mit der Funktion
affected_rows() bestimmen, wieviele Zeilen durch diese Anweisung
bearbeitet worden sind. Die Redewendung, die man an dieser
Stelle immer wieder findet, lautet dann so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// $db aus dem Beispiel oben wird weiter verwendet
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;insert into beispieltabelle ( s ) values (&amp;#39;probe&amp;#39;)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$erfolg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;affected_rows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Variable $erfolg wird nun den Wert 1 haben, wenn der Wert
erfolgreich in die Tabelle eingefügt werden konnte, oder 0, wenn
das INSERT-Statement fehlgeschlagen ist.&lt;/p&gt;
&lt;h3 id=&#34;fehlerbehandlung&#34;&gt;
    &lt;a href=&#34;#fehlerbehandlung&#34;&gt;
	Fehlerbehandlung
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;DB_Sql kümmert sich, wenn dies gewünscht ist, auch automatisch
um die Behandlung von Fehlern, die durch falsches oder
fehlerhaftes SQL entstehen. Die Default-Aktion ist es, im
Fehlerfall eine Meldungsfunktion halt() aufzurufen und die
Verarbeitung dann anzuhalten. Dem Entwickler steht es dabei
frei, die Meldungsfunktion nach seinen Wünschen anzupassen.&lt;/p&gt;
&lt;p&gt;Standardmäßig belegt die Funktion halt() die Variablen Error und
Errno mit den aktuellen Fehlercodes des Datenbankinterfaces und
ruft dann die Funktion haltmsg() auf, um eine erklärende Meldung
zu drucken und die weitere Verarbeitung dann anzuhalten.&lt;/p&gt;
&lt;p&gt;Dieses Verhalten ist jedoch durch die Belegung der Variablen&lt;code&gt;Halt_On_Error&lt;/code&gt; bestimmt:
Defaultmäßig steht diese Variable auf dem Wert &amp;ldquo;yes&amp;rdquo;.
Setzt man sie auf &amp;ldquo;report&amp;rdquo;,
wird die Meldung gedruckt, die weitere Verarbeitung jedoch nicht
angehalten. Setzt man sie auf &amp;ldquo;no&amp;rdquo;, wird weder eine Meldung
gedruckt, noch wird das Programm abgebrochen. Es ist dann
Aufgabe der Anwendung, den Fehlerstatus durch die Abfrage von
Error und Errno zu kontrollieren.&lt;/p&gt;
&lt;p&gt;Alternativ kann ein Entwickler auch die Funktion haltmsg()
überschreiben, um die Ausgabe von Fehlermeldungen seinen
Wünschen anzupassen. Einige Beispiele:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Diese Klasse ignoriert Datenbankfehler.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DB_Example2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Sql&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Host&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Database&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$User&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kk&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Halt_On_Error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;no&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// keine Fehlermeldungen drucken
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Diese Klasse meldet Datenbankfehler in einem Logfile
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// und setzt die Verarbeitung dann fort.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Im HTML-Code erscheint nichts.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DB_Example3&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Sql&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Host&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Database&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$User&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kk&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Halt_On_Error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;report&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// haltmsg() aufrufen, aber weitermachen
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// unsere eigene Version von haltmsg)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;haltmsg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$fp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/tmp/errorlog&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a+&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;%s: error %s (%s) - %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Y-M-D H:i:s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Errno&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$fp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fclose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$fp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;metadata&#34;&gt;
    &lt;a href=&#34;#metadata&#34;&gt;
	Metadata
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Gelegentlich ist es nützlich, einige Fragen über die vorhandenen
Datenbanktabellen stellen zu können. DB_Sql stellt dafür die
Funktionen table_names() und metadata() zur Verfügung. Beide
Funktionen geben jeweils zweidimensionale Felder als Ergebnis
zurück, die entweder manuell verarbeitet werden können oder als
Eingabe für die PHPLIB-Klasse Table verwendet werden können.&lt;/p&gt;
&lt;p&gt;Die Funktion table_names() liefert eine Liste alle Tabellen
zurück, auf die man Zugriff hat. Zu jeder Tabelle werden die
Informationen table_name, tablespace_name und database
geliefert. Ein kleines Anwendungsbeispiel zeigt, wie man auf
diese Weise eine Liste aller vorhandenen Tabellen erzeugen kann.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$tinfo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;table_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;reset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$tinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;each&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$tinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Tabelle: %s  Tablespace: %s  Datenbank: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$tinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;table_name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$tinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;tablespace_name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$tinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;database&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Funktion metadata() wird dann verwendet, um den Aufbau einer
Tabelle weiter zu untersuchen. Sie liefert Information über die
Spalten einer Tabelle, ebenfalls als zweidimensionales Feld, das
als Eingabe für die Table-Klasse verwendet werden kann. Ein
Anwendungsbeispiel mit Table könnte so aussehen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;table.inc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Table einbinden.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Datenbankobjekt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$t&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// Table Objekt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;heading&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;on&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// Table soll Überschriften anzeigen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;beispieltabelle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Metadata abfragen
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;// ... und darstellen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ausgegeben werden zu jeder Spalte der Name der Tabelle
(&amp;ldquo;table&amp;rdquo;), der Name der Spalte (&amp;ldquo;name&amp;rdquo;), der
Typ des Datenfeldes (&amp;ldquo;type&amp;rdquo;), die Länge des Feldes
(&amp;ldquo;len&amp;rdquo;) und die Flags, die für dieses Feld gesetzt
sind (&amp;ldquo;flags&amp;rdquo;).&lt;/p&gt;
&lt;h3 id=&#34;sequenzen&#34;&gt;
    &lt;a href=&#34;#sequenzen&#34;&gt;
	Sequenzen
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;In Datenbankanwendungen benötigt man oft Zähler, die eindeutige
Schlüssel für Datenbanktabellen generieren. DB_Sql stellt
hierfür die Funktion nextid() zur Verfügung, die einen solchen
Wert liefert, der garantiert eindeutig und aufsteigend ist. Die
Funktion wird mit einem Zählernamen aufgerufen und liefert dann
den jeweils nächsten Wert für diesen Zähler. Die Anwendung ist
denkbar einfach.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Datenbankobjekt erzeugen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$id1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;nextid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;beispieltabelle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$id2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;nextid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;zweite_tabelle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$query1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;insert into beispieltabelle ( id, s ) values ( &amp;#39;%s&amp;#39;, &amp;#39;%s&amp;#39; )&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nv&#34;&gt;$id1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$some_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$query2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;insert into zweite_tabelle ( id, t, s_id )
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;                     values ( &amp;#39;%s&amp;#39;, &amp;#39;%s&amp;#39;, &amp;#39;%s&amp;#39; )&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nv&#34;&gt;$id2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$another_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$id1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$query1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$query2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In diesem Beispiel werden zwei Zähler mit den Namen
beispieltabelle und zweite_tabelle geführt. Beide Zähler sind
voneinander unabhängig. Das Beispiel generiert eine Einfügung in
die Tabelle beispieltabelle mit dem gleichnamigen Zählerwert. In
einer zweiten Einfügung in die Tabelle zweite_tablle wird ein
Eintrag gemacht, der unter seiner eigenen ID abgespeichert wird
und zugleich auf einen anderen Eintrag in der Tabelle
beispieltabelle verweist.&lt;/p&gt;
&lt;h3 id=&#34;locking&#34;&gt;
    &lt;a href=&#34;#locking&#34;&gt;
	Locking
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Die großen Datenbanken wie Oracle und Sybase haben umfangreiche
Mechanismen, um Datensätze gegen gleichzeitigen Zugriff durch
mehrere Programme zu sperren. Bei kleinen Datenbankservern wie
MySQL muß man dies dagegen selbst machen. Eine sehr einfache,
aber auch wenig effiziente Methode ist die Sperrung der ganzen
Tabelle, entweder um darin zu schreiben oder um aus ihr zu
lesen. DB_Sql stellt die Funktionen lock() und unlock() zur
Verfügung, um mit Ihnen Sperren auf ganze Tabellen zu setzen.&lt;/p&gt;
&lt;p&gt;Die Funktion lock() kann auf zwei Arten verwendet werden.
Entweder übergibt man Ihr einen Tabellennamen und einen
Sperrmodus (Beispiel: $db-&amp;gt;lock(&amp;ldquo;beispieltabelle&amp;rdquo;, &amp;ldquo;write&amp;rdquo;)),
dann setzt sie ein Lock im entsprechenden Modus auf diese
Tabelle oder man übergibt Ihr einen Hash von Tabellennamen und
Modi, dann werden die entsprechenden Locks gesetzt. Das Beispiel
zeigt, wie es geht.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$lock_tables&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;beispieltabelle&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;write&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;zweite_tabelle&amp;#34;&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;read&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;lock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$lock_tables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Sperren auf diese Tabellen bleiben bestehen, bis
$db-&amp;gt;unlock() aufgerufen wird. Der Aufruf löscht alle
bestehenden Sperren; es ist nicht möglich, einzelne Locks
aufzugeben.&lt;/p&gt;
&lt;h2 id=&#34;sessions&#34;&gt;
    &lt;a href=&#34;#sessions&#34;&gt;
	Sessions
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;sessions-konfigurieren&#34;&gt;
    &lt;a href=&#34;#sessions-konfigurieren&#34;&gt;
	Sessions konfigurieren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Eine Session ist in PHPLIB ein Weg, Variablen zu haben, die
automatisch von einer PHP-Seite zur nächsten mitgeschleppt
werden. Dazu wird dem Browser des Anwenders eine Kennung
verpaßt, die dieser bei jedem Zugriff an die Anwendung zurück
übermittelt - entweder in Form eines Cookie oder in Form eines
GET-Parameters, der an jede URL angehängt werden muß, die der
Anwender aufrufen kann. Mit Hilfe dieser Kennung kann PHPLIB nun
die mitzuschleppenden Variablen am Ende einer Seite abspeichern
und beim Zugriff auf die Folgeseite wieder laden.&lt;/p&gt;
&lt;p&gt;Um mit Sessions zu arbeiten, muß man in seiner local.inc-Datei
eine Unterklasse der Klasse Session aus PHPLIB erzeugen. In
dieser Klasse wird wieder mit einer Reihe von Parametern
festgelegt, auf welche Weise die Variablen zu speichern sind und
auf welche Weise die Kennung weitergegeben wird. Wie schon bei
der Datenbank-Klasse geschieht dies im wesentlichen, indem man
eine Reihe von vordefinierten Variablen mit den gewünschten
Werten überschreibt. Eine Besonderheit besteht darin, daß man
(ab PHPLIB-7) der Session-Klasse mit einer Hilfsklasse (CT_SQL)
mitteilen muß, wo und auf welche Weise die Session-Daten zu
speichern sind.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  +---------+           enthält Code zur Verwaltung von Session-IDs,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  | Session |           zur Serialisierung von Variablen und
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  +---------+           zum Abräumen alter Sessions
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         | benutzt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         v
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     +--------+         enthält SQL-Queries, die Session-Variablen
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | CT_Sql |         laden und speichern, User authentisieren
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     +--------+         und so weiter.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         |  benutzt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         v
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        +--------+      übernimmt die Kommunikation mit der Datenbank,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        | DB_Sql |      Fehlerbehandlung und so weiter.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        +--------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 1:&lt;/strong&gt; &lt;em&gt;Beziehung zwischen den Klassen DB_Sql, CT_Sql und Session, Konfiguration zur Arbeit mit einer SQL-Datenbank&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Diese Hilfsklasse enthält die benötigten Anweisungen, um
Variablen in eine Datenbank (oder eine DBM-Datei, oder ein
shared-memory Segment, oder etwas anderes) zu speichern und von
dort zu lesen, um Benutzer zu authentisieren und weitere
Zugriffe. Die Abkürzung &amp;ldquo;CT&amp;rdquo; steht dabei für &amp;ldquo;Container&amp;rdquo;, die
Klasse implementiert einen sogenannten Storage Container, der
alle Speicherzugriffe für eine andere Klasse enthält. Durch die
Auswahl eines anderen Storage Containers kann man Session dazu
bringen, Variablen nicht in einer SQL-Datenbank, sondern auf
einem anderen Speichermedium abzulegen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  +---------+                  +-----------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  | Session |-- abgeleitet --&amp;gt; | Example_Session |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  +---------+                  +-----------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         |                                     |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         | benutzt                             | benutzt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         v                                     v
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     +--------+                   +----------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | CT_Sql | -- abgeleitet --&amp;gt; | Example_CT_Sql |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     +--------+                   +----------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         |                                       |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         |  benutzt                              | benutzt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         v                                       v
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        +--------+                   +------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        | DB_Sql | -- abgeleitet --&amp;gt; | DB_Example |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        +--------+                   +------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 2:&lt;/strong&gt; &lt;em&gt;Klassensystem nach dem Einlesen von local.inc.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Durch die Definitionen in local.inc entstehen aus den
Standardklassen der Bibliothek angepaßte Unterklassen, die für
die spezielle Anwendung und Installation konfiguriert sind. Eine
PHPLIB-Anwendung verwendet immer diese angepaßten Unterklassen
aus local.inc, niemals die Standardklassen aus der Bibliothek.&lt;/p&gt;
&lt;p&gt;In local.inc findet man also nach der Definition der Klasse für
den Datenbankzugriff (DB_Example, siehe oben) Definitionen für
den Storage Container und die Session-Klasse. Die Daten, die
konfiguriert werden müssen, sind im wesentlichen die Namen der
Klassen, so wie sie sich untereinander benutzen, d.h. man muß
dem Storage Container den Namen der Datenbank-Klasse mitteilen
und der Session-Klasse den Namen des Storage Containers, der
verwendet werden soll.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Example_CT_Sql&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CT_Sql&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Name der Datenbankklasse, die zu verwenden ist.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$database_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;DB_Example&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Name der SQL-Tabelle, die zu verwenden ist.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$database_table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;active_sessions&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;                              
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Example_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Muß vorhanden sein, damit die Klasse gespeichert werden kann.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Muß für jede Installation anders sein
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hocuspocus&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Name der Storage Container-Klasse, die zu verwenden ist.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Im Storage Container wird durch den Namen der Datenbank-Klasse
implizit klargemacht, an welchen Server mit welchem
Benutzernamen und welchem Paßwort connected werden soll.
Außerdem kann konfiguriert werden, wie der Name der Tabelle
lautet, in dem später einmal die Session-Daten gespeichert
werden sollen. Damit dies mit den create_database-Definitionen
aus dem stuff/-Verzeichnis zusammenspielt, sollte dieser Name
active_sessions sein.&lt;/p&gt;
&lt;p&gt;In der Session-Klasse ist vor allen Dingen der Name des Storage
Containers zu definieren, der verwendet werden soll, hier also
Example_CT_Sql. In der Variablen magic steht außerdem ein
String, der bei der Generierung der Session-IDs verwendung
findet, und der bei jeder Installation von PHPLIB auf einen
anderen Wert gesetzt werden sollte, damit die Session-IDs
schwerer zu fälschen sind. Die Variable classname wird intern
von PHPLIB verwendet, um Objekte zu laden und zu speichern und
sollte den genauen Namen der Klasse selbst enthalten, hier also
Example_Session.&lt;/p&gt;
&lt;p&gt;PHPLIB-Sessions haben nun zwar noch eine ganze Menge Knöpfe, an
denen man drehen und einstellen kann, aber die Session-Klasse
ist nun schon benutzbar. Eine Seite mit Session-Variablen sieht
wie nachstehend gezeigt aus.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Laden der Variablen aus der Datenbank.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Die globale Variable $s ist nun bei der Session registriert.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// $s wird auf einen definierten Startwert gesetzt, wenn die
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// Variable noch nicht existiert.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// $s hochzählen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;title&amp;gt;Eine Testseite&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;h1&amp;gt;Eine Testseite&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  Die Variable $s hat den Wert &amp;lt;?php print $s ?&amp;gt;.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  // Zurückspeichern der Variablen in die Datenbank
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  page_close();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Durch das auto_prepend_file, das in der php3.ini konfiguriert
wird, wird dieser Datei der Inhalt von prepend.php3
vorangestellt.&lt;/p&gt;
&lt;p&gt;prepend.php3 lädt jetzt alle weiteren Dateien,
die für die Ausführung dieser Seite benötigt werden, d.h. es
bindet db_mysql.inc, session.inc, page.inc, local.inc und ggf.
noch weitere, hier noch nicht benutzte Dateien ein. Dadurch sind
am Anfang dieses Programmes eine Reihe von Funktionen und
Klassen definiert, die zu PHPLIB gehören.&lt;/p&gt;
&lt;p&gt;Das Beispielprogramm
selbst verwendet dann die vordefinierten PHPLIB-Funktionen
page_open() und page_close(), um Variablen am Anfang der Seite
einzulesen und am Ende der Seite wieder abzuspeichern. Der
Funktion page_open() wird dabei mitgeteilt, daß diese Seite die
Session-Funktionalität von PHPLIB verwenden möchte und zwar wie
sie in der Klasse Example_Session konfiguriert ist.&lt;/p&gt;
&lt;p&gt;Das Resultat
ist ein globales Example_Session Objekt mit dem Namen $sess. Man
kann jetzt Funktionen von Example_Session (also Funktionen von
Session) aufrufen, um Variablennamen bei der Session zu
registrieren.&lt;/p&gt;
&lt;p&gt;Im Beispielprogramm wird dies durch den Aufruf
$sess-&amp;gt;register(&amp;ldquo;s&amp;rdquo;) gemacht, der die globale Variable mit dem
Namen &amp;ldquo;s&amp;rdquo; bei der Session anmeldet. Fortan wird bei jedem Aufruf
von page_close() der aktuelle Typ und Wert von $s gerettet und
bei einem Aufruf von page_open() wieder hergestellt.&lt;/p&gt;
&lt;p&gt;Sobald der
Name &amp;ldquo;s&amp;rdquo; erst einmal bei einer Session registriert ist, bleibt
er solange Bestandteil der Session, bis er mit
$sess-&amp;gt;unregister(&amp;ldquo;s&amp;rdquo;) wieder abgemeldet wird. Andererseits
schadet es nichts, einen Namen mehr als einmal bei einer Session
zu registrieren. Die Beispielseite merkt sich nun also den Wert
von $s und kann ihn so von einem Aufruf der Seite zum nächsten
hochzählen.&lt;/p&gt;
&lt;p&gt;Wenn man die Seite aufruft und seinen Browser so eingestellt
hat, daß er beim Setzen von Cookies eine Warnung ausgibt, dann
wird man feststellen, daß der Webbrowser versucht, einen Cookie
mit dem Namen &amp;ldquo;Example_Session&amp;rdquo; auf irgendeinen wilden Wert zu
setzen. Dieser Cookie identifiziert den Browser eindeutig und in
der Tabelle active_sessions in der Datenbank werden unter dem
Wert des Cookies die Variablen abgespeichert, die zu dieser
Session gehören (aus technischen Gründen sind die Werte dort mit
base64_encode() codiert abgespeichert, aber man kann sich die
Innereien von PHPLIB ansehen, wenn man die Inhalte von
active_sessions.val mit base64_code() decodiert).&lt;/p&gt;
&lt;p&gt;Jeder Anwender
hat also seinen eigenen Cookie mit einem eindeutigen Wert und in
der Datenbank seinen eigenen Satz Variablen, der zu diesem
Cookie gehört. PHPLIB verwendet sogenannte Session-Cookies, d.h.
die Cookies werden im Browser ohne eine Zeitbegrenzung gesetzt,
aber der Browser speichert die Cookies niemals in einer
cookies.txt-Datei ab. Die Session &amp;ldquo;lebt&amp;rdquo; also solange, wie der
Browser des Anwenders läuft. Beendet der Anwender seinen
Browser, ist der Cookie gelöscht und die Session verloren.&lt;/p&gt;
&lt;p&gt;Man kann dies ändern, indem man die Variable $lifetime in seiner
Session definiert. Die Variable gibt an, wieviele Minuten lang
der Cookie mit der Session-ID gelten soll. Setzt man die
Variable also auf den Wert 1440, dann wird die Anwendung
versuchen, einen Cookie mit einer Lebensdauer von einem Tag zu
setzen. In der Praxis hat sich dies nicht als empfehlenswert
erwiesen, daher verwendet PHPLIB standardmäßig Session-Cookies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Lifetime_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;GET_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sonstwas&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Session-ID Cookie soll einen Tag lang gehalten werden.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$lifetime&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1440&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// das sind Minuten.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sessions-mit-get-mode&#34;&gt;
    &lt;a href=&#34;#sessions-mit-get-mode&#34;&gt;
	Sessions mit GET-Mode
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Einige Anwender sind durch die Medien zu einer regelrechten
Cookie-Paranoia erzogen worden und haben ihrem Browser verboten,
Cookies anzunehmen oder zu senden. PHPLIB kann in diesem Fall
nicht funktionieren.&lt;/p&gt;
&lt;p&gt;Um das Problem zu umgehen kennt PHPLIB den
sogenannten GET-Mode. In diesem Fall wird die Session-ID nicht
per Cookie zur Anwendung übertragen, sondern als GET-Parameter
von Seite zu Seite als Bestandteil der URL durchgeschleift. Man
überredet PHPLIB dazu, GET-Mode zu verwenden, indem man den
entsprechenden Parameter in der Session-Klasse setzt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;GET_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;GET_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sonstwas&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// unterschiedslos GET-Mode verwenden
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;get&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Fallback_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Fallback_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;was anderes&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Cookies probieren, automatisch auf GET-Mode zurückschalten
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$mode&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;cookie&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$fallback_mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;get&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Setzt man die Variable $mode auf &amp;ldquo;get&amp;rdquo;, verwendet die Anwendung
immer GET-Parameter, um die Session-ID von Seite zu Seite
weiterzugeben. Dies hat jedoch eine Reihe von Nachteilen: Zum
Beispiel wird die Session-ID dadurch Bestandteil von Bookmarks
oder sie wird womöglich sogar von irgendwelchen Redakteuren in
Zeitschriften abgedruckt. Auch geht die Session verloren, wenn
ein Anwender in seinem Browser einmal schnell eine andere Seite
aufruft und dann zu unserer Anwendung zurückkehrt - dies ist bei
Cookie-Mode nicht der Fall.&lt;/p&gt;
&lt;p&gt;Daher kann man PHPLIB auch so konfigurieren, wie in der Klasse
Fallback_Session gezeigt. In diesem Fall versucht PHPLIB beim
Start der Session sowohl Cookies als auch GET-Parameter zu
benutzen. Ist auf den Folgeseiten der Cookie gesetzt, wird
weiter Cookie-Mode verwendet. Hat der Anwender jedoch die
Annahme von Cookies verweigert, schaltet PHPLIB automatisch auf
GET-Parameter um.&lt;/p&gt;
&lt;p&gt;In beiden Fällen muß man seine Anwendung jedoch speziell
präparieren, damit die Session-ID in der URL weitergereicht
wird. Genaugenommen muß man alle URLs in seiner Anwendung durch
PHPLIB erzeugen lassen, anstatt sie einfach ins HTML zu
schreiben, d.h. man muß statt&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/index.html&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;zurück&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zur&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Hauptseite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;?php &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$sess-&amp;gt;purl&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;(&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;)&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;zurück&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zur&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Hauptseite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;schreiben, und zwar für &lt;em&gt;alle&lt;/em&gt; A, FRAME und FORM-Tags. Die
Funktion $sess-&amp;gt;url() liefert in Abhängigkeit von der aktuellen
Betriebsart eine passende URL mit Session-ID für die angegebene
Parameter-URL zurück. Die Funktion purl() macht genau dasselbe,
druckt diese URL aber gleich aus. Das bedeutet, wenn der
Anwender Cookies eingeschaltet hat, wird die Funktion
tatsächlich die URL &amp;ldquo;/index.html&amp;rdquo; ausgeben. Ist stattdessen aber
die Annahme von Cookies beim Anwender blockiert, dann wird von
purl() stattdessen die URL &amp;ldquo;/index.html?Fallback_Session=&amp;hellip;.&amp;rdquo;
erzeugt.&lt;/p&gt;
&lt;p&gt;Wie man sieht, ist dieses Verfahren sehr aufwendig in der
Codierung: Man muß jedes Link und jede URL in seiner Anwendung
manuell anfassen und auf PHP umstellen. Dies ist leider nicht zu
ändern, daß die Sprache PHP3 normales HTML niemals anfaßt,
sondern ausschließlich PHP-Sektionen interpretiert. Wenn man
sich dennoch entschließt, dieses Verfahren anzuwenden, sollte
man sich auf jeden Fall für die Fallback-Lösung entscheiden,
weil diese für die Anwender, die Cookies eingeschaltet haben,
wesentlich bequemer und betriebssicherer ist.&lt;/p&gt;
&lt;h3 id=&#34;sessions-initialisieren&#34;&gt;
    &lt;a href=&#34;#sessions-initialisieren&#34;&gt;
	Sessions initialisieren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Beim Start einer Anwendung, also wenn eine neue Session erzeugt
wird, ist es oftmals notwendig, eine Reihe von Variablen mit
passenden Startwerten zu belegen.&lt;/p&gt;
&lt;p&gt;PHPLIB sieht dafür die
Variable $auto_init vor, mit der man den Namen einer
Include-Datei festlegen kann, die beim Start einer Session
geladen und ausgeführt wird. Per Konvention wird diese Datei in
der Regel &amp;ldquo;setup.inc&amp;rdquo; genannt. Anweisungen in dieser Datei
werden im Kontext einer Funktion ausgeführt, daher müssen
globale Variablen, die vorbelegt werden sollen, mittels der
PHP-Anweisung &amp;ldquo;global&amp;rdquo; vorher exportiert werden.&lt;/p&gt;
&lt;p&gt;Das Beispiel
mit Example_Session und der globalen Variablen $s (siehe oben)
läßt sich damit auch wie nachstehend realisieren.&lt;/p&gt;
&lt;p&gt;In local.inc:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Beispiel_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Beispiel_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ein weiterer String&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Diese Datei soll beim Session-Start geladen werden
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$auto_init&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;setup.inc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In setup.inc:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// $s als globale Variable deklarieren
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// $s mit einem Startwert vorbelegen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Den Namen von $s registrieren
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Beispielseite:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Beispiel_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;title&amp;gt;Überarbeitete Beispielseite&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;h1&amp;gt;Überarbeitete Beispielseite&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  Der Wert von $s ist &amp;lt;?php print $s ?&amp;gt;.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  page_close();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dieses Feature ist vor allen Dingen dann interessant, wenn eine
Anwendung aus einer Vielzahl von Seiten besteht und keine
ausdrückliche Startseite besteht, d.h. wenn Anwender irgendeine
Seite der Anwendung aufrufen können, um sie zu starten.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;setup.inc&amp;rdquo; wird in solchen Situationen in jedem Fall aufgerufen
und sorgt für eine korrekte Initialisierung der Anwendung.&lt;/p&gt;
&lt;h3 id=&#34;caching-kontrollieren&#34;&gt;
    &lt;a href=&#34;#caching-kontrollieren&#34;&gt;
	Caching kontrollieren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;PHPLIB-Seiten sind meistens veränderlich und dürfen daher von
einem öffentlichen Cache wie z.B. dem Squid-Cache der Firma oder
des Providers nicht gespeichert werden. Wenn das nicht so wäre,
könnte es sein, daß andere Anwender Seiten aus diesem Cache
bekommen, die Inhalte enthalten, die nicht für sie bestimmt
waren. Anders sieht es mit privaten Caches aus, etwa dem Cache,
den Netscape für jeden Anwender getrennt anlegt. In vielen
Anwendungen ist es zulässig, daß Seiten hier abgelegt werden, um
den Bildaufbau zu beschleunigen. Dies ist zugleich auch die
Default-Einstellung von PHPLIB (ab Version 7, Version 6.x verbot
das Caching von Seiten vollständig).&lt;/p&gt;
&lt;p&gt;Mittels der Variablen $allowcache und $allowcache_expire kann
man festlegen, wie PHPLIB-erzeugte Seiten in Caches gelagert
werden dürfen und, falls sie gecached werden dürfen, wie lange
sie im Cache verbleiben können. Für die Variable $allowcache
sind die drei Werte &amp;ldquo;public&amp;rdquo;, &amp;ldquo;private&amp;rdquo; (der Default) und &amp;ldquo;no&amp;rdquo;
zugelassen. Mit der Einstellung &amp;ldquo;public&amp;rdquo; sendet PHPLIB eine
entsprechende Cache-Control-Zeile als Header, die die
Speicherung der Seite in öffentliches Caches zuläßt; mit der
Einstellung &amp;ldquo;private&amp;rdquo; ist nur die Speicherung in privaten Caches
zugelassen. In beiden Fällen wird dem Cache die Speicherung der
Seite für $allowcache_expire Minuten gestattet, der Defaultwert
ist hier 1440 Minuten, also ein Tag.&lt;/p&gt;
&lt;p&gt;Setzt man den Wert von allowcache auf &amp;ldquo;no&amp;rdquo;, erzeugt PHPLIB
$Headerzeilen, die jegliches Caching der Seite - wo auch immer -
verbieten. Netscape fordert die Seite hier schon dann neu an,
wenn man nur die Größe des Browserfensters verändert.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Nocache_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Nocache_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;schon wieder ein String&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Caching verbieten
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$allowcache&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;no&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sessions-und-ein-warenkorb&#34;&gt;
    &lt;a href=&#34;#sessions-und-ein-warenkorb&#34;&gt;
	Sessions und ein Warenkorb
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Mit Hilfe der Sessions und der Klasse Cart von PHPLIB kann man
sich recht einfach einen Warenkorb für einen Webshop gestalten.
Die Klasse Cart ist in der Include-Datei &amp;ldquo;cart.inc&amp;rdquo; von PHPLIB
definiert. Damit man sie verwenden kann, muß man sie auf seinen
Webseiten einbinden. Zweckmäßigerweise geschieht dies indem man
in der Datei prepend.php3 an der markierten Stelle die Anweisung
&amp;lsquo;require(&amp;ldquo;cart.inc&amp;rdquo;)&amp;rsquo; einfügt.&lt;/p&gt;
&lt;p&gt;Um einen Warenkorb verwenden zu können, muß man sich beim Start
einer Session einen definieren. Am einfachsten geschieht dies
mit dem bereits erwähnten auto_init-Feature der Session-Klasse.&lt;/p&gt;
&lt;p&gt;In prepend.php3:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gekürzt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* Additional require statements go below this line */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_PHPLIB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;libdir&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;util.inc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;      &lt;span class=&#34;cm&#34;&gt;/* General utility functions */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cart.inc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// eingefügt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* Additional require statements go before this line */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gekürzt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In local.inc:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Definition&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;der&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Datenbank&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;und&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Storage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Containerklasse&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gekürzt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Shop_Session&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Shop_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kaufmich&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$auto_init&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;setup.inc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;cookie&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;My_Cart&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Cart&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// hier Funktionsdefinitionen einfügen, wie weiter unten
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// im Text gezeigt.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In setup.inc:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$cart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;is_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$cart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$cart&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;My_Cart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cart&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Der Warenkorb aus PHPLIB ist sehr einfach gehalten und kann
Paare aus Artikelnummern und Anzahlen speichern. Mit Hilfe der
Funktionen $cart-&amp;gt;add_item($artikelnummer, $anzahl) kann man
$anzahl viele Artikel mit der genannten Nummer zum Warenkorb
hinzufügen, mit $cart-&amp;gt;remove_item($artikelnummer, $anzahl)
wieder entfernen. Mit Hilfe der Funktion
$cart-&amp;gt;set_item($artikelnummer, $anzahl) kann man die Anzahl der
Artikel mit der genannten Nummer im Warenkorb direkt setzen. Der
Warenkorb ist dabei intelligent genug, einen Artikel aus dem
Warenkorb zu entfernen, wenn die Anzahl der Artikel auf 0 sinkt.&lt;/p&gt;
&lt;p&gt;Den Inhalt des gesamten Warenkorbes kann man sich mit Hilfe der
Funktion $cart-&amp;gt;show_all() anzeigen lassen. Der Cart ruft dabei
intern zunächst die Funktion $cart-&amp;gt;show_cart_open() auf, um
dann für jeden Artikel im Warenkorb
$cart-&amp;gt;show_cart_item($artikelnummer, $anzahl) einmal
aufzurufen. Am Ende wird die Anzeige mit einem Aufruf von
$cart-&amp;gt;show_cart_close() beendet. Ist der Warenkorb leer, wird
stattdessen nur die Funktion $cart-&amp;gt;show_cart_empty()
aufgerufen.&lt;/p&gt;
&lt;p&gt;In Cart sind diese Funktionen nur mit der notwendigsten
Anzeigelogik ausgestattet, um den Inhalt des Warenkorbes
darzustellen. In einer konkreten Anwendung wird man daher die
vier Anzeigefunktionen mit eigenem Code überschreiben wollen,
der in der Definition von My_Cart in local.inc eingefügt werden
muß.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;cart&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;My_Cart&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Cart&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Gesamtwert des Warenkorbes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Paare Artikelnummer =&amp;gt; Preis
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$preis&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;0815&amp;#34;&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;17.85&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;4711&amp;#34;&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;21.30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;64738&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;9.99&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Paare Artikelnummer =&amp;gt; Beschreibung
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$beschreibung&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;0815&amp;#34;&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Artikel 1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;4711&amp;#34;&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Artikel 2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;64738&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Artikel 3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Eine Tabelle eröffnen und eine Summe auf 0 setzen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;show_cart_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;table&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Gesamtsumme drucken und Tabelle abschließen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;show_cart_close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;lt;tr&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;  &amp;lt;td&amp;gt;Gesamtsumme:&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;  &amp;lt;td&amp;gt;%8.2f&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;summe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;/table&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Einen einzelnen Artikel drucken.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// Summe mitführen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;show_cart_item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$art&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$anz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;summe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;preis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$art&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$anz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;lt;tr&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;  &amp;lt;td&amp;gt;%s&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;beschreibung&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;art&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;  &amp;lt;td&amp;gt;%8.2f DM (%d Stück zu %8.2f DM)&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;preis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$art&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$anz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$anz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;preis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$art&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In einer konkreten Anwendung wird man die Beschreibungen und
Preise der Artikel jedoch auch nicht hart codieren, sondern mit
Hilfe der Artikelnummer aus einer Datenbank abfragen.&lt;/p&gt;
&lt;h2 id=&#34;seiten-mit-login&#34;&gt;
    &lt;a href=&#34;#seiten-mit-login&#34;&gt;
	Seiten mit Login
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Sessions geben dem Entwickler Webseiten mit
&amp;ldquo;Erinnerungsvermögen&amp;rdquo;. Sobald man dieses hat, kann man auf der
Grundlage dieser Eigenschaft weitere Features realisieren.&lt;/p&gt;
&lt;p&gt;Man kann sich zum Beispiel daran erinnern, ob ein Anwender im Rahmen
dieser Session schon einmal einen Benutzernamen und ein Paßwort
angegeben hat und wann das der Fall war. Dieses Feature nennt
man Authentication, Authentifizierung, und PHPLIB bietet mit der
Klasse Auth eine eigene Implementierung davon an.&lt;/p&gt;
&lt;p&gt;PHPLIB Authentifizierung leistet vergleichbares wie HTTP
Authentifzierung, hat jedoch weder in der Implementierung noch
in der Konfigurierung etwas damit zu tun. Warum also eine eigene
Lösung?&lt;/p&gt;
&lt;p&gt;HTTP Authentifizierung sind die kleinen grauen Login-Fenster mit
Username und Paßwort, die auf Paßwortgeschützten Webseiten
aufgehen. Sie haben gegenüber der Authentifizierung von PHPLIB
eine Reihe von Nachteilen. PHPLIB Auth hat im einzelnen die
folgenden Vorteile:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PHPLIB Authentifizierung hat ein kontrolliertes
  Logout-Verfahren.
&lt;li&gt;Dieses Logoutverfahren kann auch automatisch ablaufen: Wenn
  ein Anwender eine gewisse Zeit lang keine Seiten abgerufen
  hat, ist er automatisch ausgeloggt.
&lt;li&gt;Der Loginschirm ist kein kleiner grauer Requester, sondern
  eine reguläre HTML-Seite. Dem Entwickler stehen also alle
  Gestaltungsmöglichkeiten zur Verfügung: Ein Loginschirm kann
  nicht nur ein Firmenlogo oder andere Grafik enthalten, sondern
  auch eine Benutzerführung und Online-Hilfe.
&lt;li&gt;Die Authentifizierung erfolgt gegen eine beliebige
  Datenquelle, zum Beispiel einen SMB-Server (NT
  Domaincontroller), einen LDAP-Server oder, wie in der
  Standarddistribution von PHPLIB gezeigt, gegen eine
  Datenbanktabelle. Da die Authentifierung durch eine
  benutzerdefinierte PHP3-Funktion erfolgt, kann sie
  vollkommen frei den Bedürfnissen angepaßt werden.
&lt;li&gt;Die Authentifizierung erfolgt seitenweise, nicht für
  Teilbäume von Seiten.
&lt;li&gt;Es ist möglich, Authentisierung mit Registrierung zu
  erzeugen: Anwender, die noch kein Paßwort haben, können
  ein Formular mit Benutzerdaten ausfüllen und die Anwendung
  legt den Benutzer nach Bedarf und mit Standardrechten an.
&lt;li&gt;PHPLIB Auth funktioniert mit CGI PHP und mit mod_php, während
  durch PHP gesteuerte HTTP Authentifizierung nur mit mod_php
  korrekt funktioniert.
&lt;li&gt;PHPLIB Auth ist direkt mit einem Zugriffrechteschema
  gekoppelt, sodaß man ganze Seiten oder Teile von Seiten nur
  für Benutzer mit den passenden Rechten sichtbar werden lassen
  kann.
&lt;/ul&gt;
&lt;h3 id=&#34;login-konfigurieren&#34;&gt;
    &lt;a href=&#34;#login-konfigurieren&#34;&gt;
	Login konfigurieren
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;In PHPLIB erzeugt man Seiten mit einem Login - wie könnte es
anders sein - indem man eine Unterklasse der PHPLIB-Klasse Auth
erzeugt. Eine Beispiel-Unterklasse ist in der Datei local.inc in
der Distribution bereits enthalten. Diese Unterklasse verwendet
eine Datenbanktabelle auth_user, um Loginnamen und Paßworte zu
speichern.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------+                   +--------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Auth | -- abgeleitet --&amp;gt; | Example_Auth |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+------+                   +--------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |                                   |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  benutzt                          | benutzt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     v                                   v
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    +--------+                   +------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    | DB_Sql | -- abgeleitet --&amp;gt; | DB_Example |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    +--------+                   +------------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 3:&lt;/strong&gt; &lt;em&gt;Klassenschema von Auth für den Gebrauch mit
local.inc.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Eine Unterklasse von Auth muß mindestens die Funktionen
auth_loginform() und auth_validatelogin() definieren. Die
Funktion auth_loginform() wird aufgerufen, um den
Loginbildschirm selbst zu malen. Dieser Loginbildschirm muß alle
benötigten Eingabefelder enthalten, damit der Benutzer sich
identifizieren und authentisieren kann.&lt;/p&gt;
&lt;p&gt;In der Regel wird der
Loginschirm also ein Feld für die Eingabe des Benutzernamens und
ein Feld für die Eingabe eines Paßwortes enthalten. Wird dieses
Formular abgeschickt, werden seine Inhalte auf dem Server der
Funktion auth_validatelogin() bereitgestellt. Diese Funktion
kann mit den Eingabedaten aus dem Formular beliebige Dinge
anstellen, um die Identität des Benutzers zu bestätigen.&lt;/p&gt;
&lt;p&gt;Die Auth-Klasse erwartet, daß die Funktion den Wert &amp;ldquo;false&amp;rdquo; liefert,
falls das Login nicht stimmig ist, oder eine gültige User-ID,
falls das Login korrekt ist. Wie die Funktion die User-ID
ermittelt und welcher anderen Hilfsmittel sie sich dazu bedient
(zum Beispiel einer Datenbankverbindung durch ein
Datenbankobjekt), ist der Auth-Klasse selbst vollkommen egal.&lt;/p&gt;
&lt;p&gt;Das Standardbeispiel einer Unterklasse von Auth geht davon aus,
daß es eine Tabelle auth_users in der Datenbank gibt, die den
nachstehend gezeigten Aufbau hat. Zu jedem Benutzer werden ein
Benutzername username und das dazugehörige Paßwort password
gespeichert. Außerdem gehören zu einem Benutzer noch die
gewünschten Berechtigungen perms und die interne User-ID uid,
mit der die Auth-Klasse arbeitet.&lt;/p&gt;
&lt;p&gt;Im stuff-Verzeichnis der
PHPLIB-Distribution befinden sich create_database.*-Dateien für
die unterschiedlichen vom PHPLIB unterstützten Datenbanken, mit
denen man diese Tabellen leicht anlegen kann.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+----------+--------------+------+-----+---------+-------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| Field    | Type         | Null | Key | Default | Extra |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+----------+--------------+------+-----+---------+-------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| uid      | varchar(32)  |      | PRI |         |       |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| username | varchar(32)  |      | UNI |         |       |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| password | varchar(32)  |      |     |         |       |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;| perms    | varchar(255) | YES  |     | NULL    |       |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;+----------+--------------+------+-----+---------+-------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;4 rows in set (0.00 sec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 4:&lt;/strong&gt; &lt;em&gt;Aufbau der Tabelle auth_users&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;PHPLIB arbeitet intern immer mit User-IDs, weil diese ein
festgelegtes Format haben (dasselbe die Session_IDs). Diese
User-IDs werden ausschließlich intern verwendet und sind für den
Anwender niemals sichtbar. Nach außen präsentiert die Anwendung
immer die menschenlesbare Benutzeridentifikation, hier also den
Benutzernamen username. Da PHPLIB jedoch mit beliebigen
Loginverfahren arbeiten können soll, darf die Bibliothek keine
Annahmen über die menschenlesbare Benutzeridentifikation machen  -
statt eines einzelnen Feldes username ist es genauso möglich,
ein Tripel (vorname, nachname, telefon) zu definieren und zu
verlangen, daß diese drei Werte statt eines Benutzernamens
eingegeben werden. Die auth_user-Tabelle dient dann dazu, diese
externe Darstellung einer Benutzeridentität in das festgelegte
interne Format, die uid, zu übersetzen.&lt;/p&gt;
&lt;p&gt;Eine eigene Auth-Klasse beginnt damit, daß sie Auth erweitert.
Es können einige Variablen vorbelegt werden, die das Verhalten
von Auth steuern, aber im einfachsten Fall genügt die
nachstehende Definition:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Example_Auth&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Auth&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Name der Klasse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$lifetime&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;             &lt;span class=&#34;c1&#34;&gt;# Nach 15 Minuten Inaktivität wird der 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                                   &lt;span class=&#34;c1&#34;&gt;# User automatisch ausgeloggt.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# Name der Klasse und Tabelle für den Datenbankzugriff
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$database_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;DB_Example&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$database_table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;auth_user&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;auth_loginform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;loginform.ihtml&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;auth_validatelogin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# Siehe weiter unten.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Funktion auth_loginform(), die der Entwickler selber
schreiben muß, hat die Aufgabe, den Loginschirm zu zeichnen. Wir
tun dies hier im Beispiel einfach dadurch, daß wir die Datei
loginform.ihtml aus dem Includeverzeichnis einbinden. Die Datei
enthält ein gewöhnliches HTML-Formular, das in einer Tabelle
zwei Eingabefelder für einen Usernamen und ein Paßwort zeichnet.&lt;/p&gt;
&lt;p&gt;Das Formular übergibt das Ergebnis der Eingabe in den globalen
Variablen $username und $password. Nach der Eingabe wird die
Funktion auth_validatelogin() von der Auth-Klasse aufgerufen, um
die Eingabe zu prüfen. Da es sich bei den beiden Variablen um
globale Variablen handelt, muß die Funktion auth_validatelogin()
diese Werte zunächst einmal importieren. Sie kann dann in der
Datenbank nachschlagen, ob es einen Wert in der Datenbank gibt,
bei dem sowohl der Username als auch das Paßwort zutreffend
sind.&lt;/p&gt;
&lt;p&gt;Falls ja, wird die zugehörige User-ID an die Auth-Klasse
zurückgegeben. Andernfalls wird mit einem false ein Fehlschlag
signalisiert. Die Funktion auth_validatelogin() sieht
entsprechend aus wie unten gezeigt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;auth_validatelogin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c1&#34;&gt;# $username merken, damit er im loginform wieder zur Verfügung steht.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;auth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;uname&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# Default-Ergebnis: kein Login möglich
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;$uid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# Suche in der Datenbank nach $username/$password
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;$query&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;select uid, perms from %s
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;                      where username = &amp;#39;%s&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;                        and password = &amp;#39;%s&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;database_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;addslashes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;addslashes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# Hat es Treffer gegeben?
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;next_record&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c1&#34;&gt;# uid merken für die Rückgabe
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nv&#34;&gt;$uid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;uid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c1&#34;&gt;# Die Zugriffsrechte merken wir uns hier nur, um es
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# Perm nachher einfacher zu machen. Erklärung folgt weiter
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# unten.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;auth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;perm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;perms&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# An dieser Stelle hat $uid entweder einen Wert aus
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# der Datenbank oder ist false.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$uid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Mit Hilfe dieser Klasse kann jetzt eine einzelne Seite geschützt
werden. Dazu ist der Aufruf von page_open() im Kopf der Seite um
ein weiteres Feature zu ergänzen: Neben dem Namen der Klasse für
das Session-Management ist dort auch noch der Name der Klasse
für die Benutzeranmeldung mit anzugeben. Die entsprechende Zeile
sieht so aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;s2&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;title&amp;gt;Seite mit Zugriffschutz&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;body bgcolor=&amp;#34;#ffffff&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;h1&amp;gt;Seite mit Zugriffschutz&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; Ihr Benutzername ist &amp;lt;?php print $auth-&amp;gt;auth[&amp;#34;uname&amp;#34;] ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; und ihre User-ID ist &amp;lt;?php print $auth-&amp;gt;auth[&amp;#34;uid&amp;#34;] ?&amp;gt;.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  page_close();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Auth-Klasse bzw. ihre Unterklasse Example_Auth sorgt dafür,
daß der Funktionsaufruf page_open() nur dann erfolgreich
zurückkehrt, wenn der betreffende Benutzer sich erfolgreich
anmelden konnte. Intern startet page_open() bei dem gezeigten
Aufruf die Funktionen des Example_Auth-Objektes und dieses sorgt
bei nicht angemeldeten Benutzern dafür, daß der Loginschirm
gemalt wird und das Programm dann beendet wird. Das bedeutet: In
so einem Fall wird der Rest der Seite, nach dem
page_open()-Aufruf, gar nicht mehr angezeigt.&lt;/p&gt;
&lt;h3 id=&#34;weitergehende-konfigurationsmöglichkeiten&#34;&gt;
    &lt;a href=&#34;#weitergehende-konfigurationsm%c3%b6glichkeiten&#34;&gt;
	Weitergehende Konfigurationsmöglichkeiten
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wie die Session-Klasse verfügt auch die Auth-Klasse über einige
vordefinierte Variablen, mit denen man ihr Verhalten
beeinflussen kann.&lt;/p&gt;
&lt;p&gt;Die wichtigste ist die Variable $lifetime,
mit der man die Lebensdauer einer Anmeldung in Minuten festlegen
kann. Ist ein Benutzer für die angegebene Zeit oder länger
inaktiv, erlischt seine Anmeldung automatisch und er muß sich
beim System erneut anmelden.&lt;/p&gt;
&lt;p&gt;Die $lifetime einer Auth-Klasse
unterscheidet sich fundamental von der $lifetime einer
Session-Klasse und man muß beide genau unterscheiden: Die
Lifetime einer Session bestimmt, wie lange der Cookie im Browser
des Users gültig ist. Erlischt eine Session, ist nicht nur die
Anmeldung eines Benutzers verloren, sondern alle seine Variablen
sind unerreichbar. Sie stehen zwar noch einige Zeit in der
Datenbank, aber ohne die Session-ID im Cookie des Browsers sind
sie nicht mit dem Browser zu verknüpfen.&lt;/p&gt;
&lt;p&gt;Im Gegensatz dazu
bestimmt die $lifetime einer Auth-Klasse, wie lange die
Anmeldung eines Benutzers inaktiv sein kann. Erlischt die
$lifetime einer Auth-Klasse, erscheint zwar beim folgenden
Zugriff auf die Anwendung der Loginbildschirm, aber die Daten
des Benutzers sind nicht verloren und nach einer erneuten
Anmeldung kann er weiterarbeiten als sei nichts geschehen.&lt;/p&gt;
&lt;p&gt;Der empfohlene Wert für die $lifetime einer Session ist 0 - in
diesem Fall verwendet PHPLIB Session-Cookies, die nicht in der
cookies.txt des Browsers gespeichert werden und die mit dem
Beenden des Browsers automatisch verloren gehen. Da
Session-Cookies keine zeitlich begrenzte Laufzeit haben,
brauchen sie auch nicht erneuert zu werden. Es genügt, sie
einmal beim Setup der Session zu setzen.&lt;/p&gt;
&lt;p&gt;Der empfohlene Wert für
die $lifetime einer Auth-Klasse ist irgendwo zwischen 15 und 60
Minuten anzusiedeln. Die $lifetime einer Auth-Klasse ist eine
rein interne Sache der Datenbank, sie braucht nicht über Cookies
erneuert zu werden.&lt;/p&gt;
&lt;p&gt;Mit Hilfe der Variablen $mode, die die Werte &amp;ldquo;log&amp;rdquo; (default) und
&amp;ldquo;reg&amp;rdquo; annehmen kann, kann man PHPLIB aus demLoginmodus in den
Registrierungsmodus bringen. Im Registrierungsmodus werden statt
der beiden Funktionen auth_loginform() und auth_validatelogin()
die Funktionen auth_registerform() und auth_doregister()
aufgerufen.&lt;/p&gt;
&lt;p&gt;auth_registerform() muß wieder einen Bildschirm
zeichnen, in dem in diesem Fall die von dem Benutzer vorlangten
Daten abgefragt werden und auth_doregister() hat dann diese
Informationen in die Datenbank einzutragen und die User-ID des
Benutzers zurückzuliefern.&lt;/p&gt;
&lt;p&gt;Schließlich gibt es noch die Variable $nobody, mit der man
die sogenannte Default Authentication erzeugen kann. Mehr dazu
weiter unten.&lt;/p&gt;
&lt;h2 id=&#34;zugriffsrechte&#34;&gt;
    &lt;a href=&#34;#zugriffsrechte&#34;&gt;
	Zugriffsrechte
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Sobald man weiß, um wen es sich bei einem Benutzer handelt, kann
man sich überlegen, welche Zugriffsrechte man diesem Benutzer
gestatten möchte: Wenn man einen Benutzer authentisiert hat,
kann man sich um seine Autorisierung kümmern.&lt;/p&gt;
&lt;p&gt;In PHPLIB wird
dies durch die Klasse Perm erledigt, in der die Zugriffsrechte,
die die Anwendung kennt, definiert werden und die im Fehlerfall
einen Bildschirm zeichnet, der den Benutzer draußen hält. Als
Entwickler muß man dazu die Klasse Perm durch Bildung einer
Unterklasse an seine Bedürfnisse anpassen. Die Abbildung zeigt
das zugehörige Klassendiagramm.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;+------+&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;+--------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Perm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abgeleitet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Example_Perm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;+------+&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;+--------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 5:&lt;/strong&gt; &lt;em&gt;Klassendiagramm zur Anwendung der Klasse Perm.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In der Unterklasse von Perm kann man mit Hilfe des Arrays
$permissions definieren, welche Zugriffsrechte unsere Anwendung
erkennt. Bei den Zugriffsrechten handelt es sich um Namen für
Bitmuster, zum Beispiel &amp;ldquo;user&amp;rdquo;, &amp;ldquo;author&amp;rdquo;, &amp;ldquo;editor&amp;rdquo;, &amp;ldquo;supervisor&amp;rdquo;
und &amp;ldquo;admin&amp;rdquo; in dem in local.inc in der Distribution
mitgelieferten Beispiel. Im Beispiel wird jedes dieser
Zugriffsrechte auf ein einzelnes Bit abgebildet.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Example_Perm&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Perm&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Perm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$permissions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;s2&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;s2&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;s2&#34;&gt;&amp;#34;editor&amp;#34;&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;s2&#34;&gt;&amp;#34;supervisor&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;s2&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;perm_invalid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$does_have&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$must_have&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$perm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$auth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_PHPLIB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_PHPLIB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;libdir&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;perminvalid.ihtml&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ein User kann beliebig viele dieser Zugriffsrechte in dem Feld
perms der Tabelle auth_user zugewiesen bekommen. Dazu sind die
Zugriffsrechte dieses Users durch Komma getrennt aufzuführen -
Wichtig: Keine Leerzeichen! Die Rechte müssen direkt
hintereinander geschrieben werden, also z.B. &amp;ldquo;user,admin&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Der Benutzer hat dann die effektiven Zugriffsrechte der Ver-ODER-ung
beider Bitmuster. PHPLIB nimmt die Zugriffsrechte des Benutzers
und prüft diese gegen die Zugriffsrechte, die zum Betreten der
Seite notwendig sind.&lt;/p&gt;
&lt;p&gt;Dies geschieht mit der Funktion check(), etwa so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;s2&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;s2&#34;&gt;&amp;#34;perm&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Perm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# Zum Betreten dieser Seite sind &amp;#34;user&amp;#34;-Rechte notwendig.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$perm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;user,admin&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;title&amp;gt;Herzlichen Glückwunsch&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;h1&amp;gt;Sie sind berechtigt&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;Wenn Sie dies lesen können, sind sie berechtigt, diese Seite zu
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;betreten.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Der Zugriff auf eine Seite ist gestattet, wenn der Benutzer alle
in $perm-&amp;gt;check() verlangten Zugriffsrechte besitzt. Dazu werden
die Bitmuster der im $perm-&amp;gt;check() aufgeführten Rechte
miteinander ver-ODER-t und mit den effektiven Rechten des
Benutzers ver-UND-et. Das Resultat muß den verlangten Rechten
der Seite entsprechen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Die effektiven Zugriffsrechte eines Benutzers: user
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                        ergeben als Bitmuster: 16
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Die verlangten Zugriffsrechte der Seite:       user,admin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                        ergeben als Bitmuster: 17
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Rechteprüfung:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Effektive Zugriffsrechte: 17
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;AND   verlangte Rechte:         16
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SIND  17 &amp;amp; 16 =                 16
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;MÜSSEN SEIN verlangte Rechte    17 =&amp;gt; Zugriff verboten.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 6:&lt;/strong&gt; &lt;em&gt;Eine Beispielrechnung für Zugriffsrechte: Ein User mit dem Recht &amp;ldquo;user&amp;rdquo; versucht auf eine Seite mit den verlangten Rechten &amp;ldquo;user,admin&amp;rdquo; zuzugreifen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Zugriffsrechte in diesem Beispiel bezeichnen wir als
&lt;em&gt;atomare&lt;/em&gt; Zugriffsrechte, weil jedes Recht nur einem
einzelnen gesetzten Bit entspricht. Atomare Zugriffsrechte sind
die einfachsten aller Rechteschemata, weil sie sehr einfache
Rechteprüfungen erlauben: Um eine Seite zu sehen, die mit den
Rechten user,editor,admin geschützt ist, muß man mindestens die
Rechte user,editor,admin in der auth_user-Tabelle zugewiesen
bekommen haben.&lt;/p&gt;
&lt;p&gt;Ein anderes populäres Rechteschema sind &lt;em&gt;Userlevel&lt;/em&gt; oder
&lt;em&gt;inklusive Rechte&lt;/em&gt;. In diesem Schema ist jedes
Zugriffsrecht eine Erweiterung aller vorhergehenden Rechte. Man
erreicht dies zum Beispiel mit dieser Definition:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Inclusive_Perm&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Perm&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Inclusive_Perm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$permissions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       &lt;span class=&#34;s2&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       &lt;span class=&#34;s2&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       &lt;span class=&#34;s2&#34;&gt;&amp;#34;editor&amp;#34;&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       &lt;span class=&#34;s2&#34;&gt;&amp;#34;supervisor&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       &lt;span class=&#34;s2&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In so einem Fall kann ein Benutzer mit dem Recht admin leicht
auf eine Seite zugreifen, die das Zugriffsrecht &amp;ldquo;user&amp;rdquo; verlangt.&lt;/p&gt;
&lt;p&gt;Auch in diesem Fall ist die Funktionsweise leicht zu merken: Ein
Benutzer mit einem höheren Userlevel kann auf alle Funktionen
eines niedrigeren Zugriffslevels zugreifen. Wegen der internen
Organisation von PHP können bis zu 31 verschiedene Rechtebits
verwendet werden.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Die effektiven Zugriffsrechte eines Benutzers: admin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                        ergeben als Bitmuster: 31
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Die verlangten Zugriffsrechte der Seite:       user
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                        ergeben als Bitmuster: 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Rechteprüfung:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Effektive Zugriffsrechte: 31
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;AND   verlangte Rechte:         1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;SIND  31 &amp;amp;  1 =                 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;MÜSSEN SEIN verlangte Rechte    1 =&amp;gt; Zugriff erlaubt.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 7:&lt;/strong&gt; &lt;em&gt;Eine Beispielrechnung für Zugriffsrechte: Ein User mit dem Recht &amp;ldquo;admin&amp;rdquo; versucht auf eine Seite mit den verlangten Rechten &amp;ldquo;user&amp;rdquo; zuzugreifen.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;seiten-mit-optionalem-login&#34;&gt;
    &lt;a href=&#34;#seiten-mit-optionalem-login&#34;&gt;
	Seiten mit optionalem Login
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In vielen Anwendungen möchte man Benutzer ohne Anmeldung nicht
einfach hinauswerfen, sondern ihnen eine gewisse
Grundfunktionalität bieten, die man für angemeldete Benutzer
erweitert. In PHPLIB ist es nicht möglich, daß auf Seiten, die
eine Anmeldung verlangen unangemeldete Benutzer operieren, aber
man kann dafür sorgen, daß nicht angemeldete Benutzer auf eine
spezielle Gastbenutzer-Identität, nobody, abgebildet werden.&lt;/p&gt;
&lt;p&gt;Wenn man PHPLIB auf diese Weise verwenden möchte, definiert man
sich eine Unterklasse von Auth, in der die Variable $nobody auf
true gesetzt ist. Sobald man eine Seite betritt, auf der eine
Anmeldung verlangt wäre, man selbst jedoch nicht angemeldet ist,
setzt PHPLIB die Benutzeridentität auf den speziellen Wert
&amp;ldquo;nobody&amp;rdquo;, ohne daß ein Loginschirm verlangt wird.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Example_Auth&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Auth&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Name der Klasse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$lifetime&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;             &lt;span class=&#34;c1&#34;&gt;# Nach 15 Minuten Inaktivität wird der 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                                   &lt;span class=&#34;c1&#34;&gt;# User automatisch ausgeloggt.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# Name der Klasse und Tabelle für den Datenbankzugriff
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$database_class&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;DB_Example&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$database_table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;auth_user&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# Default Authentication verwenden
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$nobody&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;auth_loginform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;loginform.ihtml&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;auth_validatelogin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# Code wie üblich
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Um die Anzeige des Loginschirms zu erzwingen muß man speziellen
Code auf seiner Seite unterbringen: Die Funktion login_if() der
Klasse Auth zeigt den Loginbildschirm an, wenn sie mit einem
Argument aufgerufen wird. Man kann also einen Button oder ein
Link auf seiner Seite unterbringen, das dieselbe Seite mit einem
Argument aufruft und dies am Seitenanfang abfragen.&lt;/p&gt;
&lt;p&gt;In Code sieht das folgendermaßen aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;c1&#34;&gt;# using Default Authentication
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                 &lt;span class=&#34;s2&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;c1&#34;&gt;# Falls wir mit dem Parameter $again aufgerufen wurden,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Loginscreen anzeigen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$auth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;login_if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$again&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;c1&#34;&gt;# Wenn wir als &amp;#34;nobody&amp;#34; angemeldet sind,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Login-Link anzeigen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$auth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;auth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;uid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;nobody&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;A HREF=&amp;#34;&amp;lt;?php $sess-&amp;gt;purl(&amp;#34;$PHP_SELF?again=yes&amp;#34;) ?&amp;gt;&amp;#34;&amp;gt;Login&amp;lt;/A&amp;gt; aufrufen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;?php endif ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;benutzerspezifische-variablen&#34;&gt;
    &lt;a href=&#34;#benutzerspezifische-variablen&#34;&gt;
	Benutzerspezifische Variablen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Dadurch, daß PHPLIB intern User-IDs statt Usernamen verwendet
und daß diese User-IDs dasselbe Format wie Session-IDs haben,
ist es möglich, eine Klasse User zu haben, die ebenso wie die
Klasse Session funktioniert, aber mit User-IDs arbeitet.&lt;/p&gt;
&lt;p&gt;Variablen, die bei der Klasse User statt Session registriert
werden, stehen erst nach einem Login zur Verfügung, haben dafür
aber eine längere Lebensdauer. Typischerweise wird man hier
benutzerbezogene Einstellungen ablegen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;+------+&lt;/span&gt;                  &lt;span class=&#34;o&#34;&gt;+--------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abgeleitet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Example_User&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;+------+&lt;/span&gt;                  &lt;span class=&#34;o&#34;&gt;+--------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;benutzt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;nx&#34;&gt;zu&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CT_Sql&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;o&#34;&gt;+-----------------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                           &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;+---------+--&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abgeleitet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;+-----------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Session&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|--&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abgeleitet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Example_Session&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;+---------+&lt;/span&gt;                  &lt;span class=&#34;o&#34;&gt;+-----------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                                     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;benutzt&lt;/span&gt;                             &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;benutzt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;                                     &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;o&#34;&gt;+--------+&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;+----------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CT_Sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abgeleitet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Example_CT_Sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;o&#34;&gt;+--------+&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;+----------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;                                       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;benutzt&lt;/span&gt;                              &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;benutzt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;                                       &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;+--------+&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;+------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abgeleitet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;+--------+&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;+------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Abbildung 7:&lt;/strong&gt; &lt;em&gt;Klassendiagramm für die Klasse User.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Klasse User ist von der Klasse Session abgeleitet, und dann
so modifiziert worden, daß sie statt Cookies und Session-IDs die
UID des angemeldeten Users verwendet. Um diese Klasse verwenden
zu können, muß man sich eine von User abgeleitete Klasse in
local.inc definieren.&lt;/p&gt;
&lt;p&gt;Die Beispielklasse Example_User in der
local.inc-Datei zeigt, wie dies geht - da User von Session
abstammt, gilt im Prinzip alles unter Session gesagte.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Example_User&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$classname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_User&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$magic&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Abracadabra&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$that_class&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_CT_Sql&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Die Klasse wird genau wie die Session-Klasse verwendet. Da sie
einen angemeldeten Benutzer voraussetzt, kann sie nur mit der
Klasse Auth zusammen verwendet werden.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# Laden der Variablen aus der Datenbank.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;s2&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;s2&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_User&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# Die globale Variable $s ist nun bei der Session registriert.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$sess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# Die globale Variable $u ist nun bei User registriert.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;u&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# $s und $u werden auf definierte Startwerte gesetzt, wenn die
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Variable noch nicht existiert.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$u&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// $s und $uhochzählen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$u&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;title&amp;gt;Eine Testseite&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  &amp;lt;h1&amp;gt;Eine Testseite&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  Die Variable $s hat den Wert &amp;lt;?php print $s ?&amp;gt;.&amp;lt;br&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  Die Variable $u hat den Wert &amp;lt;?php print $u ?&amp;gt;.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  // Zurückspeichern der Variablen in die Datenbank
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;  page_close();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt; ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;phplib-referenz&#34;&gt;
    &lt;a href=&#34;#phplib-referenz&#34;&gt;
	PHPLIB Referenz
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;db_sql&#34;&gt;
    &lt;a href=&#34;#db_sql&#34;&gt;
	DB_Sql
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Beschreibung bezieht sich auf die Implementierung von
DB_Sql für MySQL (db_mysql.inc). Die Parameter für den Connect
können sich in Abhängigkeit vom SQL-Servertyp leicht
unterscheiden, je nachdem, welche Informationen der
Datenbankserver für den Connect verlangt.&lt;/p&gt;
&lt;h3 id=&#34;variablen&#34;&gt;
    &lt;a href=&#34;#variablen&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;Host:&lt;/dt&gt;
&lt;dd&gt;Hostname, auf dem der SQL Datenbankserver läuft.&lt;/dd&gt;
&lt;dt&gt;Database:&lt;/dt&gt;
&lt;dd&gt;Name der MySQL Database, die auf dem Server verwendet werden soll.&lt;/dd&gt;
&lt;dt&gt;User:&lt;/dt&gt;
&lt;dd&gt;Benutzername, mit dem sich die Anwendung auf dem Datenbankserver anmelden soll.&lt;/dd&gt;
&lt;dt&gt;Password:&lt;/dt&gt;
&lt;dd&gt;Paßwort, mit dem die Anmeldung erfolgen soll.&lt;/dd&gt;
&lt;dt&gt;Row:&lt;/dt&gt;
&lt;dd&gt;Zeilennummer der aktuellen Zeile eines Anfrageergebnisses, beginnend bei 0.&lt;/dd&gt;
&lt;dt&gt;Record:&lt;/dt&gt;
&lt;dd&gt;Ein assoziatives Array mit der aktuellen Zeile eines Anfrageergebnisses. Die Spalten des Ergebnisses sind unter den Spaltennamen (Schreibweise beachten!) und unter numerischen Spaltenindices verfügbar.&lt;/dd&gt;
&lt;dt&gt;Errno:&lt;/dt&gt;
&lt;dd&gt;Fehlernummer der Datenbank.&lt;/dd&gt;
&lt;dt&gt;Error:&lt;/dt&gt;
&lt;dd&gt;Klartext-Fehlerbeschreibung des Datenbankfehlers.&lt;/dd&gt;
&lt;dt&gt;Auto_Free:&lt;/dt&gt;
&lt;dd&gt;Automatische Freigabe des Anfrageergebnisses, wenn das Ergebnis vollständig gelesen wurde (true, false).&lt;/dd&gt;
&lt;dt&gt;Debug:&lt;/dt&gt;
&lt;dd&gt;true: Alle Anfragen an die Datenbank werden zwecks Fehlersuche ausgegeben.&lt;/dd&gt;
&lt;dt&gt;Halt_On_Error:&lt;/dt&gt;
&lt;dd&gt;Verhalten des Programmes im Fehlerfall:
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;no&amp;rdquo;: Der Fehler wird ignoriert.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;report&amp;rdquo;: Der Fehler wird gemeldet, aber das Programm nicht abgebrochen.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;yes:&amp;rdquo; Das Programm wird mit einer Fehlermeldung angehalten.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;funktionen&#34;&gt;
    &lt;a href=&#34;#funktionen&#34;&gt;
	Funktionen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;query($query_string):&lt;/dt&gt;
&lt;dd&gt;Die Funktion sendet die SQL-Anweisung in $query_string an den
Datenbankserver. Nach dem Absenden werden die Variablen Error
und Errno aktualisiert. Wenn die Anweisung syntaktisch
fehlerhaft war, wird die Funktion halt() aufgerufen und das
Programm gemäß den Einstellungen von $Halt_On_Error angehalten.
Wenn noch kein Datenbank-Link existiert, wird vor dem Absenden
der Query intern die Funktion connect() aufgerufen.
Die Funktion gibt die interne Result-ID zurück, die entweder
eine positive Zahl oder 0 (false) ist, wenn die Query zu einem
Fehler führte.&lt;/dd&gt;
&lt;dt&gt;next_record():&lt;/dt&gt;
&lt;dd&gt;Die Funktion setzt den Cursor auf das nächste Ergebnis in
der Ergebnismenge und aktualisiert die Variablen Record, Row,
Error und Errno.
Die Funktion liefert den Wert true, wenn ein weiteres Ergebnis
verfügbar ist und den Wert false, wenn die aktuelle
Ergebnismenge durchlaufen wurde. Wenn die Variable $Auto_Free
auf true gesetzt war, wird automatisch free_result() aufgerufen,
um den Speicher freizugeben, bevor das Ergebnis false
zurückgegeben wird.
Eine typische Anwendung von query() und next_record() sieht so
aus:&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DB_Example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;select * from table where bedingung = 1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;next_record&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Name = %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;dl&gt;
&lt;dt&gt;seek($pos):&lt;/dt&gt;
&lt;dd&gt;Die Funktion positioniert den aktuellen Zeilenzeiger
innerhalb der Ergebnismenge an die angegebene Position. Dies ist
nützlich, um innerhalb einer Ergebnismenge hin- und
herzuspringen oder eine Ergebnismenge zweimal zu lesen. Die
angegebene Position wird nicht auf Gültigkeit überprüft.
&lt;strong&gt;Hinweis:&lt;/strong&gt; Wenn $Auto_Free auf true gesetzt wird, ist die Funktion
seek() unter Umständen nicht sinnvoll einsetzbar, weil die
Ergebnismenge beim berühren des Endes der Ergebnismenge
automatisch freigegeben wird.&lt;/dd&gt;
&lt;dt&gt;metadata($table, $full=false):&lt;/dt&gt;
&lt;dd&gt;Die Funktion gibt Informationen über den Aufbau der
benannten Tabelle in Form eines zweidimensionalen Feldes zurück.
Das Feld ist in der ersten Dimension numerisch indiziert (Start
bei 0) und enthält einen Eintrag pro Spalte der Tabelle. Für
jede Tabellenspalte enthält der Eintrag die Informationen
Tabellennamen (&amp;ldquo;table&amp;rdquo;), Spaltenname (&amp;ldquo;name&amp;rdquo;), Spaltentyp
(&amp;ldquo;type&amp;rdquo;), Spaltenbreite (&amp;ldquo;len&amp;rdquo;) und Spaltenflags (&amp;ldquo;flags&amp;rdquo;).
Ist das optionale Flag auf true gesetzt, wird außerdem ein
Eintrag num_fields mit der Anzahl der Spalten in der Tabelle und
ein Eintrag meta generiert. Der Eintrag meta enhält eine Liste
mit einer Übersetzungstabelle von Feldnamen nach Spaltennummern.
Das Ergebnis von metadata() ist passend für die Funktion
show() der Klasse Table, wenn das Flag $full auf false steht.
&lt;strong&gt;Hinweis:&lt;/strong&gt; Nicht alle Datenbankinterfaces unterstützen die
Funktion metadata() gleich gut.&lt;/dd&gt;
&lt;dt&gt;table_names():&lt;/dt&gt;
&lt;dd&gt;Die Funktion gibt Informationen über die vorhandenen
Tabellen in Form eines zweidimensionales Feldes zurück.
Das Feld ist in der ersten Dimension numerisch indiziert (Start
bei 0) und enthält einen Eintrag pro Tabelle. Für jede Tabelle
enthält der Eintrag die Informationen Tabellenname
(&amp;ldquo;table_name&amp;rdquo;), Name des Tablespaces
(&amp;ldquo;tablespace_name&amp;rdquo;) und Name der Datenbank (&amp;ldquo;database&amp;rdquo;).
&lt;strong&gt;Hinweis:&lt;/strong&gt; Nicht alle Datenbankinterfaces unterstützen die
Funktion table_names() gleich gut.&lt;/dd&gt;
&lt;dt&gt;num_rows(), nf():&lt;/dt&gt;
&lt;dd&gt;Gibt die Anzahl der Zeilen der Ergebnismenge zurück. Zutreffend auf die Ergebnisse von SELECT-Anweisungen.&lt;/dd&gt;
&lt;dt&gt;affected_rows():&lt;/dt&gt;
&lt;dd&gt;Gibt die Anzahl der Zeilen zurück, die von einem INSERT, UPDATE oder DELETE-Statement betroffen waren.&lt;/dd&gt;
&lt;dt&gt;num_fields():&lt;/dt&gt;
&lt;dd&gt;Gibt die Anzahl der Spalten einer Ergebnismenge zurück. Zutreffend auf die Ergebnisse von SELECT-Anweisungen.&lt;/dd&gt;
&lt;dt&gt;f($field):&lt;/dt&gt;
&lt;dd&gt;Identisch mit return $db-&amp;gt;Record[$field].&lt;/dd&gt;
&lt;dt&gt;p($field):&lt;/dt&gt;
&lt;dd&gt;Identisch mit print $db-&amp;gt;Record[$field].&lt;/dd&gt;
&lt;dt&gt;haltmsg($msg):&lt;/dt&gt;
&lt;dd&gt;Die Funktion wird intern verwendet, um die Fehlermeldung
$msg auszugeben, wenn ein Datenbankfehler auftritt. Sie kann in
einer Unterklasse überschrieben werden, um die Fehlermeldung zu
loggen oder sonstwie zu behandeln.
Die Funktion wird nur dann aufgerufen, wenn $Halt_On_Error auf
&amp;ldquo;report&amp;rdquo; oder &amp;ldquo;yes&amp;rdquo; steht.&lt;/dd&gt;
&lt;dt&gt;halt($msg):&lt;/dt&gt;
&lt;dd&gt;Die Funktion wird intern verwendet, um die Variablen $Error
und $Errno zu aktualisieren und $Halt_On_Error auszuwerten. Sie
ruft ggf. die Funktion haltmsg() auf.
Die Funktion kann in einer Unterklasse überschrieben werden, um
eine andere Fehlerbehandlung zu implementieren.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;seitenverwaltungsfunktionen&#34;&gt;
    &lt;a href=&#34;#seitenverwaltungsfunktionen&#34;&gt;
	Seitenverwaltungsfunktionen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;funktionen-1&#34;&gt;
    &lt;a href=&#34;#funktionen-1&#34;&gt;
	Funktionen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;page_open(array()); :&lt;/dt&gt;
&lt;dd&gt;Diese Funktion muß am Anfang einer Seite aufgerufen werden.  Sie enthält eine Zuordnung von gewünschten Features der Seite zu Klassennamen. Derzeit existieren die folgenden Features:&lt;/dd&gt;
&lt;dt&gt;sess:&lt;/dt&gt;
&lt;dd&gt;Die Seite verwendet Session-Variablen.&lt;/dd&gt;
&lt;dt&gt;auth:&lt;/dt&gt;
&lt;dd&gt;Die Seite verwendet Authentisierung. Um das auth-Feature verwenden zu können, muß auch sess aktiviert sein.&lt;/dd&gt;
&lt;dt&gt;perm:&lt;/dt&gt;
&lt;dd&gt;Die Seite verwendet Benutzerrechteverwaltung. Um das perm-Feature verwenden zu können, müssen auch sess und auth aktiviert sein.&lt;/dd&gt;
&lt;dt&gt;user:&lt;/dt&gt;
&lt;dd&gt;Die Seite verwendet User-Variablen. Um das user-Feature  verwenden zu können, müssen auch sess und auth aktiviert sein.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Eine beispielhafte Anwendung sieht so aus:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;page_open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sess&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Example_Session&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dieser Aufruf erzeugt eine Instanz der Klasse Example_Session unter dem Namen $sess. Diese Instanz kann dann in Aufrufen verwendet werden ($sess-&amp;gt;register(&amp;ldquo;s&amp;rdquo;)). Die abgeleiteten Klassen, die als Parameter zu jedem Feature angegeben werden, werden in der Regel in der Datei local.inc definiert.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;page_close():&lt;/dt&gt;
&lt;dd&gt;Die Funktion muß am Ende jeder Seite aufgerufen werden
(nachdem alle registrierten Variablen ausgerechnet wurden). Sie
speichert diese Variablen zurück in der Datenbank. Momentan ist
es harmlos, page_close() auf einer Seite mehrfach aufzurufen,
aber dies kann sich in der Zukunft ändern.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;ct_sql&#34;&gt;
    &lt;a href=&#34;#ct_sql&#34;&gt;
	CT_Sql
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Um die Session-Klasse ihren Daten in einer SQL-Datenbank
abspeichern zu lassen, wird in der Session-Klasse der Name einer
Unterklasse von CT_Sql als Container $that_class eingetragen.&lt;/p&gt;
&lt;h3 id=&#34;variablen-1&#34;&gt;
    &lt;a href=&#34;#variablen-1&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;database_table:&lt;/dt&gt;
&lt;dd&gt;Name der Datenbanktabelle, in der die Session ihre Daten  speichern soll.&lt;/dd&gt;
&lt;dt&gt;database_class:&lt;/dt&gt;
&lt;dd&gt;Name der DB_Sql Unterklasse, die zum Zugriff auf die Datenbank verwendet werden soll.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Die Klasse wird von Session intern verwendet und hat keine allgemein anwendbaren Funktionen.&lt;/p&gt;
&lt;h2 id=&#34;ct_split_sql&#34;&gt;
    &lt;a href=&#34;#ct_split_sql&#34;&gt;
	CT_Split_Sql
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Diese Klasse ist praktisch mit der CT_Sql-Klasse identisch, mit
dem Unterschied, daß sie mehrere Zeilen in der Tabelle verwenden
kann, wenn die Menge der zu speichernden Daten über das
hinausgeht, was die Datenbank verarbeiten kann. Dies ist vor
allen Dingen interessant, wenn die Datenbank Probleme mit BLOBs
hat.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hinweis:&lt;/strong&gt; Die Klasse ist nicht tabellenkompatibel mit CT_Sql. Es
muß eine Tabelle active_sessions_split verwendet werden, deren
Layout in den create_database.*-Scripten im stuff-Verzeichnis
der Distribution beschrieben ist.&lt;/p&gt;
&lt;h3 id=&#34;variablen-2&#34;&gt;
    &lt;a href=&#34;#variablen-2&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;database_table:&lt;/dt&gt;
&lt;dd&gt;Name der Datenbanktabelle, in der die Session ihre Daten speichern soll.&lt;/dd&gt;
&lt;dt&gt;database_class:&lt;/dt&gt;
&lt;dd&gt;Name der DB_Sql Unterklasse, die zum Zugriff auf die Datenbank verwendet werden soll.&lt;/dd&gt;
&lt;dt&gt;split_length:&lt;/dt&gt;
&lt;dd&gt;Anzahl der Bytes, nach denen ein Session-Record aufgeteilt werden soll (Default: 4096).&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Die Klasse wird von Session intern verwendet und hat keine allgemein anwendbaren Funktionen.&lt;/p&gt;
&lt;h2 id=&#34;ct_shm&#34;&gt;
    &lt;a href=&#34;#ct_shm&#34;&gt;
	CT_Shm
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Um Sessions in System V Shared Memory-Segmenten zu speichern, muß der PHP-Interpreter mit shm-Support übersetzt worden sein (Die Ausgabe der phpinfo()-Funktion zeigt dies an) und es muß als Containerklasse bei Session CT_Shm oder eine Unterklasse davon angegeben werden.&lt;/p&gt;
&lt;h3 id=&#34;variablen-3&#34;&gt;
    &lt;a href=&#34;#variablen-3&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;max_sessions:&lt;/dt&gt;
&lt;dd&gt;Maximale Anzahl von gleichzeitig aktiven Sessions.&lt;/dd&gt;
&lt;dt&gt;shm_key:&lt;/dt&gt;
&lt;dd&gt;Der eindeutige (wichtig!) shm_key für das Shared Memory-Segment, das verwendet werden soll.&lt;/dd&gt;
&lt;dt&gt;shm_size:&lt;/dt&gt;
&lt;dd&gt;Größe des zu verwendenden Shared Memory-Segmentes in Byte.
Der Speicher wird bestellt, wenn das Segment das erste Mal
verwendet wird. Für durchschnittlich kleine Mengen von
Session-Variablen kann man als Schätzwert shm_size =
max_sessions * 600 annehmen.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Die Klasse wird von Session intern verwendet und hat keine allgemein anwendbaren Funktionen.&lt;/p&gt;
&lt;h2 id=&#34;ct_dbm&#34;&gt;
    &lt;a href=&#34;#ct_dbm&#34;&gt;
	CT_Dbm
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Um Sessions in UNIX DBM-Dateien zu speichern, muß der
PHP-Interpreter mit dem passenden DBM-Support übersetzt worden
sein (Die Ausgabe der phpinfo()-Funktion zeigt dies an) und es
muß als Containerklasse bei Session CT_Dbm bzw. eine Unterklasse
davon angegeben werden.&lt;/p&gt;
&lt;h3 id=&#34;variablen-4&#34;&gt;
    &lt;a href=&#34;#variablen-4&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;dbm_file:&lt;/dt&gt;
&lt;dd&gt;Der Pfadname der zu verwendenden DBM-Datei. Die Datei muß  bereits existieren und durch den Server beschreibbar sein.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Die Klasse wird von Session intern verwendet und hat keine allgemein anwendbaren Funktionen.&lt;/p&gt;
&lt;h2 id=&#34;ct_ldap&#34;&gt;
    &lt;a href=&#34;#ct_ldap&#34;&gt;
	CT_Ldap
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Um Sessions auf einem LDAP-Server zu speichern, muß der
PHP-Interpreter mit LDAP-Support übersetzt worden sein (Die
Ausgabe der phpinfo()-Funktion zeigt dies an) und es
muß als Containerklasse bei Session CT_Ldap bzw. muß als
Containerklasse bei Session CT_Dbm bzw. eine Unterklasse
davon angegeben werden.&lt;/p&gt;
&lt;h3 id=&#34;variablen-5&#34;&gt;
    &lt;a href=&#34;#variablen-5&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;ldap_host:&lt;/dt&gt;
&lt;dd&gt;Hostname des LDAP-Servers, der verwendet werden soll.&lt;/dd&gt;
&lt;dt&gt;ldap_port:&lt;/dt&gt;
&lt;dd&gt;Portnummer des LDAP-Servers, der verwendet werden soll (Default: 389).&lt;/dd&gt;
&lt;dt&gt;basedn:&lt;/dt&gt;
&lt;dd&gt;DN, unterhalb dessen die Daten abgelegt werden sollen.&lt;/dd&gt;
&lt;dt&gt;rootdn:&lt;/dt&gt;
&lt;dd&gt;Wurzel-DN des LDAP-Servers, wird benötigt, um sich mit dem Server verbinden zu können.&lt;/dd&gt;
&lt;dt&gt;rootpw:&lt;/dt&gt;
&lt;dd&gt;Zur rootdn passendes Paßwort.&lt;/dd&gt;
&lt;dt&gt;objclass:&lt;/dt&gt;
&lt;dd&gt;Name der objectclass, der von PHPLIB zu werden ist (siehe auch ldap.ldif im stuff-Verzeichnis der Distribution)&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Die Klasse wird von Session intern verwendet und hat keine allgemein anwendbaren Funktionen.&lt;/p&gt;
&lt;h2 id=&#34;session&#34;&gt;
    &lt;a href=&#34;#session&#34;&gt;
	Session
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Klasse Session verwaltet eine Liste von globalen
Variablennamen, und lädt und speichert die Typen und Werte
dieser Variablen in serialisierter Form am Anfang und Ende jeder
Seite. Die Variablen können vom Typ Skalar (string, integer,
float) oder Array sein. Objekte können ebenfalls gesichert und
geladen werden, wenn sie die Instanzvariablen classname und
persistent_slots haben, damit der Name ihrer Klasse und die zu
sichernden Slots bestimmt werden können.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;classname:&lt;/dt&gt;
&lt;dd&gt;Name der Klasse. Alle von PHPLIB zu sichernden oder zu ladenden Objekte müssen einen Slot classname haben, der den genauen Namen der Klasse enthält.&lt;/dd&gt;
&lt;dt&gt;magic:&lt;/dt&gt;
&lt;dd&gt;Ein geheimer String, der verwendet wird, um die Session-IDs schwerer ratbar zu machen. Der String kann irgendeinen Wert haben. Es ist nur wichtig, diesen Wert geheim zu halten.&lt;/dd&gt;
&lt;dt&gt;mode:&lt;/dt&gt;
&lt;dd&gt;Betriebsart. Entweder &amp;ldquo;cookie&amp;rdquo; (empfohlen) oder &amp;ldquo;get&amp;rdquo;. In cookie-Mode wird die Session-ID vom Browser per Cookie eingeliefert, in get-Mode als CGI-Parameter einer URL.&lt;/dd&gt;
&lt;dt&gt;fallback_mode:&lt;/dt&gt;
&lt;dd&gt;Wenn $mode = &amp;ldquo;cookie&amp;rdquo; ist, kann man diese Variable auf den Wert &amp;ldquo;get&amp;rdquo; setzen. PHPLIB verwendet dann automatisch get-Mode, wenn auf dem zugreifenden Browser cookies abgeschaltet sind.&lt;/dd&gt;
&lt;dt&gt;lifetime:&lt;/dt&gt;
&lt;dd&gt;Lebensdauer des Cookies, den PHPLIB verwendet, in Minuten.
Wenn dieser Wert auf 0 steht (default), werden Session-Cookies
verwendet. Diese Cookies haben dieselbe Lebensdauer wie der
Browser des Anwenders und werden nicht in der cookies.txt-Datei
gespeichert. Dies ist die empfohlene Betriebsart.&lt;/dd&gt;
&lt;dt&gt;gc_time:&lt;/dt&gt;
&lt;dd&gt;PHPLIB führt in Abständen eine garbage collection auf der
Tabelle active_sessions durch. Dabei werden alle Session-Daten
gelöscht, die älter als gc_time Minuten sind. Der Standardwert
ist 1440 (ein Tag) und kann so beibehalten werden.&lt;/dd&gt;
&lt;dt&gt;gc_probability:&lt;/dt&gt;
&lt;dd&gt;Bei jedem Zugriff auf eine Session wird mit der
Wahrscheinlichkeit gc_probability Prozent eine
Garbage-Collection ausgelöst. Der Standardwert ist 5, was für
Server mit niedrigem Traffic in Ordnung ist. Auf stark
belasteten Servern kann der Wert auf 1 gesetzt werden.&lt;/dd&gt;
&lt;dt&gt;allowcache:&lt;/dt&gt;
&lt;dd&gt;Zugelassene Werte sind &amp;ldquo;no&amp;rdquo;, &amp;ldquo;private&amp;rdquo; (Default) und
&amp;ldquo;public&amp;rdquo;. Der Wert bestimmt, welche HTTP-Header erzeugt werden,
die das Caching von PHPLIB-Seiten gestatten. Mit der Einstellung
&amp;ldquo;no&amp;rdquo; wird das Speichern der Seiten in Caches generell verboten,
mit der Einstellung &amp;ldquo;private&amp;rdquo; wird dem Browser des Anwenders das
Speichern der Seite im Cache gestattet, aber öffentlichen Caches
verboten und mit der Einstellung &amp;ldquo;public&amp;rdquo; wird das Cachen der
erzeugten Seiten generell erlaubt.&lt;/dd&gt;
&lt;dt&gt;allowcache_expires:&lt;/dt&gt;
&lt;dd&gt;Das Speichern der erzeugten Seiten wird den Caches für
maximal die hier konfigurierte Anzahl von Minuten erlaubt
(Default: 1440, ein Tag).&lt;/dd&gt;
&lt;dt&gt;that_class:&lt;/dt&gt;
&lt;dd&gt;Name der Containerklasse (eine Unterklasse von CT_Sql,
CT_Split_Sql, CT_Shm, CT_Dbm, CT_Ldap), die von der Session
verwendet wird, um ihre Daten zu laden und zu speichern.&lt;/dd&gt;
&lt;dt&gt;auto_init:&lt;/dt&gt;
&lt;dd&gt;Name einer Datei aus dem include-Verzeichnis, die beim
Erstellen einer neuen Session geladen und ausgeführt wird. Die
Ausführung der Datei erfolgt im Kontext einer Funktion, sodaß
alle zu definierenden globalen Variablen mit &amp;ldquo;global&amp;rdquo; importiert
werden müssen.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;funktionen-2&#34;&gt;
    &lt;a href=&#34;#funktionen-2&#34;&gt;
	Funktionen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;register(&amp;ldquo;varname&amp;rdquo;):&lt;/dt&gt;
&lt;dd&gt;Die Variable mit dem angegebenen Namen wird bei der Session
registriert. Der Name kann sich auf eine globale Variable vom
Typ Skalar, Array oder Objekt beziehen. Wenn es sich bei der
Variablen um ein Objekt handelt, muß es die folgenden beiden
Slots besitzen:&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;classname: String, Name der Klasse des Objektes.&lt;/p&gt;
&lt;p&gt;persistent_slots: Array von Strings, Namen der Slots des Objektes, die von der Session gesichert werden sollen.&lt;/p&gt;
&lt;p&gt;Es ist ohne Nachteile möglich, denselben Namen mehrmals zu registrieren.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;unregister(&amp;ldquo;varname&amp;rdquo;):&lt;/dt&gt;
&lt;dd&gt;Die Variable mit dem angegebenen Namen wird bei der Session
wieder ent-registriert. Die Variable wird nicht gelöscht, ihr
Wert ist bis zum Ende der Seite weiterhin verfügbar, aber ihr
Wert ist nicht mehr persistent und wird am Ende der Seite
verfallen.&lt;/dd&gt;
&lt;dt&gt;delete():&lt;/dt&gt;
&lt;dd&gt;Die aktuelle Session wird zerstört und der Session-Cookie
wird gelöscht. Der Eintrag für die Session wird aus der
Datenbank entfernt.
Weil der Session-Cookie gelöscht wird, muß diese Funktion sehr
früh auf einer Seite aufgerufen werden (bevor irgendein HTML
ausgegeben wurde). Da die Session durch die Funktion zerstört
wird, darf am Ende der Seite nicht mehr page_close() aufgerufen
werden. Die zur Session gehörenden Variablen sind auf der Seite
selbst noch verfügbar. Sie verfallen am Ende der Seite.
Im cookie-Mode ist es möglich, nach dem Aufruf von delete() eine
neue Session aufzumachen, indem ein weiterer page_open()-Aufruf
erzeugt wird. Das erlaubt es auch, Variablen aus der alten
Session bei der neuen Session zu re-registrieren und so zu
übernehmen.&lt;/dd&gt;
&lt;dt&gt;url($url):&lt;/dt&gt;
&lt;dd&gt;Der Funktion wird eine URL übergeben, so wie man sie in
einem A, FRAME oder FORM-Tag verwenden würde. Im cookie-Mode
wird die URL so ausgegeben, im get-Mode wird die aktuelle
Session-ID in die URL mit eingebaut.
Die Funktion gibt die modifizierte URL als Ergebnis zurück.&lt;/dd&gt;
&lt;dt&gt;purl($url):&lt;/dt&gt;
&lt;dd&gt;Eine Abkürzung für print $sess-&amp;gt;url($url).&lt;/dd&gt;
&lt;dt&gt;self_url():&lt;/dt&gt;
&lt;dd&gt;Die Funktion liefert eine URL, die auf die aktuelle Seite
zeigt, zurück. Im get-Mode ist die aktuelle Session-ID dabei
schon enthalten.&lt;/dd&gt;
&lt;dt&gt;pself_url():&lt;/dt&gt;
&lt;dd&gt;Eine Abkürzung für print $sess-&amp;gt;self_url().&lt;/dd&gt;
&lt;dt&gt;hidden_session():&lt;/dt&gt;
&lt;dd&gt;Erzeugt ein HIDDEN-Element für Formulare mit dem Session-Namen und der ID.&lt;/dd&gt;
&lt;dt&gt;add_query($qarray):&lt;/dt&gt;
&lt;dd&gt;Die Funktion erzeugt einen Query-String, der an eine aktuelle URL angehängt werden kann. Beispiel:&lt;/dd&gt;
&lt;/dl&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;?php 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$sess-&amp;gt;pself_url&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$sess-&amp;gt;padd_query&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;(array(&amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;again&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;=&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;yes&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;))
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;?&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Reload&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;dl&gt;
&lt;dt&gt;padd_query($qarray):&lt;/dt&gt;
&lt;dd&gt;Eine Abkürzung für print $this-&amp;gt;add_query($qarray).&lt;/dd&gt;
&lt;dt&gt;reimport_get_vars():&lt;/dt&gt;
&lt;dt&gt;reimport_post_vars():&lt;/dt&gt;
&lt;dt&gt;reimport_cookie_vars():&lt;/dt&gt;
&lt;dd&gt;Wenn man eine FORM-Variable registriert, wird die
Formularvariable in PHP importiert, danach page_open()
aufgerufen und der alte Wert dieser Variablen aus der Datenbank
überschreibt den neuen Wert aus dem Formular.
In einem solchen Fall kann man mit der Funktion
reimport_x_vars() die Variablenwerte reimportiert. Im
allgemeinen ist dies ein Fehler, weil dadurch Werte aus dem
Internet ohne Konsistenzprüfung in die Anwendung übernommen
werden. Die Funktion sollte nicht verwendet werden.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;auth&#34;&gt;
    &lt;a href=&#34;#auth&#34;&gt;
	Auth
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Auth-Klasse im PHPLIB verwaltet alle Anmeldevorgänge und
merkt sich, wann sich der Benutzer unter welchem Namen
angemeldet hat. Da sich die Auth-Klasse selbst persistent macht,
setzt sie voraus, daß auf allen Seiten, auf denen Auth verwendet
wird, auch Session verwendet wird.&lt;/p&gt;
&lt;h3 id=&#34;variablen-6&#34;&gt;
    &lt;a href=&#34;#variablen-6&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;classname:&lt;/dt&gt;
&lt;dt&gt;persistent_slots:&lt;/dt&gt;
&lt;dd&gt;Diese Variablen sind notwendig, damit sich Auth in der
Session speichern und laden kann. Normalerweise muß man
classname auf den Namen seiner Unterklasse setzen und braucht
persistent_slots nicht anzupassen.&lt;/dd&gt;
&lt;dt&gt;lifetime:&lt;/dt&gt;
&lt;dd&gt;Nachdem ein Benutzer $lifetime Minuten lang keine Seiten
abgerufen hat, muß er sich neu am System anmelden, um
weiterarbeiten zu können.&lt;/dd&gt;
&lt;dt&gt;mode:&lt;/dt&gt;
&lt;dd&gt;Entweder &amp;ldquo;log&amp;rdquo; oder &amp;ldquo;reg&amp;rdquo;. Wenn die Variable den Wert &amp;ldquo;log&amp;rdquo;
hat, werden die Funktionen auth_loginform() und
auth_validatelogin() aufgerufen. Im &amp;ldquo;reg&amp;rdquo;-Mode werden
stattdessen auth_registerform() und auth_doregister() verwendet,
mit denen sich ein Anwender beim System anmelden kann.&lt;/dd&gt;
&lt;dt&gt;database_class:&lt;/dt&gt;
&lt;dd&gt;Der Name der Datenbank-Klasse über die die Auth-Funktion in
der Benutzertabelle nachschlagen soll.&lt;/dd&gt;
&lt;dt&gt;database_table:&lt;/dt&gt;
&lt;dd&gt;Der Name der Datenbank-Tabelle, in der die
Benutzerinformationen gespeichert sind.&lt;/dd&gt;
&lt;dt&gt;magic:&lt;/dt&gt;
&lt;dd&gt;Ein zufälliger, geheimer String, der bei der Ermittlung
neuer User-IDs verwendet wird.&lt;/dd&gt;
&lt;dt&gt;nobody:&lt;/dt&gt;
&lt;dd&gt;Schalter: Wenn er auf true gesetzt wird, wird Default
Authentication verwendet, d.h. es erscheint kein Loginformular,
sondern der Anwender wird als nobody eingeloggt.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;funktionen-3&#34;&gt;
    &lt;a href=&#34;#funktionen-3&#34;&gt;
	Funktionen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;url():&lt;/dt&gt;
&lt;dd&gt;Diese Funktion entspricht der Funktion url() von Session.&lt;/dd&gt;
&lt;dt&gt;purl():&lt;/dt&gt;
&lt;dd&gt;Diese Funktion entspricht der Funktion purl() von Session.&lt;/dd&gt;
&lt;dt&gt;login_if($t):&lt;/dt&gt;
&lt;dd&gt;Diese Funktion kann verwendet werden, um die Anzeige eines
Loginformulars zu erzwingen, wenn Default Authentication
verwendet wird.&lt;/dd&gt;
&lt;dt&gt;unauth($nobody = false):&lt;/dt&gt;
&lt;dd&gt;Diese Funktion meldet den aktuellen Benutzer beim System ab,
sodaß beim nächsten Seitenaufruf ein neuer Login notwendig wird.
Der Benutzername bleibt jedoch erhalten, sodaß eine korrekt
geschriebene Login-Seite diesen Namen als Vorgabe präsentieren
kann.
Seit PHPLIB Version 6 ist es möglich, die Funktion mit dem
Parameter &amp;ldquo;true&amp;rdquo; aufzurufen, wenn man den Benutzer nicht einfach
abmelden, sondern stattdessen wieder als nobody anmelden möchte.
Beispielanwendung: $auth-&amp;gt;unauth($auth-&amp;gt;nobody).&lt;/dd&gt;
&lt;dt&gt;logout($nobody = $this-&amp;gt;nobody):&lt;/dt&gt;
&lt;dd&gt;Diese Funktion entspricht der Funktion unauth(), außer das
alle Logininformation einschließlich des Benutzernamens
beseitigt wird. Bei der Neuanmeldung muß der Benutzer das
gesamte Loginformular neu ausfüllen, es existieren keine
Vorgaben.&lt;/dd&gt;
&lt;dt&gt;is_authenticated():&lt;/dt&gt;
&lt;dd&gt;Diese Funktion liefert falsch, wenn der Benutzer keine
gültige Anmeldung hat oder die aktuelle uid, wenn die Anmeldung
gültig ist.&lt;/dd&gt;
&lt;dt&gt;auth_preauth():&lt;/dt&gt;
&lt;dd&gt;Diese Funktion kann durch den Entwickler überschrieben
werden. Sie wird als allererste Funktion im Loginprozeß
aufgerufen und kann entweder false oder eine gültige uid
zurückliefern (Default: Die Funktion liefert immer false).
Wenn die Funktion eine gültige User-ID zurückliefert, wird der
Loginprozeß nicht durchgeführt, sondern diese User-ID verwendet.
Die Funktion könnte zum Beispiel mit Hilfe von Cookies im
Browser des Users ein automatisches Login durchführen, sodaß der
Benutzer sich nicht mehr anzumelden braucht, wenn sein Browser
diese Cookies akzeptiert.&lt;/dd&gt;
&lt;dt&gt;auth_loginform():&lt;/dt&gt;
&lt;dd&gt;Diese Funktion muß durch den Entwickler überschrieben werden
und sollte das HTML ausgeben, das das Loginformular zeichnet.&lt;/dd&gt;
&lt;dt&gt;auth_validatelogin():&lt;/dt&gt;
&lt;dd&gt;Diese Funktion wird aufgerufen, wenn der Benutzer das durch
auth_loginform() gezeichnete Loginformular absendet. Sie muß die
Benutzereingaben prüfen und entweder false oder eine gültige
User-ID zurückliefern.
Die Funktion sollte außerdem $this-&amp;gt;auth[&amp;ldquo;uname&amp;rdquo;] mit dem
Benutzernamen des Users belegen und kann optional
$this-&amp;gt;auth[&amp;ldquo;perm&amp;rdquo;] für die Verwendung durch die Perm-Klasse
mit den Zugriffsrechten des Users vorbelegen.&lt;/dd&gt;
&lt;dt&gt;auth_registerform():&lt;/dt&gt;
&lt;dt&gt;auth_doregister():&lt;/dt&gt;
&lt;dd&gt;Im reg-Mode werden diese beiden Funktionen statt
auth_loginform() und auth_validatelogin() aufgerufen. Sie sollen
ein Anmeldeformular für neue User zeichnen bzw. die Anmeldung
des Benutzers in die Datenbank eintragen.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;perm&#34;&gt;
    &lt;a href=&#34;#perm&#34;&gt;
	Perm
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Perm-Klasse im PHPLIB verwaltet Benutzerrechte und kann
prüfen, ob ein angemeldeter Benutzer Zugang zu einer Seite oder
einer Funktion hat. Benutzerrechte setzen einen angemeldeten
Benutzer voraus, daher setzt Perm voraus, daß auf allen Seiten,
auf denen Perm verwendet wird, auch Auth und Session verwendet
werden.&lt;/p&gt;
&lt;h3 id=&#34;variablen-7&#34;&gt;
    &lt;a href=&#34;#variablen-7&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;permissions:&lt;/dt&gt;
&lt;dd&gt;Ein Array, das Namen von Zugriffsrechten mit den zugehörigen
Bitmustern verbindet.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;funktionen-4&#34;&gt;
    &lt;a href=&#34;#funktionen-4&#34;&gt;
	Funktionen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;check($required):&lt;/dt&gt;
&lt;dd&gt;Die Funktion wird mit einer Liste von Zugriffsrechten
aufgerufen, die für das Ansehen der betreffenden Seite notwendig
sind. Wenn der aktuelle User dieser Rechte nicht hat, wird ihm
das Ansehen der Seite verweigert, d.h. die Funktion
perm_invalid() wird aufgerufen.
Die Funktion perm_invalid() wird ebenfalls aufgerufen, wenn in
den Rechten des Benutzers oder den von der Seite verlangten
Rechten illegale Rechtenamen verwendet werden.&lt;/dd&gt;
&lt;dt&gt;have_perm($required):&lt;/dt&gt;
&lt;dd&gt;Die Funktion arbeitet ähnlich wie check(), ruft aber keine
Fehlerseite auf, sondern liefert entweder true (der Benutzer hat
die verlangten Rechte) oder false (der Benutzer hat die
verlangten Rechte nicht).&lt;/dd&gt;
&lt;dt&gt;perm_sel($name, $current = &amp;ldquo;&amp;rdquo;, $class = &amp;ldquo;&amp;rdquo;):&lt;/dt&gt;
&lt;dd&gt;Die Funktion liefert als Ergebnis einen String, der einen
HTML SELECT-Tag mit allen möglichen Zugriffsrechten als
OPTION-Tags enthält. Wenn ein Wert für $current angegeben wird,
ist dieses Zugriffsrecht im Option-Tag als SELECTED markiert.
Wenn ein Wert für $class angegeben wird, haben alle erzeugten
HTML-Elemente die angegebene Klasse als CSS stylesheet-Klasse.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;user&#34;&gt;
    &lt;a href=&#34;#user&#34;&gt;
	User
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Die Klasse User ist eine Unterklasse von Session. Sie
funktioniert im wesentlichen genauso wie Session, nur daß sie
Werte benutzerbezogen speichert. Das bedeutet, daß bei der
Klasse User registrierte Variablen nur auf Seiten zur Verfügung
stehen, die authentisiert sind. Das user-Features kann also nur
zusammen mit auth und sess verwendet werden.&lt;/p&gt;
&lt;h3 id=&#34;variablen-8&#34;&gt;
    &lt;a href=&#34;#variablen-8&#34;&gt;
	Variablen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;classname:&lt;/dt&gt;
&lt;dd&gt;Name der Klasse.&lt;/dd&gt;
&lt;dt&gt;magic:&lt;/dt&gt;
&lt;dt&gt;mode:&lt;/dt&gt;
&lt;dt&gt;fallback_mode:&lt;/dt&gt;
&lt;dd&gt;In dieser Klasse ohne Bedeutung.&lt;/dd&gt;
&lt;dt&gt;lifetime:&lt;/dt&gt;
&lt;dd&gt;In dieser Klasse ohne Bedeutung. Stattdessen sollte
$auth-&amp;gt;lifetime verwendet werden.&lt;/dd&gt;
&lt;dt&gt;gc_time:&lt;/dt&gt;
&lt;dd&gt;Funktionsfähig, aber wahrscheinlich nicht sinnvoll.&lt;/dd&gt;
&lt;dt&gt;gc_probability:&lt;/dt&gt;
&lt;dd&gt;Funktionsfähig, aber wahrscheinlich nicht sinnvoll. Sollte
auf 0 gesetzt werden.&lt;/dd&gt;
&lt;dt&gt;that_class:&lt;/dt&gt;
&lt;dd&gt;Name der Containerklasse, die zur Verwaltung der Variablen
verwendet wird.&lt;/dd&gt;
&lt;dt&gt;auto_init:&lt;/dt&gt;
&lt;dd&gt;In dieser Klasse ohne Bedeutung.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;funktionen-5&#34;&gt;
    &lt;a href=&#34;#funktionen-5&#34;&gt;
	Funktionen:
    &lt;/a&gt;
&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;register($varname):&lt;/dt&gt;
&lt;dt&gt;unregister($varname):&lt;/dt&gt;
&lt;dt&gt;delete():&lt;/dt&gt;
&lt;dt&gt;reimport_get_vars():&lt;/dt&gt;
&lt;dt&gt;reimport_post_vars():&lt;/dt&gt;
&lt;dt&gt;reimport_cookie_vars():&lt;/dt&gt;
&lt;dd&gt;Funktioniert erwartungsgemäß.&lt;/dd&gt;
&lt;dt&gt;url($url):&lt;/dt&gt;
&lt;dt&gt;purl($url):&lt;/dt&gt;
&lt;dt&gt;self_url():&lt;/dt&gt;
&lt;dt&gt;pself_url():&lt;/dt&gt;
&lt;dd&gt;In dieser Klasse ohne Bedeutung.
&lt;br&gt;&lt;/dd&gt;
&lt;/dl&gt;
</description>
    </item>
    
  </channel>
</rss>
